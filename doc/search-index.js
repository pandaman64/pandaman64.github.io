var N=null,E="",T="t",U="u",searchIndex={};
var R=["UnicodeXID","result","context","An error returned when an operation could not be completed…","usize","Read bytes asynchronously.","try_from","try_into","borrow","borrow_mut","type_id","to_owned","clone_into","typeid","errorkind","seekfrom","ordering","formatter","option","Advance the internal cursor of the slice.","poll_read_vectored","Attempt to read from the `AsyncRead` into `bufs` using…","poll_write_vectored","Attempt to write bytes from `bufs` into the object using…","ErrorKind","SeekFrom","AsyncRead","AsyncWrite","AsyncSeek","AsyncBufRead","IoSliceMut","poll_flush","poll_close","A custom trait object for polling futures, roughly akin to…","unsafefutureobj","futureobj","spawnerror","Spawns a future that will be run to completion.","localfutureobj","Determines whether the executor is able to spawn new tasks.","Indicates that the associated task is ready to make…","to_string","into_result","from_error","rawwaker","rawwakervtable","partial_cmp","future","Changes the success value of this `Poll` with the closure…","Changes the error value of this `Poll` with the closure…","wake_by_ref","status_local","SpawnError","WakerRef","LocalFutureObj","FutureObj","LocalSpawn","UnsafeFutureObj","RawWaker","RawWakerVTable","An iterator over all occurrences of the needles in a…","An iterator over all occurrences of the needle in a…","memchr2","memchr3","memchr","Creates a new iterator that yields all positions of needle…","into_iter","size_hint","next_back","proc_macro2","tokenstream","delimiter","set_span","spacing","Creates a new suffixed integer literal with the specified…","literal","Creates a new unsuffixed integer literal with the…","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","string","proc_macro2::token_stream","tokentree","intoiterator","intoiter","lexerror","from_iter","TokenTree","Delimiter","TokenStream","Literal","LexError","IntoIter","Returns true if this error is a result of the channel…","is_disconnected","Returns true if this error is a result of the receiver…","trysenderror","senderror","poll_ready","is_closed","Returns whether this channel is closed without needing a…","close_channel","Closes this channel from the sender side, preventing any…","disconnect","Disconnects this sender from the channel, closing it if…","start_send","Send a message on the channel.","same_receiver","Returns whether the senders send to the same receiver.","tryrecverror","Tries to receive the next message without notifying a…","futures_channel","futures_channel::mpsc","try_poll_next","futures_channel::oneshot","canceled","poll_next","is_terminated","SendError","TrySendError","UnboundedSender","Receiver","UnboundedReceiver","TryRecvError","into_inner","For use by `ToTokens` implementations.","Convert `self` directly into a `TokenStream` object.","Span associated with this `IdentFragment`.","to_token_stream","into_token_stream","TokenStreamExt","IdentFragment","A word of Rust code, which may be a keyword or legal…","paren_token","pub_token","Attributes tagged on the field.","colon_token","bracket_token","dot_token","eq_token","brace_token","for_token","lt_token","gt_token","lifetimes","Returned by `Generics::split_for_impl`.","semi_token","mutability","const_token","defaultness","type_token","crate_token","generics","static_token","trait_token","asyncness","unsafety","default","colon2_token","enum_token","struct_token","union_token","let_token","extern_token","group_token","impl_token","bang_token","star_token","and_token","lifetime","box_token","dot2_token","underscore_token","leading_colon","as_token","A structured list within an attribute, like `derive(Copy,…","A name-value pair within an attribute, like `feature =…","Named fields of a struct or struct variant such as `Point…","Unnamed fields of a tuple struct or tuple variant such as…","A public visibility level: `pub`.","A crate-level visibility: `crate`.","A visibility level restricted to some path: `pub(self)` or…","A slice literal expression: `[a, b, c, d]`.","An assignment expression: `a = compute()`.","A compound assignment expression: `counter += 1`.","An async block: `async { ... }`.","An await expression: `fut.await`.","A binary operation: `a + b`, `a * b`.","A blocked scope: `{ ... }`.","A box expression: `box f`.","A `break`, with an optional label to break and an optional…","A function call expression: `invoke(a, b)`.","A cast expression: `foo as f64`.","A closure expression: `|a, b| a + b`.","A `continue`, with an optional label.","Access of a named struct field (`obj.k`) or unnamed tuple…","A for loop: `for pat in expr { ... }`.","An expression contained within invisible delimiters.","An `if` expression with an optional `else` block: `if expr…","A square bracketed indexing expression: `vector[2]`.","A `let` guard: `let Some(x) = opt`.","A literal in place of an expression: `1`, `\"foo\"`.","Conditionless loop: `loop { ... }`.","A macro invocation expression: `format!(\"{}\", q)`.","A `match` expression: `match n { Some(n) => {}, None => {}…","A method call expression: `x.foo::<T>(a, b)`.","A parenthesized expression: `(a + b)`.","A path like `std::mem::replace` possibly containing…","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","A referencing operation: `&a` or `&mut a`.","An array literal constructed from one repeated element:…","A `return`, with an optional value to be returned.","A struct literal expression: `Point { x: 1, y: 1 }`.","A try-expression: `expr?`.","A try block: `try { ... }`.","A tuple expression: `(a, b, c, d)`.","A type ascription expression: `foo: f64`.","A unary operation: `!x`, `*x`.","An unsafe block: `unsafe { ... }`.","A while loop: `while expr { ... }`.","A yield expression: `yield expr`.","A generic type parameter: `T: Into<String>`.","A lifetime definition: `'a: 'b + 'c + 'd`.","A const generic parameter: `const LENGTH: usize`.","Lifetime","A type predicate in a `where` clause: `for<'c> Foo<'c>:…","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","An equality predicate in a `where` clause (unsupported).","The `self` argument of an associated method, whether taken…","A foreign function in an `extern` block.","A foreign static item in an `extern` block: `static ext:…","A foreign type in an `extern` block: `type void`.","A macro invocation within an extern block.","An associated constant within an impl block.","A method within an impl block.","An associated type within an impl block.","A macro invocation within an impl block.","Verbatim","A constant item: `const MAX: u16 = 65535`.","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.","An `extern crate` item: `extern crate serde`.","A free-standing function: `fn process(n: usize) ->…","A block of foreign items: `extern \"C\" { ... }`.","An impl block providing trait or associated items:…","A macro invocation, which includes `macro_rules!`…","A 2.0-style declarative macro introduced by the `macro`…","A module or module declaration: `mod m` or `mod m { ... }`.","A static item: `static BIKE: Shed = Shed(42)`.","A struct definition: `struct Foo<A> { x: A }`.","A trait definition: `pub trait Iterator { ... }`.","A trait alias: `pub trait SharableIterator = Iterator +…","A type alias: `type Result<T> = std::result::Result<T,…","A union definition: `union Foo<A, B> { x: A, y: B }`.","A use declaration: `use std::collections::HashMap`.","An associated constant within the definition of a trait.","A trait method within the definition of a trait.","An associated type within the definition of a trait.","A macro invocation within the definition of a trait.","A path prefix of imports in a `use` item: `std::...`.","An identifier imported by a `use` item: `HashMap`.","An renamed identifier imported by a `use` item: `HashMap…","A glob import in a `use` item: `*`.","A braced group of imports in a `use` item: `{A, B, C}`.","A UTF-8 string literal: `\"foo\"`.","A byte string literal: `b\"foo\"`.","A byte literal: `b'f'`.","A character literal: `'a'`.","An integer literal: `1` or `1u16`.","A floating point literal: `1f64` or `1.
searchIndex[",",0,[[],[[","]]]],[8,","tcpbuilder","tcplistener","tcpstream","socketaddr","udpbuilder","Binds this socket to the specified address.","udpsocket","Sets the value for the `IP_TTL` option on this socket.","Sets the value for the `IPV6_V6ONLY` option on this socket.","reuse_address","Set value for the `SO_REUSEADDR` option on this socket.","get_reuse_address","Check the `SO_REUSEADDR` option on this socket.","take_error","Get the value of the `SO_ERROR` option on this socket.","reuse_port","Set value for the `SO_REUSEPORT` option on this socket.","get_reuse_port","Check the value of the `SO_REUSEPORT` option on this socket.","Sets whether keepalive messages are enabled to be sent on…","Returns whether keepalive messages are enabled on this…","duration","Sets the `SO_RCVTIMEO` option for this socket.","Gets the value of the `SO_RCVTIMEO` option for this socket.","Sets the `SO_SNDTIMEO` option for this socket.","Gets the value of the `SO_SNDTIMEO` option for this socket.","Gets the value of the `IP_TTL` option for this socket.","set_only_v6","Gets the value of the `IPV6_V6ONLY` option for this socket.","set_nonblocking","set_linger","Sets the linger duration of this socket by setting the…","reads the linger duration for this socket by getting the…","set_recv_buffer_size","Sets the value of the `SO_RCVBUF` option on this socket.","recv_buffer_size","Gets the value of the `SO_RCVBUF` option on this socket.","set_send_buffer_size","Sets the value of the `SO_SNDBUF` option on this socket.","send_buffer_size","Gets the value of the `SO_SNDBUF` option on this socket.","ipv4addr","set_read_timeout_ms","set_read_timeout","read_timeout_ms","read_timeout","set_write_timeout_ms","set_write_timeout","write_timeout_ms","write_timeout","tosocketaddrs","as_raw_fd","from_raw_fd","TcpBuilder","UdpBuilder","UnixTcpBuilderExt","UnixUdpBuilderExt","TcpStreamExt","TcpListenerExt","UdpSocketExt","pin_project","An attribute to provide way to refer to the projected type…","Register a signal action without checking for forbidden…","pollopt","Removes all options represented by `other` from `self`.","Returns true if `self` is a superset of `other`.","local_addr","try_clone","Creates a new independently owned handle to the underlying…","Sends data on the socket to the address previously bound…","A collection of readiness events.","reregister","deregister","mio::event","mio::unix","register","mio::net","unixready","into_raw_fd","readiness","Registration","SetReadiness","TcpStream","TcpListener","UdpSocket","EventedFd","UnixReady","set_nodelay","Sets the value of the `TCP_NODELAY` option on this socket.","Gets the value of the `TCP_NODELAY` option on this socket.","set_keepalive","keepalive","only_v6","set_broadcast","Sets the value of the `SO_BROADCAST` option for this socket.","broadcast","Gets the value of the `SO_BROADCAST` option for this socket.","set_multicast_loop_v4","Sets the value of the `IP_MULTICAST_LOOP` option for this…","multicast_loop_v4","Gets the value of the `IP_MULTICAST_LOOP` option for this…","set_multicast_ttl_v4","Sets the value of the `IP_MULTICAST_TTL` option for this…","multicast_ttl_v4","Gets the value of the `IP_MULTICAST_TTL` option for this…","set_multicast_loop_v6","Sets the value of the `IPV6_MULTICAST_LOOP` option for…","multicast_loop_v6","Gets the value of the `IPV6_MULTICAST_LOOP` option for…","set_ttl","join_multicast_v4","Executes an operation of the `IP_ADD_MEMBERSHIP` type.","join_multicast_v6","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","ipv6addr","leave_multicast_v4","Executes an operation of the `IP_DROP_MEMBERSHIP` type.","leave_multicast_v6","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","Receives data on the socket from the remote address to…","unixdatagram","peer_addr","recv_from","Receives data from the socket.","shutdown","unixlistener","accept_std","Accepts a new incoming connection to this listener.","Returns the local socket address of this listener.","Returns the value of the `SO_ERROR` option.","unixstream","from_stream","Shuts down the read, write, or both halves of this…","read_bufs","Read in a list of buffers all at once.","write_bufs","Write a list of buffers all at once.","UnixDatagram","UnixListener","UnixStream","connect","Creates a future which will open a file for reading and…","Queries the file system metadata for a path.","set_permissions","permissions","openoptions","tokio::fs","metadata","registration","poll_read_ready","poll_write_ready","with_capacity","get_pin_mut","Returns a reference to the internally buffered data.","Gets a reference to the underlying reader.","Gets a mutable reference to the underlying reader.","Gets a pinned mutable reference to the underlying reader.","Read bytes from a source.","Pull some bytes from this source into the specified…","read_to_string","An extension trait which adds utility methods to…","Writes an unsigned 8-bit integer to the underlying writer.","WriteHalf","tokio::net","from_std","Connects the UDP socket setting the default destination…","Returns a future that sends data on the socket to the…","tokio::net::udp","reuniteerror","Returns a future that receives a single datagram on the…","Returns a future that receives a single datagram message…","Attempts to put the two \"halves\" of a `UdpSocket` back…","ReadHalf","Creates an unnamed pair of connected sockets.","Connects the socket to the specified address.","Sends data on the socket to the socket's peer.","Sends data on the socket to the specified address.","Returns the local address that this socket is bound to.","Returns the address of this socket's peer.","Shut down the read, write, or both halves of this…","incoming","Returns a stream over the connections being received on…","Connects to the socket named by `path`.","Returns the socket address of the local half of this…","Returns the socket address of the remote half of this…","poll_fill_buf","Attempt to return the contents of the internal buffer,…","Tells this buffer that `amt` bytes have been consumed from…","prepare_uninitialized_buffer","tokio::io","Prepares an uninitialized buffer to be safe to pass to…","poll_read","tokio::prelude","Attempt to read from the `AsyncRead` into `buf`.","poll_read_buf","Writes bytes asynchronously.","poll_write","Attempt to write bytes from `buf` into the object.","Attempt to flush the object, ensuring that any buffered…","poll_shutdown","Initiates or attempts to shut down this writer, returning…","poll_write_buf","Write a `Buf` into this value, returning how many bytes…","command","The Tokio runtime.","joinhandle","Spawn a future onto the Tokio runtime.","Enter the runtime context","There are no more active senders implying no further…","The receiver lagged too far behind and has been forcibly…","tokio::sync","Receive the next value for this receiver.","Attempts to return a pending value on this receiver…","try_recv","Closes the receiving half of a channel, without dropping it.","RecvError","mutexguard","trylockerror","tokio::sync::oneshot","semaphorepermit","tryacquireerror","tokio::sync::watch","Spawns a new asynchronous task, returning a `JoinHandle`…","spawn_local","Creates new `Interval` that yields with interval of…","interval","Require a `Future` to complete before the specified…","A queue of delayed elements.","DelayQueue","delayqueue","Sets the delay of the item associated with `key` to expire…","is_empty","get_ref","get_mut","tokio::time","instant","Returns `true` if the error was caused by the timer being…","Returns the amount of time elapsed from another instant to…","tokio::net::tcp","tokio::net::unix","tokio::process","try_poll","tokio::runtime","tokio::signal::unix","tokio::stream","tokio::sync::broadcast","tokio::sync::mpsc","tokio::sync::mpsc::error","tokio::sync::oneshot::error","tokio::sync::watch::error","tokio::task","tokio::time::delay_queue","sub_assign","consume","start_seek","poll_complete","bufwriter","bufreader","signalkind","Consumes stream, returning the tokio I/O object.","add_assign","deref_mut","read_until","Read all bytes into `buf` until the delimiter `byte` or…","readuntil","read_line","Read all bytes until a newline (the 0xA byte) is reached,…","Returns a stream of the contents of this reader split on…","Returns a stream over the lines of this reader. This…","Create a new `AsyncRead` instance that chains this stream…","read_exact","Read the exact number of bytes required to fill `buf`.","readexact","Reads an unsigned 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16-bit integer in big-endian order from…","Reads a signed 16-bit integer in big-endian order from the…","Reads an unsigned 32-bit integer in big-endian order from…","Reads a signed 32-bit integer in big-endian order from the…","Reads an unsigned 64-bit integer in big-endian order from…","Reads an signed 64-bit integer in big-endian order from…","read_u128","Reads an unsigned 128-bit integer in big-endian order from…","read_i128","Reads an signed 128-bit integer in big-endian order from…","read_to_end","Read all bytes until EOF in this source, placing them into…","readtoend","Read all bytes until EOF in this source, appending them to…","readtostring","Creates an adaptor which reads at most `limit` bytes from…","Creates a future which will seek an IO object, and then…","Write a buffer into this writer, returning how many bytes…","write_buf","Write a buffer into this writer, advancing the buffer's…","write_all","Attempts to write an entire buffer into this writer.","write_u16","Writes an unsigned 16-bit integer in big-endian order to…","write_i16","Writes a signed 16-bit integer in big-endian order to the…","write_u32","Writes an unsigned 32-bit integer in big-endian order to…","write_i32","Writes a signed 32-bit integer in big-endian order to the…","write_u64","Writes an unsigned 64-bit integer in big-endian order to…","write_i64","Writes an signed 64-bit integer in big-endian order to the…","write_u128","Writes an unsigned 128-bit integer in big-endian order to…","writeu128","write_i128","Writes an signed 128-bit integer in big-endian order to…","writei128","Flush this output stream, ensuring that all intermediately…","Shuts down the output stream, ensuring that the value can…","Creates a new `Duration` from the specified number of…","Returns the fractional part of this `Duration`, in whole…","checked_add","checked_sub","Returns the number of seconds contained by this `Duration`…","OpenOptions","PollEvented","BufReader","BufStream","BufWriter","AsyncBufReadExt","AsyncReadExt","AsyncSeekExt","AsyncWriteExt","ReuniteError","SignalKind","StreamExt","BarrierWaitResult","Semaphore","SemaphorePermit","Incoming","ChildStdin","ChildStdout","ChildStderr","MutexGuard","ClosedError","JoinError","JoinHandle","cancelable","task_scope","cancellation","task_scope::cancelable","task_scope::cancellation","task_scope::handle","task_scope::scope","task_scope::spawn","Cancelable","ScopeFuture","Cancellation","SpawnFuture"][Arc]itself atomic","i":[[3,"Guard","arc_swap","A temporary storage of the pointer.R[270]ArcSwapAny","","An atomic storage for a reference counted smart pointer…R[297]access","","Abstracting over accessing parts of stored value.R[270]DirectDeref","arc_swap::access","Plumbing type.R[270]DynGuard","","Plumbing type.R[270]MapGuard","","A plumbing type.R[270]Map","","An adaptor to provide access to a part of larger structure.R[270]ConstantDeref","","A plumbing type.R[270]Constant","","Access to an constant.",null,null],[12,"0","","",0,null],[8,"Access","","Abstracts over ways code can get access to a value of type…R[274]Guard","","A guard object containing the value and keeping it alive.",1,null],[10,"load","","The loading method.",1,[[["selfR[311]DynAccess","","An object-safe version of the[`Access`]trait.R[271]load","","The equivalent of[`Access::load`].",2,[[["self"]],["dynguardR[272]new","","Creates a new instance.",3,[[["a"],["f"]],["self"]]],[0,"cache","arc_swap","Caching handle into the[ArcSwapAny].R[270]Cache","arc_swap::cache","Caching handle for[`ArcSwapAny`][ArcSwapAny].R[270]MapCache","","An implementation of a cache with a projection into the…R[273]Access","","Generalization of caches providing access to `T`.R[271]load","","Loads the value from cache.",4,[[["self"]],["tR[272]new","","Creates a new caching handle.",5,[[["a"]],["selfR[272]arc_swap","","Gives access to the(possibly shared)cached[`ArcSwapAny`].",5,[[["selfR[277]load","","Loads the currently held value.",5,[[["self"]],["tR[272]map","","Turns this cache into a cache with a projection inside the…",5,[[["f"]],["mapcache"]]],[0,"gen_lock","arc_swap","Customization of where and how the generation lock works.R[270]Shard","arc_swap::gen_lock","A single shard.R[270]Global","","The default,global lock.R[270]PrivateUnsharded","","A single „shard“ that is stored inline,inside the…R[270]PrivateSharded","","An alternative to[`PrivateUnsharded`],but with…R[273]LockStorage","","Abstraction of the place where generation locks are stored.R[274]Shards","","The type for keeping several shards.",6,null],[10,"gen_idx","","Access to the generation index.",6,[[["self"]],["atomicusizeR[301]shards","","Access to the shards storage.",6,[[["selfR[276]choose_shard","","Pick one shard of the all selected.",6,[[["self"]],["usize"]]],[6,"ArcSwap","arc_swap","An atomic storage for `Arc`.R[275]ArcSwapOption","","An atomic storage for `Option<Arc>`.R[275]IndependentArcSwap","","An atomic storage that doesn t share the internal…R[273]RefCnt","","A trait describing smart reference counted pointers.R[274]Base","","The base type the pointer points to.",7,null],[10,"into_ptr","","Converts the smart pointer into a raw pointer,without…",7,[[]]],[10,"as_ptr","","Provides a view into the smart pointer as a raw pointer.",7,[[["selfR[276]from_ptr","","Converts a raw pointer back into the smart pointer,…R[302]selfR[272]inc","","Increments the reference count by one.",7,[[["selfR[277]dec","","Decrements the reference count by one.",7,[[]]],[11,"into_inner","","Converts it into the held value.R[278]tR[272]new","","Constructs a new value.",9,[[["t"]],["selfR[272]into_inner","","Extracts the value inside.R[279]tR[272]load_full","","Loads the value.",9,[[["self"]],["tR[272]load_signal_safe","","An async-signal-safe version of `load`",9,[[["self"]],["guardR[272]load","","Provides a temporary borrow of the object inside.",9,[[["self"]],["guardR[272]store","","Replaces the value inside this instance.",9,[[["self"],["tR[277]swap","","Exchanges the value inside this instance.",9,[[["self"],["t"]],["tR[272]compare_and_swap","","Swaps the stored Arc if it equals to `current`.",9,[[["t"],["asraw"],["self"]],["guardR[272]rcu","","Read-Copy-Update of the pointer inside.",9,[[["self"],["f"]],["tR[272]map","","Provides an access to an up to date projection of the…",9,[[["self"],["f"]],[["map"],["selfR[277]from_pointee","","A convenience constructor directly from the pointed-to…",9,[[["t"]],["selfR[272]rcu_unwrap","","An `rcu` which waits to be the sole owner of the original…",9,[[["self"],["f"]],["tR[272]from_pointee","","A convenience constructor directly from a pointed-to value.",9,[[["into",["option"]],["option"]],["selfR[272]empty","","A convenience constructor for an empty value.R[279]selfR[272]load","","",8,[[["selfR[277]load","","",8,[[["self"]],["dynguardR[272]into","","R[278]uR[272]from","","",8,[[["t"]],["tR[272]to_string","","",8,[[["self"]],["stringR[272]try_from","","",8,[[["u"]],["resultR[272]try_into","","R[278]resultR[272]borrow","","",8,[[["self"]],["tR[272]borrow_mut","","",8,[[["self"]],["tR[272]type_id","","",8,[[["self"]],["typeidR[272]load","","",9,[[["selfR[277]load","","",9,[[["self"]],["dynguardR[272]into","","R[279]uR[272]from","","R[279]tR[272]from","","",9,[[["t"]],["tR[272]to_owned","","",9,[[["self"]],["tR[272]clone_into","","",9,[[["self"],["tR[277]to_string","","",9,[[["self"]],["stringR[272]try_from","","",9,[[["u"]],["resultR[272]try_into","","R[279]resultR[272]borrow","","",9,[[["self"]],["tR[272]borrow_mut","","",9,[[["self"]],["tR[272]type_id","","",9,[[["self"]],["typeidR[272]load","arc_swap::access","R[281]selfR[277]load","","R[281]self"]],["dynguardR[272]into","","R[280]uR[272]from","","R[281]t"]],["tR[272]try_from","","R[281]u"]],["resultR[272]try_into","","R[280]resultR[272]borrow","","R[281]self"]],["tR[272]borrow_mut","","R[281]self"]],["tR[272]type_id","","R[281]self"]],["typeidR[272]load","","R[283]selfR[277]load","","R[283]self"]],["dynguardR[272]into","","R[282]uR[272]from","","R[283]t"]],["tR[272]try_from","","R[283]u"]],["resultR[272]try_into","","R[282]resultR[272]borrow","","R[283]self"]],["tR[272]borrow_mut","","R[283]self"]],["tR[272]type_id","","R[283]self"]],["typeidR[272]load","","R[284]selfR[277]load","","R[284]self"]],["dynguardR[272]into","","R[285]uR[272]from","","R[284]t"]],["tR[272]to_owned","","R[284]self"]],["tR[272]clone_into","","R[284]self"],["tR[277]try_from","","R[284]u"]],["resultR[272]try_into","","R[285]resultR[272]borrow","","R[284]self"]],["tR[272]borrow_mut","","R[284]self"]],["tR[272]type_id","","R[284]self"]],["typeidR[272]load","","",3,[[["selfR[277]load","","",3,[[["self"]],["dynguardR[272]into","","R[298]uR[272]from","","",3,[[["t"]],["tR[272]to_owned","","",3,[[["self"]],["tR[272]clone_into","","",3,[[["self"],["tR[277]try_from","","",3,[[["u"]],["resultR[272]try_into","","R[298]resultR[272]borrow","","",3,[[["self"]],["tR[272]borrow_mut","","",3,[[["self"]],["tR[272]type_id","","",3,[[["self"]],["typeidR[272]load","","R[286]selfR[277]load","","R[286]self"]],["dynguardR[272]into","","R[287]uR[272]from","","R[286]t"]],["tR[272]to_owned","","R[286]self"]],["tR[272]clone_into","","R[286]self"],["tR[277]try_from","","R[286]u"]],["resultR[272]try_into","","R[287]resultR[272]borrow","","R[286]self"]],["tR[272]borrow_mut","","R[286]self"]],["tR[272]type_id","","R[286]self"]],["typeidR[272]load","","",0,[[["selfR[277]load","","",0,[[["self"]],["dynguardR[272]into","","R[304]uR[272]from","","",0,[[["t"]],["tR[272]to_owned","","",0,[[["self"]],["tR[272]clone_into","","",0,[[["self"],["tR[277]try_from","","",0,[[["u"]],["resultR[272]try_into","","R[304]resultR[272]borrow","","",0,[[["self"]],["tR[272]borrow_mut","","",0,[[["self"]],["tR[272]type_id","","",0,[[["self"]],["typeidR[272]into","arc_swap::cache","R[300]uR[272]from","","",5,[[["t"]],["tR[272]to_owned","","",5,[[["self"]],["tR[272]clone_into","","",5,[[["self"],["tR[277]try_from","","",5,[[["u"]],["resultR[272]try_into","","R[300]resultR[272]borrow","","",5,[[["self"]],["tR[272]borrow_mut","","",5,[[["self"]],["tR[272]type_id","","",5,[[["self"]],["typeidR[272]into","","R[288]uR[272]from","","R[289]t"]],["tR[272]to_owned","","R[289]self"]],["tR[272]clone_into","","R[289]self"],["tR[277]try_from","","R[289]u"]],["resultR[272]try_into","","R[288]resultR[272]borrow","","R[289]self"]],["tR[272]borrow_mut","","R[289]self"]],["tR[272]type_id","","R[289]self"]],["typeidR[272]into","arc_swap::gen_lock","R[290]uR[272]from","","",15,[[["t"]],["tR[272]try_from","","",15,[[["u"]],["resultR[272]try_into","","R[290]resultR[272]borrow","","",15,[[["self"]],["tR[272]borrow_mut","","",15,[[["self"]],["tR[272]type_id","","",15,[[["self"]],["typeidR[272]into","","R[291]uR[272]from","","R[294]t"]],["tR[272]try_from","","R[294]u"]],["resultR[272]try_into","","R[291]resultR[272]borrow","","R[294]self"]],["tR[272]borrow_mut","","R[294]self"]],["tR[272]type_id","","R[294]self"]],["typeidR[272]into","","R[292]uR[272]from","","R[295]t"]],["tR[272]try_from","","R[295]u"]],["resultR[272]try_into","","R[292]resultR[272]borrow","","R[295]self"]],["tR[272]borrow_mut","","R[295]self"]],["tR[272]type_id","","R[295]self"]],["typeidR[272]into","","R[293]uR[272]from","","R[296]t"]],["tR[272]try_from","","R[296]u"]],["resultR[272]try_into","","R[293]resultR[272]borrow","","R[296]self"]],["tR[272]borrow_mut","","R[296]self"]],["tR[272]type_id","","R[296]self"]],["typeidR[272]load","arc_swap","",9,[[["selfR[277]load","","",9,[[["selfR[277]load","","",9,[[["selfR[277]load","arc_swap::access","",3,[[["selfR[277]load","","",0,[[["selfR[277]load","arc_swap::cache","",5,[[["selfR[277]load","","R[289]self"]],["uR[272]gen_idx","arc_swap::gen_lock","R[294]self"]],["atomicusizeR[272]shards","","R[294]selfR[277]choose_shard","","R[294]self"]],["usizeR[272]gen_idx","","R[295]self"]],["atomicusizeR[272]shards","","R[295]selfR[277]choose_shard","","R[295]self"]],["usizeR[272]gen_idx","","R[296]self"]],["atomicusizeR[272]shards","","R[296]selfR[277]choose_shard","","R[296]self"]],["usizeR[272]drop","arc_swap","",8,[[["selfR[277]drop","","",9,[[["selfR[277]from","arc_swap::cache","",5,[[["a"]],["selfR[272]from","arc_swap","",9,[[["t"]],["selfR[272]clone","arc_swap::access","R[284]self"]],["mapguardR[272]clone","","",3,[[["self"]],["mapR[272]clone","","R[286]self"]],["constantderefR[272]clone","","",0,[[["self"]],["constantR[272]clone","arc_swap::cache","",5,[[["self"]],["cacheR[272]clone","","R[289]self"]],["mapcacheR[272]clone","arc_swap","",9,[[["self"]],["selfR[272]default","arc_swap::gen_lock","R[290]shardR[272]default","","R[291]globalR[272]default","","R[292]privateunshardedR[272]default","","R[293]privateshardedR[272]default","arc_swap","R[279]selfR[272]cmp","arc_swap::access","R[286]self"],["constantderef"]],["orderingR[272]cmp","","",0,[[["self"],["constant"]],["orderingR[272]eq","","R[286]self"],["constantderef"]],["boolR[272]ne","","R[286]self"],["constantderef"]],["boolR[272]eq","","",0,[[["self"],["constant"]],["boolR[272]ne","","",0,[[["self"],["constant"]],["boolR[272]partial_cmp","","R[286]self"],["constantderef"]],[["option",["ordering"]],["orderingR[277]lt","","R[286]self"],["constantderef"]],["boolR[272]le","","R[286]self"],["constantderef"]],["boolR[272]gt","","R[286]self"],["constantderef"]],["boolR[272]ge","","R[286]self"],["constantderef"]],["boolR[272]partial_cmp","","",0,[[["self"],["constant"]],[["option",["ordering"]],["orderingR[277]lt","","",0,[[["self"],["constant"]],["boolR[272]le","","",0,[[["self"],["constant"]],["boolR[272]gt","","",0,[[["self"],["constant"]],["boolR[272]ge","","",0,[[["self"],["constant"]],["boolR[272]fmt","arc_swap","",8,[[["formatter"],["self"]],["fmtresultR[272]fmt","","",9,[[["formatter"],["self"]],["fmtresultR[272]fmt","arc_swap::access","R[281]self"],["formatter"]],["resultR[272]fmt","","R[284]self"],["formatter"]],["resultR[272]fmt","","",3,[[["self"],["formatter"]],["resultR[272]fmt","","R[286]self"],["formatter"]],["resultR[272]fmt","","",0,[[["self"],["formatter"]],["resultR[272]fmt","arc_swap::cache","",5,[[["self"],["formatter"]],["resultR[272]fmt","","R[289]self"],["formatter"]],["resultR[272]fmt","arc_swap","",8,[[["formatter"],["self"]],["fmtresultR[272]fmt","","",9,[[["formatter"],["self"]],["fmtresultR[272]deref","arc_swap::access","R[281]self"]],["tR[272]deref","","R[281]self"]],["tR[272]deref","","R[283]self"]],["tR[272]deref","","R[284]self"]],["tR[272]deref","","R[286]self"]],["tR[272]deref","arc_swap","",8,[[["self"]],["tR[272]hash","arc_swap::access","R[286]self"],["__hR[277]hash","","",0,[[["self"],["__hR[277]inc","arc_swap","Increments the reference count by one.",7,[[["selfR[277]dec","","Decrements the reference count by one.",7,[[]]]],"p":[[3,"Constant"],[8,"Access"],[8,"DynAccess"],[3,"Map"],[8,"Access"],[3,"Cache"],[8,"LockStorage"],[8,"RefCnt"],[3,"Guard"],[3,"ArcSwapAny"],[3,"DirectDeref"],[3,"DynGuard"],[3,"MapGuard"],[3,"ConstantDeref"],[3,"MapCache"],[3,"Shard"],[3,"Global"],[3,"PrivateUnsharded"],[3,"PrivateShardedR[309]bytesR[268]docR[269]Provides abstractions for working with bytes.","i":[[3,"BytesMut","bytes","A unique reference to a contiguous slice of memory.R[270]Bytes","","A reference counted contiguous slice of memory.R[297]buf","","Utilities for working with buffers.R[270]IoSliceMut","bytes::buf","A buffer type used for `readv`.R[270]IntoIter","","Iterator over the bytes contained by the buffer.R[297]ext","","Extra utilities for `Buf` and `BufMut` types.R[270]Limit","bytes::buf::ext","A `BufMut` adapter which limits the amount of bytes that…R[270]Take","","A `Buf` adapter which limits the bytes read from an…R[270]Chain","","A `Chain` sequences two buffers.R[270]Reader","","A `Buf` adapter which implements `io::Read` for the inner…R[270]Writer","","A `BufMut` adapter which implements `io::Write` for the…R[299]new","","Creates a new `Chain` sequencing the provided values.",0,[[["u"],["t"]],["chainR[272]first_ref","","Gets a reference to the first underlying `Buf`.",0,[[["self"]],["tR[272]first_mut","","Gets a mutable reference to the first underlying `Buf`.",0,[[["self"]],["tR[272]last_ref","","Gets a reference to the last underlying `Buf`.",0,[[["self"]],["uR[272]last_mut","","Gets a mutable reference to the last underlying `Buf`.",0,[[["self"]],["uR[272]into_inner","","Consumes this `Chain`,returning the underlying values.R[308]into_inner","","Consumes this `Limit`,returning the underlying value.R[303]tR[272]get_ref","","Gets a reference to the underlying `BufMut`.",1,[[["self"]],["tR[272]get_mut","","Gets a mutable reference to the underlying `BufMut`.",1,[[["self"]],["tR[272]limit","","Returns the maximum number of bytes that can be written",1,[[["self"]],["usizeR[272]set_limit","","Sets the maximum number of bytes that can be written.",1,[[["self"],["usizeR[277]get_ref","","Gets a reference to the underlying `Buf`.",2,[[["self"]],["bR[272]get_mut","","Gets a mutable reference to the underlying `Buf`.",2,[[["self"]],["bR[272]into_inner","","Consumes this `Reader`,returning the underlying value.R[305]bR[272]into_inner","","Consumes this `Take`,returning the underlying value.R[298]tR[272]get_ref","","Gets a reference to the underlying `Buf`.",3,[[["self"]],["tR[272]get_mut","","Gets a mutable reference to the underlying `Buf`.",3,[[["self"]],["tR[272]limit","","Returns the maximum number of bytes that can be read.",3,[[["self"]],["usizeR[272]set_limit","","Sets the maximum number of bytes that can be read.",3,[[["self"],["usizeR[277]get_ref","","Gets a reference to the underlying `BufMut`.",4,[[["self"]],["bR[272]get_mut","","Gets a mutable reference to the underlying `BufMut`.",4,[[["self"]],["bR[272]into_inner","","Consumes this `Writer`,returning the underlying value.R[306]b"]]],[8,"BufExt","","Extra methods for implementations of `Buf`.R[299]take","","Creates an adaptor which will read at most `limit` bytes…",5,[[["usize"]],["takeR[272]chain","","Creates an adaptor which will chain this buffer with…",5,[[["buf"]],[["buf"],["chainR[277]reader","","Creates an adaptor which implements the `Read` trait for…R[300]reader"]]],[8,"BufMutExt","","Extra methods for implementations of `BufMut`.R[299]limit","","Creates an adaptor which can write at most `limit` bytes…",6,[[["usize"]],["limitR[272]writer","","Creates an adaptor which implements the `Write` trait for…",6,[[],["writerR[272]chain_mut","","Creates an adapter which will chain this buffer with…",6,[[["bufmut"]],[["bufmut"],["chainR[277]new","bytes::buf","Creates an iterator over the bytes contained by the buffer.",7,[[["t"]],["intoiterR[272]into_inner","","Consumes this `IntoIter`,returning the underlying value.R[302]tR[272]get_ref","","Gets a reference to the underlying `Buf`.",7,[[["self"]],["tR[272]get_mut","","Gets a mutable reference to the underlying `Buf`.",7,[[["self"]],["t"]]],[8,"Buf","","Read bytes from a buffer.R[271]remaining","","Returns the number of bytes between the current position…",8,[[["self"]],["usizeR[301]bytes","","Returns a slice starting at the current position and of…",8,[[["selfR[277]bytes_vectored","","Fills `dst` with potentially multiple slices starting at…",8,[[["self"]],["usizeR[301]advance","","Advance the internal cursor of the Buf",8,[[["self"],["usizeR[277]has_remaining","","Returns true if there are any more bytes to consume",8,[[["self"]],["boolR[272]copy_to_slice","","Copies bytes from `self` into `dst`.",8,[[["selfR[277]get_u8","","Gets an unsigned 8bit integer from `self`.",8,[[["self"]],["u8R[272]get_i8","","Gets a signed 8bit integer from `self`.",8,[[["self"]],["i8R[272]get_u16","","Gets an unsigned 16bit integer from `self` in big-endian…",8,[[["self"]],["u16R[272]get_u16_le","","Gets an unsigned 16bit integer from `self` in…",8,[[["self"]],["u16R[272]get_i16","","Gets a signed 16bit integer from `self` in big-endian…",8,[[["self"]],["i16R[272]get_i16_le","","Gets a signed 16bit integer from `self` in little-endian…",8,[[["self"]],["i16R[272]get_u32","","Gets an unsigned 32bit integer from `self` in the…",8,[[["self"]],["u32R[272]get_u32_le","","Gets an unsigned 32bit integer from `self` in the…",8,[[["self"]],["u32R[272]get_i32","","Gets a signed 32bit integer from `self` in big-endian…",8,[[["self"]],["i32R[272]get_i32_le","","Gets a signed 32bit integer from `self` in little-endian…",8,[[["self"]],["i32R[272]get_u64","","Gets an unsigned 64bit integer from `self` in big-endian…",8,[[["self"]],["u64R[272]get_u64_le","","Gets an unsigned 64bit integer from `self` in…",8,[[["self"]],["u64R[272]get_i64","","Gets a signed 64bit integer from `self` in big-endian…",8,[[["self"]],["i64R[272]get_i64_le","","Gets a signed 64bit integer from `self` in little-endian…",8,[[["self"]],["i64R[272]get_u128","","Gets an unsigned 128bit integer from `self` in big-endian…",8,[[["self"]],["u128R[272]get_u128_le","","Gets an unsigned 128bit integer from `self` in…",8,[[["self"]],["u128R[272]get_i128","","Gets a signed 128bit integer from `self` in big-endian…",8,[[["self"]],["i128R[272]get_i128_le","","Gets a signed 128bit integer from `self` in little-endian…",8,[[["self"]],["i128R[272]get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["u64R[272]get_uint_le","","Gets an unsigned n-byte integer from `self` in…",8,[[["self"],["usize"]],["u64R[272]get_int","","Gets a signed n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["i64R[272]get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",8,[[["self"],["usize"]],["i64R[272]get_f32","","Gets an IEEE754 single-precision(4bytes)floating point…",8,[[["self"]],["f32R[272]get_f32_le","","Gets an IEEE754 single-precision(4bytes)floating point…",8,[[["self"]],["f32R[272]get_f64","","Gets an IEEE754 double-precision(8bytes)floating point…",8,[[["self"]],["f64R[272]get_f64_le","","Gets an IEEE754 double-precision(8bytes)floating point…",8,[[["self"]],["f64R[272]to_bytes","","Consumes remaining bytes inside self and returns new…",8,[[["self"]],["bytes"]]],[8,"BufMut","","A trait for values that provide sequential write access to…R[271]remaining_mut","","Returns the number of bytes that can be written from the…",9,[[["self"]],["usizeR[301]advance_mut","","Advance the internal cursor of the BufMut",9,[[["self"],["usizeR[277]has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,[[["self"]],["boolR[301]bytes_mut","","Returns a mutable slice starting at the current BufMut…",9,[[["selfR[277]bytes_vectored_mut","","Fills `dst` with potentially multiple mutable slices…",9,[[["self"]],["usizeR[272]put","","Transfer bytes into `self` from `src` and advance the…",9,[[["buf"],["selfR[277]put_slice","","Transfer bytes into `self` from `src` and advance the…",9,[[["selfR[277]put_u8","","Writes an unsigned 8bit integer to `self`.",9,[[["self"],["u8R[277]put_i8","","Writes a signed 8bit integer to `self`.",9,[[["self"],["i8R[277]put_u16","","Writes an unsigned 16bit integer to `self` in big-endian…",9,[[["u16"],["selfR[277]put_u16_le","","Writes an unsigned 16bit integer to `self` in…",9,[[["u16"],["selfR[277]put_i16","","Writes a signed 16bit integer to `self` in big-endian…",9,[[["self"],["i16R[277]put_i16_le","","Writes a signed 16bit integer to `self` in little-endian…",9,[[["self"],["i16R[277]put_u32","","Writes an unsigned 32bit integer to `self` in big-endian…",9,[[["self"],["u32R[277]put_u32_le","","Writes an unsigned 32bit integer to `self` in…",9,[[["self"],["u32R[277]put_i32","","Writes a signed 32bit integer to `self` in big-endian…",9,[[["self"],["i32R[277]put_i32_le","","Writes a signed 32bit integer to `self` in little-endian…",9,[[["self"],["i32R[277]put_u64","","Writes an unsigned 64bit integer to `self` in the…",9,[[["self"],["u64R[277]put_u64_le","","Writes an unsigned 64bit integer to `self` in…",9,[[["self"],["u64R[277]put_i64","","Writes a signed 64bit integer to `self` in the big-endian…",9,[[["i64"],["selfR[277]put_i64_le","","Writes a signed 64bit integer to `self` in little-endian…",9,[[["i64"],["selfR[277]put_u128","","Writes an unsigned 128bit integer to `self` in the…",9,[[["self"],["u128R[277]put_u128_le","","Writes an unsigned 128bit integer to `self` in…",9,[[["self"],["u128R[277]put_i128","","Writes a signed 128bit integer to `self` in the…",9,[[["self"],["i128R[277]put_i128_le","","Writes a signed 128bit integer to `self` in little-endian…",9,[[["self"],["i128R[277]put_uint","","Writes an unsigned n-byte integer to `self` in big-endian…",9,[[["self"],["u64"],["usizeR[277]put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",9,[[["self"],["u64"],["usizeR[277]put_int","","Writes a signed n-byte integer to `self` in big-endian…",9,[[["i64"],["self"],["usizeR[277]put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",9,[[["i64"],["self"],["usizeR[277]put_f32","","Writes an IEEE754 single-precision(4bytes)floating…",9,[[["f32"],["selfR[277]put_f32_le","","Writes an IEEE754 single-precision(4bytes)floating…",9,[[["f32"],["selfR[277]put_f64","","Writes an IEEE754 double-precision(8bytes)floating…",9,[[["self"],["f64R[277]put_f64_le","","Writes an IEEE754 double-precision(8bytes)floating…",9,[[["self"],["f64R[277]with_capacity","bytes","Creates a new `BytesMut` with the specified capacity.R[281]usize"]],["bytesmutR[272]new","","Creates a new `BytesMut` with default capacity.R[280]bytesmutR[272]len","","Returns the number of bytes contained in this `BytesMut`.R[281]self"]],["usizeR[272]is_empty","","Returns true if the `BytesMut` has a length of 0.R[281]self"]],["boolR[272]capacity","","Returns the number of bytes the `BytesMut` can hold…R[281]self"]],["usizeR[272]freeze","","Converts `self` into an immutable `Bytes`.R[280]bytesR[272]split_off","","Splits the bytes into two at the given index.R[281]self"],["usize"]],["bytesmutR[272]split","","Removes the bytes from the current view,returning them in…R[281]self"]],["bytesmutR[272]split_to","","Splits the buffer into two at the given index.R[281]self"],["usize"]],["bytesmutR[272]truncate","","Shortens the buffer,keeping the first `len` bytes and…R[281]self"],["usizeR[277]clear","","Clears the buffer,removing all data.R[281]selfR[277]resize","","Resizes the buffer so that `len` is equal to `new_len`.R[281]self"],["usize"],["u8R[277]set_len","","Sets the length of the buffer.R[281]self"],["usizeR[277]reserve","","Reserves capacity for at least `additional` more bytes to…R[281]self"],["usizeR[277]extend_from_slice","","Appends given bytes to this object.R[281]selfR[277]unsplit","","Combine splitted BytesMut objects back as contiguous.R[281]self"],["bytesmutR[277]new","","Creates a new empty `Bytes`.R[282]bytesR[272]from_static","","Creates a new `Bytes` from a static slice.R[282]bytesR[272]len","","Returns the number of bytes contained in this `Bytes`.R[283]self"]],["usizeR[272]is_empty","","Returns true if the `Bytes` has a length of 0.R[283]self"]],["boolR[272]copy_from_slice","","Creates `Bytes` instance from slice,by copying it.R[282]selfR[272]slice","","Returns a slice of self for the provided range.R[283]self"]],["bytesR[272]slice_ref","","Returns a slice of self that is equivalent to the given…R[283]self"]],["bytesR[272]split_off","","Splits the bytes into two at the given index.R[283]self"],["usize"]],["bytesR[272]split_to","","Splits the bytes into two at the given index.R[283]self"],["usize"]],["bytesR[272]truncate","","Shortens the buffer,keeping the first `len` bytes and…R[283]self"],["usizeR[277]clear","","Clears the buffer,removing all data.R[283]selfR[311]Buf","","Read bytes from a buffer.R[271]remaining","","Returns the number of bytes between the current position…",8,[[["self"]],["usizeR[301]bytes","","Returns a slice starting at the current position and of…",8,[[["selfR[277]bytes_vectored","bytes::buf","Fills `dst` with potentially multiple slices starting at…",8,[[["self"]],["usizeR[301]advance","bytes","Advance the internal cursor of the Buf",8,[[["self"],["usizeR[277]has_remaining","bytes::buf","Returns true if there are any more bytes to consume",8,[[["self"]],["boolR[272]copy_to_slice","","Copies bytes from `self` into `dst`.",8,[[["selfR[277]get_u8","","Gets an unsigned 8bit integer from `self`.",8,[[["self"]],["u8R[272]get_i8","","Gets a signed 8bit integer from `self`.",8,[[["self"]],["i8R[272]get_u16","","Gets an unsigned 16bit integer from `self` in big-endian…",8,[[["self"]],["u16R[272]get_u16_le","","Gets an unsigned 16bit integer from `self` in…",8,[[["self"]],["u16R[272]get_i16","","Gets a signed 16bit integer from `self` in big-endian…",8,[[["self"]],["i16R[272]get_i16_le","","Gets a signed 16bit integer from `self` in little-endian…",8,[[["self"]],["i16R[272]get_u32","","Gets an unsigned 32bit integer from `self` in the…",8,[[["self"]],["u32R[272]get_u32_le","","Gets an unsigned 32bit integer from `self` in the…",8,[[["self"]],["u32R[272]get_i32","","Gets a signed 32bit integer from `self` in big-endian…",8,[[["self"]],["i32R[272]get_i32_le","","Gets a signed 32bit integer from `self` in little-endian…",8,[[["self"]],["i32R[272]get_u64","","Gets an unsigned 64bit integer from `self` in big-endian…",8,[[["self"]],["u64R[272]get_u64_le","","Gets an unsigned 64bit integer from `self` in…",8,[[["self"]],["u64R[272]get_i64","","Gets a signed 64bit integer from `self` in big-endian…",8,[[["self"]],["i64R[272]get_i64_le","","Gets a signed 64bit integer from `self` in little-endian…",8,[[["self"]],["i64R[272]get_u128","","Gets an unsigned 128bit integer from `self` in big-endian…",8,[[["self"]],["u128R[272]get_u128_le","","Gets an unsigned 128bit integer from `self` in…",8,[[["self"]],["u128R[272]get_i128","","Gets a signed 128bit integer from `self` in big-endian…",8,[[["self"]],["i128R[272]get_i128_le","","Gets a signed 128bit integer from `self` in little-endian…",8,[[["self"]],["i128R[272]get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["u64R[272]get_uint_le","","Gets an unsigned n-byte integer from `self` in…",8,[[["self"],["usize"]],["u64R[272]get_int","","Gets a signed n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["i64R[272]get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",8,[[["self"],["usize"]],["i64R[272]get_f32","","Gets an IEEE754 single-precision(4bytes)floating point…",8,[[["self"]],["f32R[272]get_f32_le","","Gets an IEEE754 single-precision(4bytes)floating point…",8,[[["self"]],["f32R[272]get_f64","","Gets an IEEE754 double-precision(8bytes)floating point…",8,[[["self"]],["f64R[272]get_f64_le","","Gets an IEEE754 double-precision(8bytes)floating point…",8,[[["self"]],["f64R[272]to_bytes","","Consumes remaining bytes inside self and returns new…",8,[[["self"]],["bytes"]]],[8,"BufMut","bytes","A trait for values that provide sequential write access to…R[271]remaining_mut","","Returns the number of bytes that can be written from the…",9,[[["self"]],["usizeR[301]advance_mut","","Advance the internal cursor of the BufMut",9,[[["self"],["usizeR[277]has_remaining_mut","bytes::buf","Returns true if there is space in `self` for more bytes.",9,[[["self"]],["boolR[301]bytes_mut","bytes","Returns a mutable slice starting at the current BufMut…",9,[[["selfR[277]bytes_vectored_mut","bytes::buf","Fills `dst` with potentially multiple mutable slices…",9,[[["self"]],["usizeR[272]put","","Transfer bytes into `self` from `src` and advance the…",9,[[["buf"],["selfR[277]put_slice","","Transfer bytes into `self` from `src` and advance the…",9,[[["selfR[277]put_u8","","Writes an unsigned 8bit integer to `self`.",9,[[["self"],["u8R[277]put_i8","","Writes a signed 8bit integer to `self`.",9,[[["self"],["i8R[277]put_u16","","Writes an unsigned 16bit integer to `self` in big-endian…",9,[[["u16"],["selfR[277]put_u16_le","","Writes an unsigned 16bit integer to `self` in…",9,[[["u16"],["selfR[277]put_i16","","Writes a signed 16bit integer to `self` in big-endian…",9,[[["self"],["i16R[277]put_i16_le","","Writes a signed 16bit integer to `self` in little-endian…",9,[[["self"],["i16R[277]put_u32","","Writes an unsigned 32bit integer to `self` in big-endian…",9,[[["self"],["u32R[277]put_u32_le","","Writes an unsigned 32bit integer to `self` in…",9,[[["self"],["u32R[277]put_i32","","Writes a signed 32bit integer to `self` in big-endian…",9,[[["self"],["i32R[277]put_i32_le","","Writes a signed 32bit integer to `self` in little-endian…",9,[[["self"],["i32R[277]put_u64","","Writes an unsigned 64bit integer to `self` in the…",9,[[["self"],["u64R[277]put_u64_le","","Writes an unsigned 64bit integer to `self` in…",9,[[["self"],["u64R[277]put_i64","","Writes a signed 64bit integer to `self` in the big-endian…",9,[[["i64"],["selfR[277]put_i64_le","","Writes a signed 64bit integer to `self` in little-endian…",9,[[["i64"],["selfR[277]put_u128","","Writes an unsigned 128bit integer to `self` in the…",9,[[["self"],["u128R[277]put_u128_le","","Writes an unsigned 128bit integer to `self` in…",9,[[["self"],["u128R[277]put_i128","","Writes a signed 128bit integer to `self` in the…",9,[[["self"],["i128R[277]put_i128_le","","Writes a signed 128bit integer to `self` in little-endian…",9,[[["self"],["i128R[277]put_uint","","Writes an unsigned n-byte integer to `self` in big-endian…",9,[[["self"],["u64"],["usizeR[277]put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",9,[[["self"],["u64"],["usizeR[277]put_int","","Writes a signed n-byte integer to `self` in big-endian…",9,[[["i64"],["self"],["usizeR[277]put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",9,[[["i64"],["self"],["usizeR[277]put_f32","","Writes an IEEE754 single-precision(4bytes)floating…",9,[[["f32"],["selfR[277]put_f32_le","","Writes an IEEE754 single-precision(4bytes)floating…",9,[[["f32"],["selfR[277]put_f64","","Writes an IEEE754 double-precision(8bytes)floating…",9,[[["self"],["f64R[277]put_f64_le","","Writes an IEEE754 double-precision(8bytes)floating…",9,[[["self"],["f64R[277]from","bytes","R[281]t"]],["tR[272]try_from","","R[281]u"]],["resultR[272]into_iter","","R[280]iR[272]into","","R[280]uR[272]try_into","","R[280]resultR[272]borrow","","R[281]self"]],["tR[272]borrow_mut","","R[281]self"]],["tR[272]type_id","","R[281]self"]],["typeidR[272]to_owned","","R[281]self"]],["tR[272]clone_into","","R[281]self"],["tR[277]from","","R[283]t"]],["tR[272]try_from","","R[283]u"]],["resultR[272]into_iter","","R[282]iR[272]into","","R[282]uR[272]try_into","","R[282]resultR[272]borrow","","R[283]self"]],["tR[272]borrow_mut","","R[283]self"]],["tR[272]type_id","","R[283]self"]],["typeidR[272]to_owned","","R[283]self"]],["tR[272]clone_into","","R[283]self"],["tR[277]from","bytes::buf","R[284]t"]],["tR[272]try_from","","R[284]u"]],["resultR[272]into","","R[285]uR[272]try_into","","R[285]resultR[272]borrow","","R[284]self"]],["tR[272]borrow_mut","","R[284]self"]],["tR[272]type_id","","R[284]self"]],["typeidR[272]from","","",7,[[["t"]],["tR[272]try_from","","",7,[[["u"]],["resultR[272]into_iter","","R[302]iR[272]into","","R[302]uR[272]try_into","","R[302]resultR[272]borrow","","",7,[[["self"]],["tR[272]borrow_mut","","",7,[[["self"]],["tR[272]type_id","","",7,[[["self"]],["typeidR[272]from","bytes::buf::ext","",1,[[["t"]],["tR[272]try_from","","",1,[[["u"]],["resultR[272]into","","R[303]uR[272]try_into","","R[303]resultR[272]borrow","","",1,[[["self"]],["tR[272]borrow_mut","","",1,[[["self"]],["tR[272]type_id","","",1,[[["self"]],["typeidR[272]from","","",3,[[["t"]],["tR[272]try_from","","",3,[[["u"]],["resultR[272]into","","R[298]uR[272]try_into","","R[298]resultR[272]borrow","","",3,[[["self"]],["tR[272]borrow_mut","","",3,[[["self"]],["tR[272]type_id","","",3,[[["self"]],["typeidR[272]from","","",0,[[["t"]],["tR[272]try_from","","",0,[[["u"]],["resultR[272]into_iter","","R[304]iR[272]into","","R[304]uR[272]try_into","","R[304]resultR[272]borrow","","",0,[[["self"]],["tR[272]borrow_mut","","",0,[[["self"]],["tR[272]type_id","","",0,[[["self"]],["typeidR[272]from","","",2,[[["t"]],["tR[272]try_from","","",2,[[["u"]],["resultR[272]into","","R[305]uR[272]try_into","","R[305]resultR[272]borrow","","",2,[[["self"]],["tR[272]borrow_mut","","",2,[[["self"]],["tR[272]type_id","","",2,[[["self"]],["typeidR[272]from","","",4,[[["t"]],["tR[272]try_from","","",4,[[["u"]],["resultR[272]into","","R[306]uR[272]try_into","","R[306]resultR[272]borrow","","",4,[[["self"]],["tR[272]borrow_mut","","",4,[[["self"]],["tR[272]type_id","","",4,[[["self"]],["typeidR[272]remaining","","",0,[[["self"]],["usizeR[272]bytes","","",0,[[["selfR[277]advance","","",0,[[["self"],["usizeR[277]bytes_vectored","","",0,[[["self"]],["usizeR[272]remaining","","",3,[[["self"]],["usizeR[272]bytes","","",3,[[["selfR[277]advance","","",3,[[["self"],["usizeR[277]remaining","bytes","R[281]self"]],["usizeR[272]bytes","","R[281]selfR[277]advance","","R[281]self"],["usizeR[277]to_bytes","","R[281]self"]],["bytesR[272]remaining","","R[283]self"]],["usizeR[272]bytes","","R[283]selfR[277]advance","","R[283]self"],["usizeR[277]to_bytes","","R[283]self"]],["bytesR[272]remaining_mut","bytes::buf::ext","",0,[[["self"]],["usizeR[272]bytes_mut","","",0,[[["selfR[277]advance_mut","","",0,[[["self"],["usizeR[277]bytes_vectored_mut","","",0,[[["self"]],["usizeR[272]remaining_mut","","",1,[[["self"]],["usizeR[272]bytes_mut","","",1,[[["selfR[277]advance_mut","","",1,[[["self"],["usizeR[277]remaining_mut","bytes","R[281]self"]],["usizeR[272]advance_mut","","R[281]self"],["usizeR[277]bytes_mut","","R[281]selfR[277]put","","R[281]buf"],["selfR[277]put_slice","","R[281]selfR[277]from","bytes::buf","R[285]ioslicemutR[272]from","","R[285]ioslicemutR[272]from","bytes","R[280]bytesmutR[272]from","","R[281]str"]],["bytesmutR[272]from","","R[282]bytesR[272]from","","R[283]str"]],["bytesR[272]from","","R[283]vec",["u8"]],["u8"]],["bytesR[272]from","","R[283]string"]],["bytesR[272]fmt","bytes::buf","R[284]formatter"],["self"]],["resultR[272]fmt","bytes::buf::ext","",0,[[["self"],["formatter"]],["resultR[272]fmt","","",1,[[["self"],["formatter"]],["resultR[272]fmt","","",2,[[["self"],["formatter"]],["resultR[272]fmt","","",3,[[["self"],["formatter"]],["resultR[272]fmt","","",4,[[["self"],["formatter"]],["resultR[272]fmt","bytes::buf","",7,[[["self"],["formatter"]],["resultR[272]fmt","bytes","R[281]formatter"],["self"]],["resultR[272]fmt","","R[283]formatter"],["self"]],["resultR[272]eq","","R[281]self"],["bytesmut"]],["boolR[272]eq","","R[281]self"]],["boolR[272]eq","","R[281]str"],["self"]],["boolR[272]eq","","R[281]vec"],["self"]],["boolR[272]eq","","R[281]string"],["self"]],["boolR[272]eq","","R[281]t"],["self"]],["boolR[272]eq","","R[283]self"],["bytesmut"]],["boolR[272]eq","","R[281]self"],["bytes"]],["boolR[272]eq","","R[283]self"],["bytes"]],["boolR[272]eq","","R[283]self"]],["boolR[272]eq","","R[283]str"],["self"]],["boolR[272]eq","","R[283]vec"],["self"]],["boolR[272]eq","","R[283]string"],["self"]],["boolR[272]eq","","R[283]t"],["self"]],["boolR[272]cmp","","R[281]self"],["bytesmut"]],["orderingR[272]cmp","","R[283]self"],["bytes"]],["orderingR[272]partial_cmp","","R[281]self"],["bytesmut"]],[["ordering"],["option",["orderingR[307]partial_cmp","","R[281]self"]],[["ordering"],["option",["orderingR[307]partial_cmp","","R[281]str"],["self"]],[["ordering"],["option",["orderingR[307]partial_cmp","","R[281]vec"],["self"]],[["ordering"],["option",["orderingR[307]partial_cmp","","R[281]string"],["self"]],[["ordering"],["option",["orderingR[307]partial_cmp","","R[281]t"],["self"]],[["ordering"],["option",["orderingR[307]partial_cmp","","R[283]self"],["bytes"]],[["ordering"],["option",["orderingR[307]partial_cmp","","R[283]self"]],[["ordering"],["option",["orderingR[307]partial_cmp","","R[283]str"],["self"]],[["ordering"],["option",["orderingR[307]partial_cmp","","R[283]vec"],["self"]],[["ordering"],["option",["orderingR[307]partial_cmp","","R[283]string"],["self"]],[["ordering"],["option",["orderingR[307]partial_cmp","","R[283]t"],["self"]],[["ordering"],["option",["orderingR[307]deref","","R[281]selfR[277]deref","","R[283]selfR[277]deref_mut","","R[281]selfR[277]drop","","R[281]selfR[277]drop","","R[283]selfR[277]hash","","R[281]self"],["hR[277]hash","","R[283]self"],["hR[277]next","bytes::buf","",7,[[["self"]],[["option",["u8"]],["u8R[277]size_hint","","",7,[[["selfR[277]from_iter","bytes","R[281]intoiterator"]],["selfR[272]from_iter","","R[281]intoiterator"]],["selfR[272]from_iter","","R[283]intoiterator"]],["selfR[272]into_iter","bytes::buf::ext","R[308]into_iter","bytes","",10,[[]]],[11,"into_iter","","",11,[[]]],[11,"extend","","R[281]self"],["tR[277]extend","","R[281]self"],["tR[277]write_str","","R[281]str"],["self"]],["resultR[272]write_fmt","","R[281]arguments"],["self"]],["resultR[272]as_ref","","R[281]selfR[277]as_ref","","R[283]selfR[277]as_mut","","R[281]selfR[277]fmt","","R[283]self"],["formatter"]],["resultR[272]fmt","","R[281]self"],["formatter"]],["resultR[272]fmt","","R[283]self"],["formatter"]],["resultR[272]fmt","","R[281]self"],["formatter"]],["resultR[272]clone","","R[281]self"]],["bytesmutR[272]clone","","R[283]self"]],["bytesR[272]default","","R[280]bytesmutR[272]default","","R[282]bytesR[272]borrow","","R[281]selfR[277]borrow","","R[283]selfR[277]borrow_mut","","R[281]selfR[277]read","bytes::buf::ext","",2,[[["self"]],[["result",["usize"]],["usizeR[277]write","","",4,[[["self"]],[["result",["usize"]],["usizeR[277]flush","","",4,[[["self"]],["resultR[272]fill_buf","","",2,[[["self"]],["resultR[272]consume","","",2,[[["self"],["usizeR[277]bytes_vectored","bytes::buf","Fills `dst` with potentially multiple slices starting at…",8,[[["self"]],["usizeR[272]has_remaining","","Returns true if there are any more bytes to consume",8,[[["self"]],["boolR[272]copy_to_slice","","Copies bytes from `self` into `dst`.",8,[[["selfR[277]get_u8","","Gets an unsigned 8bit integer from `self`.",8,[[["self"]],["u8R[272]get_i8","","Gets a signed 8bit integer from `self`.",8,[[["self"]],["i8R[272]get_u16","","Gets an unsigned 16bit integer from `self` in big-endian…",8,[[["self"]],["u16R[272]get_u16_le","","Gets an unsigned 16bit integer from `self` in…",8,[[["self"]],["u16R[272]get_i16","","Gets a signed 16bit integer from `self` in big-endian…",8,[[["self"]],["i16R[272]get_i16_le","","Gets a signed 16bit integer from `self` in little-endian…",8,[[["self"]],["i16R[272]get_u32","","Gets an unsigned 32bit integer from `self` in the…",8,[[["self"]],["u32R[272]get_u32_le","","Gets an unsigned 32bit integer from `self` in the…",8,[[["self"]],["u32R[272]get_i32","","Gets a signed 32bit integer from `self` in big-endian…",8,[[["self"]],["i32R[272]get_i32_le","","Gets a signed 32bit integer from `self` in little-endian…",8,[[["self"]],["i32R[272]get_u64","","Gets an unsigned 64bit integer from `self` in big-endian…",8,[[["self"]],["u64R[272]get_u64_le","","Gets an unsigned 64bit integer from `self` in…",8,[[["self"]],["u64R[272]get_i64","","Gets a signed 64bit integer from `self` in big-endian…",8,[[["self"]],["i64R[272]get_i64_le","","Gets a signed 64bit integer from `self` in little-endian…",8,[[["self"]],["i64R[272]get_u128","","Gets an unsigned 128bit integer from `self` in big-endian…",8,[[["self"]],["u128R[272]get_u128_le","","Gets an unsigned 128bit integer from `self` in…",8,[[["self"]],["u128R[272]get_i128","","Gets a signed 128bit integer from `self` in big-endian…",8,[[["self"]],["i128R[272]get_i128_le","","Gets a signed 128bit integer from `self` in little-endian…",8,[[["self"]],["i128R[272]get_uint","","Gets an unsigned n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["u64R[272]get_uint_le","","Gets an unsigned n-byte integer from `self` in…",8,[[["self"],["usize"]],["u64R[272]get_int","","Gets a signed n-byte integer from `self` in big-endian…",8,[[["self"],["usize"]],["i64R[272]get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",8,[[["self"],["usize"]],["i64R[272]get_f32","","Gets an IEEE754 single-precision(4bytes)floating point…",8,[[["self"]],["f32R[272]get_f32_le","","Gets an IEEE754 single-precision(4bytes)floating point…",8,[[["self"]],["f32R[272]get_f64","","Gets an IEEE754 double-precision(8bytes)floating point…",8,[[["self"]],["f64R[272]get_f64_le","","Gets an IEEE754 double-precision(8bytes)floating point…",8,[[["self"]],["f64R[272]to_bytes","","Consumes remaining bytes inside self and returns new…",8,[[["self"]],["bytesR[272]has_remaining_mut","","Returns true if there is space in `self` for more bytes.",9,[[["self"]],["boolR[272]bytes_vectored_mut","","Fills `dst` with potentially multiple mutable slices…",9,[[["self"]],["usizeR[272]put","","Transfer bytes into `self` from `src` and advance the…",9,[[["buf"],["selfR[277]put_slice","","Transfer bytes into `self` from `src` and advance the…",9,[[["selfR[277]put_u8","","Writes an unsigned 8bit integer to `self`.",9,[[["self"],["u8R[277]put_i8","","Writes a signed 8bit integer to `self`.",9,[[["self"],["i8R[277]put_u16","","Writes an unsigned 16bit integer to `self` in big-endian…",9,[[["u16"],["selfR[277]put_u16_le","","Writes an unsigned 16bit integer to `self` in…",9,[[["u16"],["selfR[277]put_i16","","Writes a signed 16bit integer to `self` in big-endian…",9,[[["self"],["i16R[277]put_i16_le","","Writes a signed 16bit integer to `self` in little-endian…",9,[[["self"],["i16R[277]put_u32","","Writes an unsigned 32bit integer to `self` in big-endian…",9,[[["self"],["u32R[277]put_u32_le","","Writes an unsigned 32bit integer to `self` in…",9,[[["self"],["u32R[277]put_i32","","Writes a signed 32bit integer to `self` in big-endian…",9,[[["self"],["i32R[277]put_i32_le","","Writes a signed 32bit integer to `self` in little-endian…",9,[[["self"],["i32R[277]put_u64","","Writes an unsigned 64bit integer to `self` in the…",9,[[["self"],["u64R[277]put_u64_le","","Writes an unsigned 64bit integer to `self` in…",9,[[["self"],["u64R[277]put_i64","","Writes a signed 64bit integer to `self` in the big-endian…",9,[[["i64"],["selfR[277]put_i64_le","","Writes a signed 64bit integer to `self` in little-endian…",9,[[["i64"],["selfR[277]put_u128","","Writes an unsigned 128bit integer to `self` in the…",9,[[["self"],["u128R[277]put_u128_le","","Writes an unsigned 128bit integer to `self` in…",9,[[["self"],["u128R[277]put_i128","","Writes a signed 128bit integer to `self` in the…",9,[[["self"],["i128R[277]put_i128_le","","Writes a signed 128bit integer to `self` in little-endian…",9,[[["self"],["i128R[277]put_uint","","Writes an unsigned n-byte integer to `self` in big-endian…",9,[[["self"],["u64"],["usizeR[277]put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",9,[[["self"],["u64"],["usizeR[277]put_int","","Writes a signed n-byte integer to `self` in big-endian…",9,[[["i64"],["self"],["usizeR[277]put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",9,[[["i64"],["self"],["usizeR[277]put_f32","","Writes an IEEE754 single-precision(4bytes)floating…",9,[[["f32"],["selfR[277]put_f32_le","","Writes an IEEE754 single-precision(4bytes)floating…",9,[[["f32"],["selfR[277]put_f64","","Writes an IEEE754 double-precision(8bytes)floating…",9,[[["self"],["f64R[277]put_f64_le","","Writes an IEEE754 double-precision(8bytes)floating…",9,[[["self"],["f64"]]]]],"p":[[3,"Chain"],[3,"Limit"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"BufExt"],[8,"BufMutExt"],[3,"IntoIter"],[8,"Buf"],[8,"BufMut"],[3,"BytesMut"],[3,"Bytes"],[3,"IoSliceMutR[309]iovecR[268]docR[269]A specialized byte slice type for performing vectored I/O…","i":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O…R[297]unix","","IoVec extensions for Unix platforms.",null,null],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",null,[[]]],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice…",null,[[]]],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.R[299]from_bytes","","R[310]option",["iovec"]],["iovecR[277]from_bytes_mut","","R[310]iovec"],["option",["iovecR[307]borrow","","",0,[[["self"]],["tR[272]borrow_mut","","",0,[[["self"]],["tR[272]type_id","","",0,[[["self"]],["typeidR[272]deref","","",0,[[["selfR[277]deref_mut","","",0,[[["self"]]]]],"p":[[3,"IoVecR[309]lazy_staticR[268]docR[269]A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[["tR[311]LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p:[]};
searchIndex["arc_swap"]={"doc":"Making[`Arc`,",N,N],[3,",",N,N],[10,","]]],[11,",",N,N],[8,",",N,N],[16,",",N,N],[6,","]]]],[10,","]]]],[11,",",8,[[],[",",9,[[],[",",10,[[],[",",10,[[[",",11,[[],[",",11,[[[",",12,[[[",",12,[[],[",",13,[[[",",13,[[],[",",14,[[],[",",14,[[[",",15,[[],[",",16,[[],[",",17,[[],[",",18,[[],[",",16,[[[",",17,[[[",",18,[[[",",N,N],[0,",",3,[[],[",",N,N],[11,",",5,[[],[","]]],[10,",",7,[[],[",",1,[[],[",",0,[[],[",",2,[[],[",",4,[[],[","]]]]],[11,",",0,[[]]],[11,","]]};
searchIndex["mio"]={"doc":"A fast, low-level IO library for Rust focusing on…","i":[[3,"Poll","mio","Polls for readiness events on all registered values.",N,N],[3,R[350],E,"Handle to a user space `Poll` registration.",N,N],[3,R[351],E,"Updates the readiness state of the associated…",N,N],[3,"PollOpt",E,"Options supplied when registering an `Evented` handle with…",N,N],[3,"Ready",E,"A set of readiness event kinds",N,N],[3,"Token",E,"Associates readiness notifications with [`Evented`] handles.",N,N],[12,"0",E,E,0,N],[3,"Events",E,R[340],N,N],[11,"empty",E,"Return a `PollOpt` representing no set options.",1,[[],[R[333]]]],[11,"edge",E,"Return a `PollOpt` representing edge-triggered…",1,[[],[R[333]]]],[11,"level",E,"Return a `PollOpt` representing level-triggered…",1,[[],[R[333]]]],[11,"oneshot",E,"Return a `PollOpt` representing oneshot notifications.",1,[[],[R[333]]]],[11,"is_edge",E,"Returns true if the options include edge-triggered…",1,[[["self"]],["bool"]]],[11,"is_level",E,"Returns true if the options include level-triggered…",1,[[["self"]],["bool"]]],[11,"is_oneshot",E,"Returns true if the options includes oneshot.",1,[[["self"]],["bool"]]],[11,"contains",E,R[335],1,[[[R[333]],["self"]],["bool"]]],[11,"insert",E,"Adds all options represented by `other` into `self`.",1,[[["self"],[R[333]]]]],[11,"remove",E,R[334],1,[[["self"],[R[333]]]]],[11,"empty",E,"Returns the empty `Ready` set.",2,[[],["ready"]]],[11,"readable",E,"Returns a `Ready` representing readable readiness.",2,[[],["ready"]]],[11,"writable",E,"Returns a `Ready` representing writable readiness.",2,[[],["ready"]]],[11,"all",E,"Returns a `Ready` representing readiness for all operations.",2,[[],["ready"]]],[11,R[501],E,"Returns true if `Ready` is the empty set",2,[[["self"]],["bool"]]],[11,"is_readable",E,"Returns true if the value includes readable readiness",2,[[["self"]],["bool"]]],[11,"is_writable",E,"Returns true if the value includes writable readiness",2,[[["self"]],["bool"]]],[11,"insert",E,"Adds all readiness represented by `other` into `self`.",2,[[["self"],["into"]]]],[11,"remove",E,R[334],2,[[["self"],["into"]]]],[11,"contains",E,R[335],2,[[["self"],["into"]],["bool"]]],[11,"from_usize",E,"Create a `Ready` instance using the given `usize`…",2,[[[R[4]]],["ready"]]],[11,"as_usize",E,"Returns a `usize` representation of the `Ready` value.",2,[[["self"]],[R[4]]]],[11,"new",E,"Return a new `Poll` handle.",3,[[],[[R[1],["poll"]],["poll"]]]],[11,R[345],E,"Register an `Evented` handle with the `Poll` instance.",3,[[["e"],["ready"],[R[333]],["self"],["token"]],[R[1]]]],[11,R[341],E,"Re-register an `Evented` handle with the `Poll` instance.",3,[[["e"],["ready"],[R[333]],["self"],["token"]],[R[1]]]],[11,R[342],E,"Deregister an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"]],[R[1]]]],[11,"poll",E,"Wait for readiness events",3,[[[R[291]],["events"],["self"],[R[18],[R[291]]]],[[R[1],[R[4]]],[R[4]]]]],[11,"poll_interruptible",E,"Like `poll`, but may be interrupted by a signal",3,[[[R[291]],["events"],["self"],[R[18],[R[291]]]],[[R[1],[R[4]]],[R[4]]]]],[11,R[421],E,"Return a new `Events` capable of holding up to `capacity`…",4,[[[R[4]]],["events"]]],[11,"capacity",E,"Returns the number of `Event` values that `self` can hold.",4,[[["self"]],[R[4]]]],[11,R[501],E,"Returns `true` if `self` contains no `Event` values.",4,[[["self"]],["bool"]]],[11,"iter",E,"Returns an iterator over the `Event` values.",4,[[["self"]],["iter"]]],[11,"clear",E,"Clearing all `Event` values from container explicitly.",4,[[["self"]]]],[11,"new2",E,"Create and return a new `Registration` and the associated…",5,[[]]],[11,R[349],E,"Returns the registration's current readiness.",6,[[["self"]],["ready"]]],[11,"set_readiness",E,"Set the registration's readiness",6,[[["self"],["ready"]],[R[1]]]],[0,"net",E,"Networking primitives",N,N],[3,R[353],R[346],"A structure representing a socket server",N,N],[3,R[352],E,"A non-blocking TCP stream between a local socket and a…",N,N],[3,R[354],E,"A User Datagram Protocol socket.",N,N],[11,R[410],E,"Create a new TCP stream and issue a non-blocking connect…",7,[[[R[273]]],[[R[1],[R[272]]],[R[272]]]]],[11,"connect_stream",E,"Creates a new `TcpStream` from the pending socket inside…",7,[[[R[272]],[R[273]]],[[R[1],[R[272]]],[R[272]]]]],[11,R[401],E,"Creates a new `TcpStream` from a standard `net::TcpStream`.",7,[[[R[272]]],[[R[1],[R[272]]],[R[272]]]]],[11,R[391],E,"Returns the socket address of the remote peer of this TCP…",7,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,R[336],E,"Returns the socket address of the local half of this TCP…",7,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,R[337],E,R[338],7,[[["self"]],[[R[1],[R[272]]],[R[272]]]]],[11,R[394],E,R[402],7,[[[R[394]],["self"]],[R[1]]]],[11,R[357],E,R[358],7,[[["self"],["bool"]],[R[1]]]],[11,"nodelay",E,R[359],7,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[303],E,R[304],7,[[["self"],[R[4]]],[R[1]]]],[11,R[305],E,R[306],7,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,R[307],E,R[308],7,[[["self"],[R[4]]],[R[1]]]],[11,R[309],E,R[310],7,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,R[360],E,R[289],7,[[[R[18],[R[291]]],["self"],[R[291]]],[R[1]]]],[11,R[361],E,R[290],7,[[["self"]],[[R[1],[R[18]]],[R[18],[R[291]]]]]],[11,R[379],E,R[277],7,[[["u32"],["self"]],[R[1]]]],[11,"ttl",E,R[296],7,[[["self"]],[[R[1],["u32"]],["u32"]]]],[11,R[297],E,R[278],7,[[["self"],["bool"]],[R[1]]]],[11,R[362],E,R[298],7,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[300],E,"Sets the value for the `SO_LINGER` option on this socket.",7,[[[R[18],[R[291]]],["self"],[R[291]]],[R[1]]]],[11,"linger",E,"Gets the value of the `SO_LINGER` option on this socket.",7,[[["self"]],[[R[1],[R[18]]],[R[18],[R[291]]]]]],[11,R[283],E,R[284],7,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[11,"peek",E,R[389],7,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,R[403],E,R[404],7,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,R[405],E,R[406],7,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,"bind",E,"Convenience method to bind a new TCP listener to the…",8,[[[R[273]]],[[R[1],[R[271]]],[R[271]]]]],[11,R[434],E,"Creates a new `TcpListener` from an instance of a…",8,[[[R[271]]],[[R[1],[R[271]]],[R[271]]]]],[11,"accept",E,"Accepts a new `TcpStream`.",8,[[["self"]],[R[1]]]],[11,R[396],E,"Accepts a new `std::net::TcpStream`.",8,[[["self"]],[R[1]]]],[11,R[336],E,R[398],8,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,R[337],E,R[338],8,[[["self"]],[[R[1],[R[271]]],[R[271]]]]],[11,R[379],E,R[277],8,[[["u32"],["self"]],[R[1]]]],[11,"ttl",E,R[296],8,[[["self"]],[[R[1],["u32"]],["u32"]]]],[11,R[297],E,R[278],8,[[["self"],["bool"]],[R[1]]]],[11,R[362],E,R[298],8,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[283],E,R[284],8,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[11,"bind",E,"Creates a UDP socket from the given address.",9,[[[R[273]]],[[R[1],[R[276]]],[R[276]]]]],[11,"from_socket",E,"Creates a new mio-wrapped socket from an underlying and…",9,[[[R[276]]],[[R[1],[R[276]]],[R[276]]]]],[11,R[336],E,"Returns the socket address that this socket was created…",9,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,R[337],E,R[338],9,[[["self"]],[[R[1],[R[276]]],[R[276]]]]],[11,"send_to",E,"Sends data on the socket to the given address. On success,…",9,[[["self"],[R[273]]],[[R[1],[R[4]]],[R[4]]]]],[11,R[392],E,"Receives data from the socket. On success, returns the…",9,[[["self"]],[R[1]]]],[11,"send",E,R[339],9,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,"recv",E,"Receives data from the socket previously bound with…",9,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,R[410],E,R[435],9,[[[R[273]],["self"]],[R[1]]]],[11,R[363],E,R[364],9,[[["self"],["bool"]],[R[1]]]],[11,R[365],E,R[366],9,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[367],E,R[368],9,[[["self"],["bool"]],[R[1]]]],[11,R[369],E,R[370],9,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[371],E,R[372],9,[[["u32"],["self"]],[R[1]]]],[11,R[373],E,R[374],9,[[["self"]],[[R[1],["u32"]],["u32"]]]],[11,R[375],E,R[376],9,[[["self"],["bool"]],[R[1]]]],[11,R[377],E,R[378],9,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[379],E,R[277],9,[[["u32"],["self"]],[R[1]]]],[11,"ttl",E,R[296],9,[[["self"]],[[R[1],["u32"]],["u32"]]]],[11,R[380],E,R[381],9,[[["self"],[R[311]]],[R[1]]]],[11,R[382],E,R[383],9,[[[R[384]],["u32"],["self"]],[R[1]]]],[11,R[385],E,R[386],9,[[["self"],[R[311]]],[R[1]]]],[11,R[387],E,R[388],9,[[[R[384]],["u32"],["self"]],[R[1]]]],[11,R[297],E,R[278],9,[[["self"],["bool"]],[R[1]]]],[11,R[362],E,R[298],9,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[283],E,R[284],9,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[11,"recv_bufs",E,"Receives a single datagram message socket previously bound…",9,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,"send_bufs",E,R[339],9,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[0,"event","mio","Readiness event types and utilities.",N,N],[3,"Events",R[343],R[340],N,N],[3,"Iter",E,"[`Events`] iterator.",N,N],[3,"Event",E,"An readiness event returned by [`Poll::poll`].",N,N],[8,"Evented",E,"A value that may be registered with `Poll`",N,N],[10,R[345],E,"Register `self` with the given `Poll` instance.",10,[[["ready"],[R[333]],["poll"],["self"],["token"]],[R[1]]]],[10,R[341],E,"Re-register `self` with the given `Poll` instance.",10,[[["ready"],[R[333]],["poll"],["self"],["token"]],[R[1]]]],[10,R[342],E,"Deregister `self` from the given `Poll` instance",10,[[["self"],["poll"]],[R[1]]]],[0,"unix","mio","Unix only extensions",N,N],[3,R[355],R[344],"Adapter for [`RawFd`] providing an [`Evented`]…",N,N],[12,"0",E,E,11,N],[3,R[356],E,"Unix specific extensions to `Ready`",N,N],[11,"into","mio",E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[13]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[6],E,E,5,[[[U]],[R[1]]]],[11,R[7],E,E,5,[[],[R[1]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[R[13]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"],[T]]]],[11,R[6],E,E,6,[[[U]],[R[1]]]],[11,R[7],E,E,6,[[],[R[1]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"],[T]]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[13]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"],[T]]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"],[T]]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[13]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[66],E,E,4,[[],["i"]]],[11,R[6],E,E,4,[[[U]],[R[1]]]],[11,R[7],E,E,4,[[],[R[1]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[13]]]],[11,"into",R[343],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[11],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"],[T]]]],[11,R[6],E,E,12,[[[U]],[R[1]]]],[11,R[7],E,E,12,[[],[R[1]]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[R[13]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[66],E,E,13,[[],["i"]]],[11,R[11],E,E,13,[[["self"]],[T]]],[11,R[12],E,E,13,[[["self"],[T]]]],[11,R[6],E,E,13,[[[U]],[R[1]]]],[11,R[7],E,E,13,[[],[R[1]]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[R[13]]]],[11,"into",R[344],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[6],E,E,11,[[[U]],[R[1]]]],[11,R[7],E,E,11,[[],[R[1]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[R[13]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[11],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[["self"],[T]]]],[11,R[6],E,E,14,[[[U]],[R[1]]]],[11,R[7],E,E,14,[[],[R[1]]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[R[13]]]],[11,"into",R[346],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[6],E,E,8,[[[U]],[R[1]]]],[11,R[7],E,E,8,[[],[R[1]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[R[13]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[6],E,E,7,[[[U]],[R[1]]]],[11,R[7],E,E,7,[[],[R[1]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[R[13]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[6],E,E,9,[[[U]],[R[1]]]],[11,R[7],E,E,9,[[],[R[1]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[R[13]]]],[11,R[345],"mio",E,5,[[["ready"],[R[333]],["poll"],["self"],["token"]],[R[1]]]],[11,R[341],E,E,5,[[["ready"],[R[333]],["poll"],["self"],["token"]],[R[1]]]],[11,R[342],E,E,5,[[["self"],["poll"]],[R[1]]]],[11,R[345],R[344],E,11,[[["ready"],[R[333]],["poll"],["self"],["token"]],[R[1]]]],[11,R[341],E,E,11,[[["ready"],[R[333]],["poll"],["self"],["token"]],[R[1]]]],[11,R[342],E,E,11,[[["self"],["poll"]],[R[1]]]],[11,R[345],R[346],E,7,[[["ready"],[R[333]],["poll"],["self"],["token"]],[R[1]]]],[11,R[341],E,E,7,[[["ready"],[R[333]],["poll"],["self"],["token"]],[R[1]]]],[11,R[342],E,E,7,[[["self"],["poll"]],[R[1]]]],[11,R[345],E,E,8,[[["ready"],[R[333]],["poll"],["self"],["token"]],[R[1]]]],[11,R[341],E,E,8,[[["ready"],[R[333]],["poll"],["self"],["token"]],[R[1]]]],[11,R[342],E,E,8,[[["self"],["poll"]],[R[1]]]],[11,R[345],E,E,9,[[["ready"],[R[333]],["poll"],["self"],["token"]],[R[1]]]],[11,R[341],E,E,9,[[["ready"],[R[333]],["poll"],["self"],["token"]],[R[1]]]],[11,R[342],E,E,9,[[["self"],["poll"]],[R[1]]]],[11,"drop","mio",E,5,[[["self"]]]],[11,"from",R[344],E,14,[[["ready"]],[R[347]]]],[11,"from","mio",E,2,[[[R[347]]],["ready"]]],[11,"from",E,E,0,[[[R[4]]],["token"]]],[11,"next",R[343],E,13,[[["self"]],[["event"],[R[18],["event"]]]]],[11,R[66],"mio",E,4,[[]]],[11,"clone",E,E,1,[[["self"]],[R[333]]]],[11,"clone",E,E,2,[[["self"]],["ready"]]],[11,"clone",R[343],E,12,[[["self"]],["event"]]],[11,"clone","mio",E,6,[[["self"]],["setreadiness"]]],[11,"clone",R[343],E,13,[[["self"]],["iter"]]],[11,"clone",R[344],E,14,[[["self"]],[R[347]]]],[11,"clone","mio",E,0,[[["self"]],["token"]]],[11,"cmp",E,E,1,[[["self"],[R[333]]],[R[16]]]],[11,"cmp",E,E,2,[[["self"],["ready"]],[R[16]]]],[11,"cmp",R[344],E,14,[[["self"],[R[347]]],[R[16]]]],[11,"cmp","mio",E,0,[[["self"],["token"]],[R[16]]]],[11,"eq",E,E,1,[[["self"],[R[333]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[333]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["ready"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["ready"]],["bool"]]],[11,"eq",R[343],E,12,[[["self"],["event"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["event"]],["bool"]]],[11,"eq",R[344],E,14,[[["self"],[R[347]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[347]]],["bool"]]],[11,"eq","mio",E,0,[[["self"],["token"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["token"]],["bool"]]],[11,R[46],E,E,1,[[["self"],[R[333]]],[[R[18],[R[16]]],[R[16]]]]],[11,"lt",E,E,1,[[["self"],[R[333]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[333]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[333]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[333]]],["bool"]]],[11,R[46],E,E,2,[[["self"],["ready"]],[[R[18],[R[16]]],[R[16]]]]],[11,"lt",E,E,2,[[["self"],["ready"]],["bool"]]],[11,"le",E,E,2,[[["self"],["ready"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["ready"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["ready"]],["bool"]]],[11,R[46],R[344],E,14,[[["self"],[R[347]]],[[R[18],[R[16]]],[R[16]]]]],[11,"lt",E,E,14,[[["self"],[R[347]]],["bool"]]],[11,"le",E,E,14,[[["self"],[R[347]]],["bool"]]],[11,"gt",E,E,14,[[["self"],[R[347]]],["bool"]]],[11,"ge",E,E,14,[[["self"],[R[347]]],["bool"]]],[11,R[46],"mio",E,0,[[["self"],["token"]],[[R[18],[R[16]]],[R[16]]]]],[11,"lt",E,E,0,[[["self"],["token"]],["bool"]]],[11,"le",E,E,0,[[["self"],["token"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["token"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["token"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[343],E,12,[[["self"],[R[17]]],[R[1]]]],[11,"fmt","mio",E,3,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[343],E,13,[[["self"],[R[17]]],[R[1]]]],[11,"fmt","mio",E,4,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[344],E,11,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,14,[[["self"],[R[17]]],[R[1]]]],[11,"fmt","mio",E,0,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[346],E,7,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[1]]]],[11,"sub","mio",E,1,[[[R[333]]],[R[333]]]],[11,"sub",E,E,2,[[[T]],["ready"]]],[11,"sub",R[344],E,14,[[[R[347]]],[R[347]]]],[11,R[522],"mio",E,2,[[["self"],[T]]]],[11,"bitand",E,E,1,[[[R[333]]],[R[333]]]],[11,"bitand",E,E,2,[[[T]],["ready"]]],[11,"bitand",R[344],E,14,[[[R[347]]],[R[347]]]],[11,"bitor","mio",E,1,[[[R[333]]],[R[333]]]],[11,"bitor",E,E,2,[[[T]],["ready"]]],[11,"bitor",R[344],E,14,[[[R[347]]],[R[347]]]],[11,"bitxor","mio",E,1,[[[R[333]]],[R[333]]]],[11,"bitxor",E,E,2,[[[T]],["ready"]]],[11,"bitxor",R[344],E,14,[[[R[347]]],[R[347]]]],[11,"bitand_assign","mio",E,2,[[["self"],[T]]]],[11,"bitor_assign",E,E,2,[[["self"],[T]]]],[11,"bitxor_assign",E,E,2,[[["self"],[T]]]],[11,"deref",R[344],E,14,[[["self"]],["ready"]]],[11,R[531],E,E,14,[[["self"]],["ready"]]],[11,"hash","mio",E,0,[[["self"],["__h"]]]],[11,"read",R[346],E,7,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,"write",E,E,7,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,"flush",E,E,7,[[["self"]],[R[1]]]],[11,R[321],"mio",E,3,[[["self"]],["rawfd"]]],[11,R[321],R[346],E,7,[[["self"]],["rawfd"]]],[11,R[321],E,E,8,[[["self"]],["rawfd"]]],[11,R[321],E,E,9,[[["self"]],["rawfd"]]],[11,R[322],E,E,7,[[["rawfd"]],[R[272]]]],[11,R[322],E,E,8,[[["rawfd"]],[R[271]]]],[11,R[322],E,E,9,[[["rawfd"]],[R[276]]]],[11,R[348],E,E,7,[[],["rawfd"]]],[11,R[348],E,E,8,[[],["rawfd"]]],[11,R[348],E,E,9,[[],["rawfd"]]],[11,"new",R[343],"Creates a new `Event` containing `readiness` and `token`",12,[[["ready"],["token"]],["event"]]],[11,R[349],E,"Returns the event's readiness.",12,[[["self"]],["ready"]]],[11,"token",E,"Returns the event's token.",12,[[["self"]],["token"]]],[11,"error",R[344],"Returns a `Ready` representing error readiness.",14,[[],[R[347]]]],[11,"hup",E,"Returns a `Ready` representing HUP readiness.",14,[[],[R[347]]]],[11,"priority",E,"Returns a `Ready` representing priority (`EPOLLPRI`)…",14,[[],[R[347]]]],[11,"is_error",E,"Returns true if the value includes error readiness",14,[[["self"]],["bool"]]],[11,"is_hup",E,"Returns true if the value includes HUP readiness",14,[[["self"]],["bool"]]],[11,"is_priority",E,"Returns true if `Ready` contains priority (`EPOLLPRI`)…",14,[[["self"]],["bool"]]]],"p":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"Poll"],[3,"Events"],[3,R[350]],[3,R[351]],[3,R[352]],[3,R[353]],[3,R[354]],[8,"Evented"],[3,R[355]],[3,"Event"],[3,"Iter"],[3,R[356]]]};
searchIndex["mio_uds"]={"doc":"MIO bindings for Unix Domain Sockets","i":[[3,R[409],"mio_uds","A Unix stream socket.",N,N],[3,R[408],E,"A structure representing a Unix domain socket server.",N,N],[3,R[407],E,"A Unix datagram socket.",N,N],[11,"bind",E,"Creates a Unix datagram socket bound to the given path.",0,[[["path"],["asref",["path"]]],[[R[390]],[R[1],[R[390]]]]]],[11,"from_datagram",E,"Consumes a standard library `UnixDatagram` and returns a…",0,[[[R[390]]],[[R[390]],[R[1],[R[390]]]]]],[11,"pair",E,"Create an unnamed pair of connected sockets.",0,[[],[R[1]]]],[11,"unbound",E,"Creates a Unix Datagram socket which is not bound to any…",0,[[],[[R[390]],[R[1],[R[390]]]]]],[11,R[410],E,R[444],0,[[["asref",["path"]],["self"],["path"]],[R[1]]]],[11,R[337],E,R[338],0,[[["self"]],[[R[390]],[R[1],[R[390]]]]]],[11,R[336],E,"Returns the address of this socket.",0,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,R[391],E,R[448],0,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,R[392],E,R[393],0,[[["self"]],[R[1]]]],[11,"recv",E,R[393],0,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,"send_to",E,R[446],0,[[["path"],["asref",["path"]],["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,"send",E,R[445],0,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,R[283],E,R[399],0,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[11,R[394],E,R[449],0,[[[R[394]],["self"]],[R[1]]]],[11,"bind",E,"Creates a new `UnixListener` bound to the specified socket.",1,[[["path"],["asref",["path"]]],[[R[1],[R[395]]],[R[395]]]]],[11,"from_listener",E,"Consumes a standard library `UnixListener` and returns a…",1,[[[R[395]]],[[R[1],[R[395]]],[R[395]]]]],[11,"accept",E,R[397],1,[[["self"]],[[R[18]],[R[1],[R[18]]]]]],[11,R[396],E,R[397],1,[[["self"]],[[R[1],[R[18]]],[R[18]]]]],[11,R[337],E,R[338],1,[[["self"]],[[R[1],[R[395]]],[R[395]]]]],[11,R[336],E,R[398],1,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,R[283],E,R[399],1,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[11,R[410],E,R[452],2,[[["path"],["asref",["path"]]],[[R[1],[R[400]]],[R[400]]]]],[11,R[401],E,"Consumes a standard library `UnixStream` and returns a…",2,[[[R[400]]],[[R[1],[R[400]]],[R[400]]]]],[11,"pair",E,R[443],2,[[],[R[1]]]],[11,R[337],E,R[338],2,[[["self"]],[[R[1],[R[400]]],[R[400]]]]],[11,R[336],E,R[453],2,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,R[391],E,R[454],2,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,R[283],E,R[399],2,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[11,R[394],E,R[402],2,[[[R[394]],["self"]],[R[1]]]],[11,R[403],E,R[404],2,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,R[405],E,R[406],2,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[13]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[1]]]],[11,"read",E,E,2,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,"write",E,E,2,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,"flush",E,E,2,[[["self"]],[R[1]]]],[11,R[321],E,E,0,[[["self"]],["i32"]]],[11,R[321],E,E,1,[[["self"]],["i32"]]],[11,R[321],E,E,2,[[["self"]],["i32"]]],[11,R[322],E,E,0,[[["i32"]],[R[390]]]],[11,R[322],E,E,1,[[["i32"]],[R[395]]]],[11,R[322],E,E,2,[[["i32"]],[R[400]]]],[11,R[348],E,E,0,[[],["i32"]]],[11,R[348],E,E,1,[[],["i32"]]],[11,R[348],E,E,2,[[],["i32"]]],[11,R[345],E,E,0,[[["poll"],["ready"],[R[333]],["token"],["self"]],[R[1]]]],[11,R[341],E,E,0,[[["poll"],["ready"],[R[333]],["token"],["self"]],[R[1]]]],[11,R[342],E,E,0,[[["self"],["poll"]],[R[1]]]],[11,R[345],E,E,1,[[["poll"],["ready"],[R[333]],["token"],["self"]],[R[1]]]],[11,R[341],E,E,1,[[["poll"],["ready"],[R[333]],["token"],["self"]],[R[1]]]],[11,R[342],E,E,1,[[["self"],["poll"]],[R[1]]]],[11,R[345],E,E,2,[[["poll"],["ready"],[R[333]],["token"],["self"]],[R[1]]]],[11,R[341],E,E,2,[[["poll"],["ready"],[R[333]],["token"],["self"]],[R[1]]]],[11,R[342],E,E,2,[[["self"],["poll"]],[R[1]]]]],"p":[[3,R[407]],[3,R[408]],[3,R[409]]]};
searchIndex["net2"]={"doc":"Extensions to `std::net` networking types.","i":[[3,R[323],"net2","An \"in progress\" TCP socket which has not yet been…",N,N],[3,R[324],E,"An \"in progress\" UDP socket which has not yet been…",N,N],[11,"new_v4",E,"Constructs a new TcpBuilder with the `AF_INET` domain, the…",0,[[],[[R[270]],[R[1],[R[270]]]]]],[11,"new_v6",E,"Constructs a new TcpBuilder with the `AF_INET6` domain,…",0,[[],[[R[270]],[R[1],[R[270]]]]]],[11,"bind",E,R[275],0,[[["self"],[T]],[[R[270]],[R[1],[R[270]]]]]],[11,"listen",E,"Mark a socket as ready to accept incoming connection…",0,[[["self"],["i32"]],[[R[1],[R[271]]],[R[271]]]]],[11,R[410],E,"Initiate a connection on this socket to the specified…",0,[[["self"],[T]],[[R[272]],[R[1],[R[272]]]]]],[11,"to_tcp_stream",E,"Converts this builder into a `TcpStream`",0,[[["self"]],[[R[272]],[R[1],[R[272]]]]]],[11,"to_tcp_listener",E,"Converts this builder into a `TcpListener`",0,[[["self"]],[[R[1],[R[271]]],[R[271]]]]],[11,R[336],E,"Returns the address of the local half of this TCP socket.",0,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,"new_v4",E,"Constructs a new UdpBuilder with the `AF_INET` domain, the…",1,[[],[[R[274]],[R[1],[R[274]]]]]],[11,"new_v6",E,"Constructs a new UdpBuilder with the `AF_INET6` domain,…",1,[[],[[R[274]],[R[1],[R[274]]]]]],[11,"bind",E,R[275],1,[[["self"],[T]],[[R[276]],[R[1],[R[276]]]]]],[11,"ttl",E,R[277],0,[[["u32"],["self"]],[[R[1]],["self"]]]],[11,R[362],E,R[278],0,[[["self"],["bool"]],[[R[1]],["self"]]]],[11,R[279],E,R[280],0,[[["self"],["bool"]],[[R[1]],["self"]]]],[11,R[281],E,R[282],0,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[283],E,R[284],0,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[11,"ttl",E,R[277],1,[[["u32"],["self"]],[[R[1]],["self"]]]],[11,R[362],E,R[278],1,[[["self"],["bool"]],[[R[1]],["self"]]]],[11,R[279],E,R[280],1,[[["self"],["bool"]],[[R[1]],["self"]]]],[11,R[281],E,R[282],1,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[283],E,R[284],1,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[0,"unix",E,"Unix-specific extensions to the `std::net` types.",N,N],[8,R[325],"net2::unix","Unix-specific extensions for the `TcpBuilder` type in this…",N,N],[10,R[285],E,R[286],2,[[["self"],["bool"]],[[R[1]],["self"]]]],[10,R[287],E,R[288],2,[[["self"]],[[R[1],["bool"]],["bool"]]]],[8,R[326],E,"Unix-specific extensions for the `UdpBuilder` type in this…",N,N],[10,R[285],E,R[286],3,[[["self"],["bool"]],[[R[1]],["self"]]]],[10,R[287],E,R[288],3,[[["self"]],[[R[1],["bool"]],["bool"]]]],[8,R[327],"net2","Extension methods for the standard [`TcpStream`…",N,N],[10,R[357],E,R[358],4,[[["self"],["bool"]],[R[1]]]],[10,"nodelay",E,R[359],4,[[["self"]],[[R[1],["bool"]],["bool"]]]],[10,R[303],E,R[304],4,[[["self"],[R[4]]],[R[1]]]],[10,R[305],E,R[306],4,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[10,R[307],E,R[308],4,[[["self"],[R[4]]],[R[1]]]],[10,R[309],E,R[310],4,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[10,"set_keepalive_ms",E,R[289],4,[[["u32"],["self"],[R[18],["u32"]]],[R[1]]]],[10,"keepalive_ms",E,R[290],4,[[["self"]],[[R[1],[R[18]]],[R[18],["u32"]]]]],[10,R[360],E,R[289],4,[[[R[18],[R[291]]],["self"],[R[291]]],[R[1]]]],[10,R[361],E,R[290],4,[[["self"]],[[R[1],[R[18]]],[R[18],[R[291]]]]]],[10,R[312],E,R[292],4,[[["u32"],["self"],[R[18],["u32"]]],[R[1]]]],[10,R[313],E,R[292],4,[[[R[18],[R[291]]],["self"],[R[291]]],[R[1]]]],[10,R[314],E,R[293],4,[[["self"]],[[R[1],[R[18]]],[R[18],["u32"]]]]],[10,R[315],E,R[293],4,[[["self"]],[[R[1],[R[18]]],[R[18],[R[291]]]]]],[10,R[316],E,R[294],4,[[["u32"],["self"],[R[18],["u32"]]],[R[1]]]],[10,R[317],E,R[294],4,[[[R[18],[R[291]]],["self"],[R[291]]],[R[1]]]],[10,R[318],E,R[295],4,[[["self"]],[[R[1],[R[18]]],[R[18],["u32"]]]]],[10,R[319],E,R[295],4,[[["self"]],[[R[1],[R[18]]],[R[18],[R[291]]]]]],[10,R[379],E,R[277],4,[[["u32"],["self"]],[R[1]]]],[10,"ttl",E,R[296],4,[[["self"]],[[R[1],["u32"]],["u32"]]]],[10,R[297],E,R[278],4,[[["self"],["bool"]],[R[1]]]],[10,R[362],E,R[298],4,[[["self"]],[[R[1],["bool"]],["bool"]]]],[10,R[410],E,"Executes a `connect` operation on this socket,…",4,[[["self"],[R[320]]],[R[1]]]],[10,R[283],E,R[284],4,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[10,R[299],E,"Moves this TCP stream into or out of nonblocking mode.",4,[[["self"],["bool"]],[R[1]]]],[10,R[300],E,R[301],4,[[[R[18],[R[291]]],["self"],[R[291]]],[R[1]]]],[10,"linger",E,R[302],4,[[["self"]],[[R[1],[R[18]]],[R[18],[R[291]]]]]],[8,R[328],E,"Extension methods for the standard [`TcpListener`…",N,N],[10,R[379],E,R[277],5,[[["u32"],["self"]],[R[1]]]],[10,"ttl",E,R[296],5,[[["self"]],[[R[1],["u32"]],["u32"]]]],[10,R[297],E,R[278],5,[[["self"],["bool"]],[R[1]]]],[10,R[362],E,R[298],5,[[["self"]],[[R[1],["bool"]],["bool"]]]],[10,R[283],E,R[284],5,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[10,R[299],E,"Moves this TCP listener into or out of nonblocking mode.",5,[[["self"],["bool"]],[R[1]]]],[10,R[300],E,R[301],5,[[[R[18],[R[291]]],["self"],[R[291]]],[R[1]]]],[10,"linger",E,R[302],5,[[["self"]],[[R[1],[R[18]]],[R[18],[R[291]]]]]],[8,R[329],E,"Extension methods for the standard [`UdpSocket`…",N,N],[10,R[303],E,R[304],6,[[["self"],[R[4]]],[R[1]]]],[10,R[305],E,R[306],6,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[10,R[307],E,R[308],6,[[["self"],[R[4]]],[R[1]]]],[10,R[309],E,R[310],6,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[10,R[363],E,R[364],6,[[["self"],["bool"]],[R[1]]]],[10,R[365],E,R[366],6,[[["self"]],[[R[1],["bool"]],["bool"]]]],[10,R[367],E,R[368],6,[[["self"],["bool"]],[R[1]]]],[10,R[369],E,R[370],6,[[["self"]],[[R[1],["bool"]],["bool"]]]],[10,R[371],E,R[372],6,[[["u32"],["self"]],[R[1]]]],[10,R[373],E,R[374],6,[[["self"]],[[R[1],["u32"]],["u32"]]]],[10,"set_multicast_hops_v6",E,"Sets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["u32"],["self"]],[R[1]]]],[10,"multicast_hops_v6",E,"Gets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"]],[[R[1],["u32"]],["u32"]]]],[10,R[375],E,R[376],6,[[["self"],["bool"]],[R[1]]]],[10,R[377],E,R[378],6,[[["self"]],[[R[1],["bool"]],["bool"]]]],[10,"set_multicast_if_v4",E,"Sets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"],[R[311]]],[R[1]]]],[10,"multicast_if_v4",E,"Gets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"]],[[R[1],[R[311]]],[R[311]]]]],[10,"set_multicast_if_v6",E,"Sets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["u32"],["self"]],[R[1]]]],[10,"multicast_if_v6",E,"Gets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"]],[[R[1],["u32"]],["u32"]]]],[10,R[379],E,R[277],6,[[["u32"],["self"]],[R[1]]]],[10,"ttl",E,R[296],6,[[["self"]],[[R[1],["u32"]],["u32"]]]],[10,"set_unicast_hops_v6",E,"Sets the value for the `IPV6_UNICAST_HOPS` option on this…",6,[[["u32"],["self"]],[R[1]]]],[10,"unicast_hops_v6",E,"Gets the value of the `IPV6_UNICAST_HOPS` option for this…",6,[[["self"]],[[R[1],["u32"]],["u32"]]]],[10,R[297],E,R[278],6,[[["self"],["bool"]],[R[1]]]],[10,R[362],E,R[298],6,[[["self"]],[[R[1],["bool"]],["bool"]]]],[10,R[380],E,R[381],6,[[["self"],[R[311]]],[R[1]]]],[10,R[382],E,R[383],6,[[[R[384]],["u32"],["self"]],[R[1]]]],[10,R[385],E,R[386],6,[[["self"],[R[311]]],[R[1]]]],[10,R[387],E,R[388],6,[[[R[384]],["u32"],["self"]],[R[1]]]],[10,R[312],E,R[292],6,[[["u32"],["self"],[R[18],["u32"]]],[R[1]]]],[10,R[313],E,R[292],6,[[[R[18],[R[291]]],["self"],[R[291]]],[R[1]]]],[10,R[314],E,R[293],6,[[["self"]],[[R[1],[R[18]]],[R[18],["u32"]]]]],[10,R[315],E,R[293],6,[[["self"]],[[R[1],[R[18]]],[R[18],[R[291]]]]]],[10,R[316],E,R[294],6,[[["u32"],["self"],[R[18],["u32"]]],[R[1]]]],[10,R[317],E,R[294],6,[[[R[18],[R[291]]],["self"],[R[291]]],[R[1]]]],[10,R[318],E,R[295],6,[[["self"]],[[R[1],[R[18]]],[R[18],["u32"]]]]],[10,R[319],E,R[295],6,[[["self"]],[[R[1],[R[18]]],[R[18],[R[291]]]]]],[10,R[283],E,R[284],6,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[10,R[410],E,"Connects this UDP socket to a remote address, allowing the…",6,[[["self"],[R[320]]],[R[1]]]],[10,"send",E,"Sends data on the socket to the remote address to which it…",6,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[10,"recv",E,R[389],6,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[10,R[299],E,"Moves this UDP socket into or out of nonblocking mode.",6,[[["self"],["bool"]],[R[1]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[13]]]],[11,R[285],E,E,0,[[["self"],["bool"]],[[R[1]],["self"]]]],[11,R[287],E,E,0,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[285],E,E,1,[[["self"],["bool"]],[[R[1]],["self"]]]],[11,R[287],E,E,1,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[1]]]],[11,R[321],E,E,0,[[["self"]],["c_int"]]],[11,R[321],E,E,1,[[["self"]],["c_int"]]],[11,R[322],E,E,0,[[["c_int"]],[R[270]]]],[11,R[322],E,E,1,[[["c_int"]],[R[274]]]]],"p":[[3,R[323]],[3,R[324]],[8,R[325]],[8,R[326]],[8,R[327]],[8,R[328]],[8,R[329]]]};
searchIndex["pin_project"]={"doc":"A crate for safe and ergonomic pin-projection.","i":[[23,R[330],R[330],"An attribute that creates a projection struct covering all…",N,N],[23,"pinned_drop",E,"An attribute for annotating an impl block that implements…",N,N],[23,"project",E,R[331],N,N],[23,"project_ref",E,R[331],N,N],[8,"UnsafeUnpin",E,"A trait used for custom implementations of [`Unpin`]. This…",N,N]],"p":[]};
searchIndex["signal_hook_registry"]={"doc":"Backend of the [signal-hook] crate.","i":[[3,"SigId","signal_hook_registry","An ID of registered action.",N,N],[5,R[345],E,"Registers an arbitrary action for the given signal.",N,[[["c_int"],["f"]],[["error"],["sigid"],[R[1],["sigid","error"]]]]],[5,"register_sigaction",E,"Register a signal action.",N,[[["c_int"],["f"]],[["error"],["sigid"],[R[1],["sigid","error"]]]]],[5,"register_signal_unchecked",E,R[332],N,[[["c_int"],["f"]],[["error"],["sigid"],[R[1],["sigid","error"]]]]],[5,"register_unchecked",E,R[332],N,[[["c_int"],["f"]],[["error"],["sigid"],[R[1],["sigid","error"]]]]],[5,"unregister",E,"Removes a previously installed action.",N,[[["sigid"]],["bool"]]],[5,"unregister_signal",E,"Removes all previously installed actions for a given signal.",N,[[["c_int"]],["bool"]]],[17,"FORBIDDEN",E,"List of forbidden signals.",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"],[T]]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[13]]]],[11,"clone",E,E,0,[[["self"]],["sigid"]]],[11,"cmp",E,E,0,[[["sigid"],["self"]],[R[16]]]],[11,"eq",E,E,0,[[["sigid"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["sigid"],["self"]],["bool"]]],[11,R[46],E,E,0,[[["sigid"],["self"]],[[R[18],[R[16]]],[R[16]]]]],[11,"lt",E,E,0,[[["sigid"],["self"]],["bool"]]],[11,"le",E,E,0,[[["sigid"],["self"]],["bool"]]],[11,"gt",E,E,0,[[["sigid"],["self"]],["bool"]]],[11,"ge",E,E,0,[[["sigid"],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[1]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]]],"p":[[3,"SigId"]]};
searchIndex["task_scope"]={"doc":"A runtime extension for supporting Structured Concurrency…","i":[[4,"Canceled",R[616],"The error type for cancellation.",N,N],[13,"Graceful",E,"The parent task issued a graceful cancellation request.…",0,N],[13,"Forced",E,"The parent task is forcibly shutting down children (mainly…",0,N],[0,R[615],E,E,N,N],[3,R[623],R[618],"A cancelable wrapper for asynchronous operations.",N,N],[5,R[615],E,"Creates a cancelable wrapper for asynchronous operations…",N,[[[T]],[R[615]]]],[11,"poll_canceled",E,"Polls whether the task is canceled.",1,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18],[R[114]]]]]],[11,"inner",E,"retrieve the inner value.",1,[[["self"],["pin"]],[["pin"],[T]]]],[0,R[617],R[616],E,N,N],[3,R[625],R[619],"Future for checking the current cancellation status…",N,N],[5,R[617],E,"Creates a future that checks the current cancellation…",N,[[],[R[617]]]],[0,"handle",R[616],E,N,N],[3,R[614],R[620],"A handle for joining on a spawned task.",N,N],[0,"scope",R[616],E,N,N],[3,R[624],R[621],"A future that manages a scope.",N,N],[5,"scope",E,"Create a new task scope.",N,[[["fut"]],["scopefuture"]]],[11,"cancel",E,"Initiates a graceful cancellation.",2,[[["self"],["pin"]]]],[11,"force_cancel",E,"Cancels all the tasks in the scope forcibly. Tasks within…",2,[[["self"],["pin"]]]],[0,"spawn",R[616],E,N,N],[3,R[626],R[622],"A future that spawns the given future on the first poll.",N,N],[5,"spawn",E,"Creates a future that spawns the given task in the current…",N,[[["f"]],["spawnfuture"]]],[11,"into",R[616],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[41],E,E,0,[[["self"]],[R[79]]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[13]]]],[11,"into",R[618],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[13]]]],[11,R[511],E,E,1,[[["pin"],["f"],[R[2]]],["poll"]]],[11,R[112],E,E,1,[[[R[2]],["s"],["pin"]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"into",R[619],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[13]]]],[11,"into",R[620],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[6],E,E,4,[[[U]],[R[1]]]],[11,R[7],E,E,4,[[],[R[1]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[13]]]],[11,R[511],E,E,4,[[["pin"],["f"],[R[2]]],["poll"]]],[11,"into",R[621],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[13]]]],[11,R[511],E,E,2,[[["pin"],["f"],[R[2]]],["poll"]]],[11,"into",R[622],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[6],E,E,5,[[[U]],[R[1]]]],[11,R[7],E,E,5,[[],[R[1]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[R[13]]]],[11,"eq",R[616],E,0,[[[R[114]],["self"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[17]]],[R[1]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"poll",R[618],E,1,[[[R[2]],["self"],["pin"]],["poll"]]],[11,"poll",R[619],E,3,[[[R[2]],["self"],["pin"]],["poll"]]],[11,"poll",R[620],E,4,[[[R[2]],["self"],["pin"]],["poll"]]],[11,"poll",R[621],E,2,[[[R[2]],["self"],["pin"]],["poll"]]],[11,"poll",R[622],E,5,[[[R[2]],["self"],["pin"]],["poll"]]],[11,R[116],R[618],E,1,[[["self"]],["bool"]]],[11,R[116],R[619],E,3,[[["self"]],["bool"]]],[11,R[116],R[621],E,2,[[["self"]],["bool"]]],[11,R[116],R[622],E,5,[[["self"]],["bool"]]],[11,R[115],R[618],E,1,[[[R[2]],["self"],["pin"]],[[R[18]],["poll",[R[18]]]]]],[11,R[67],E,E,1,[[["self"]]]],[11,R[116],E,E,1,[[["self"]],["bool"]]],[11,R[461],E,E,1,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4]]]]]],[11,R[458],E,E,1,[[["self"]],["bool"]]],[11,R[464],E,E,1,[[["b"],[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4]]]]]],[11,R[466],E,E,1,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4]]]]]],[11,R[31],E,E,1,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[469],E,E,1,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[471],E,E,1,[[["b"],[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4]]]]]]],"p":[[4,"Canceled"],[3,R[623]],[3,R[624]],[3,R[625]],[3,R[614]],[3,R[626]]]};
searchIndex["tokio"]={"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[23,"main","tokio","Marks async function to be executed by selected runtime.",N,N],[23,"test",E,"Marks async function to be executed by runtime, suitable…",N,N],[5,"spawn",E,R[492],N,[[[T]],[R[475]]]],[0,"fs",E,"Asynchronous file and standard stream adaptation.",N,N],[3,"File",R[416],"A reference to an open file on the filesystem.",N,N],[3,R[592],E,"Options and flags which can be used to configure how a…",N,N],[3,"DirEntry",E,"Entries returned by the [`ReadDir`] stream.",N,N],[3,"ReadDir",E,"Stream of the entries in a directory.",N,N],[5,"create_dir",E,"Creates a new, empty directory at the provided path",N,[[]]],[5,"create_dir_all",E,"Recursively create a directory and all of its parent…",N,[[]]],[5,"hard_link",E,"Creates a new hard link on the filesystem.",N,[[]]],[5,R[417],E,R[412],N,[[]]],[5,"read",E,R[411],N,[[]]],[5,"read_dir",E,"Returns a stream over the entries within a directory.",N,[[]]],[5,"read_link",E,"Reads a symbolic link, returning the file that the link…",N,[[]]],[5,R[429],E,R[411],N,[[]]],[5,"remove_dir",E,"Removes an existing, empty directory.",N,[[]]],[5,"remove_dir_all",E,"Removes a directory at this path, after removing all its…",N,[[]]],[5,"remove_file",E,"Removes a file from the filesystem.",N,[[]]],[5,"rename",E,"Rename a file or directory to a new name, replacing the…",N,[[]]],[5,R[413],E,"Changes the permissions found on a file or a directory.",N,[[[R[414]]]]],[5,"symlink_metadata",E,R[412],N,[[]]],[5,"write",E,"Creates a future that will open a file for writing and…",N,[[["asref"],["unpin"]]]],[11,"open",E,"Attempts to open a file in read-only mode.",0,[[]]],[11,"create",E,"Opens a file in write-only mode.",0,[[]]],[11,R[434],E,"Convert a [`std::fs::File`][std] to a…",0,[[["file"]],["file"]]],[11,"seek",E,"Seek to an offset, in bytes, in a stream.",0,[[[R[15]],["self"]]]],[11,"sync_all",E,"Attempts to sync all OS-internal metadata to disk.",0,[[["self"]]]],[11,"sync_data",E,"This function is similar to `sync_all`, except that it may…",0,[[["self"]]]],[11,"set_len",E,"Truncates or extends the underlying file, updating the…",0,[[["u64"],["self"]]]],[11,R[417],E,"Queries metadata about the underlying file.",0,[[["self"]]]],[11,R[337],E,"Create a new `File` instance that shares the same…",0,[[["self"]]]],[11,"into_std",E,"Destructures `File` into a [`std::fs::File`][std]. This…",0,[[]]],[11,"try_into_std",E,"Tries to immediately destructure `File` into a…",0,[[],[["file"],[R[1],["file"]]]]],[11,R[413],E,"Changes the permissions on the underlying file.",0,[[["self"],[R[414]]]]],[11,"new",E,"Creates a blank new set of options ready for configuration.",1,[[],[R[415]]]],[11,"read",E,"See the underlying [`read`] call for details.",1,[[["self"],["bool"]],[R[415]]]],[11,"write",E,"See the underlying [`write`] call for details.",1,[[["self"],["bool"]],[R[415]]]],[11,"append",E,"See the underlying [`append`] call for details.",1,[[["self"],["bool"]],[R[415]]]],[11,"truncate",E,"See the underlying [`truncate`] call for details.",1,[[["self"],["bool"]],[R[415]]]],[11,"create",E,"See the underlying [`create`] call for details.",1,[[["self"],["bool"]],[R[415]]]],[11,"create_new",E,"See the underlying [`create_new`] call for details.",1,[[["self"],["bool"]],[R[415]]]],[11,"open",E,"Opens a file at `path` with the options specified by `self`.",1,[[["self"]]]],[0,"os",E,"OS-specific functionality.",N,N],[0,"unix","tokio::fs::os","Unix-specific extensions to primitives in the `tokio_fs`…",N,N],[5,"symlink","tokio::fs::os::unix","Creates a new symbolic link on the filesystem.",N,[[]]],[11,"next_entry",R[416],"Returns the next entry in the directory stream.",2,[[["self"]]]],[11,"path",E,"Returns the full path to the file that this entry…",3,[[["self"]],["pathbuf"]]],[11,"file_name",E,"Returns the bare file name of this directory entry without…",3,[[["self"]],["osstring"]]],[11,R[417],E,"Return the metadata for the file that this entry points at.",3,[[["self"]]]],[11,"file_type",E,"Return the file type for the file that this entry points at.",3,[[["self"]]]],[0,"io","tokio","Traits, helpers, and type definitions for asynchronous I/O…",N,N],[3,"Error",R[459],"The error type for I/O operations of the [`Read`],…",N,N],[4,R[24],E,"A list specifying general categories of I/O error.",N,N],[13,"NotFound",E,"An entity was not found, often a file.",4,N],[13,"PermissionDenied",E,"The operation lacked the necessary privileges to complete.",4,N],[13,"ConnectionRefused",E,"The connection was refused by the remote server.",4,N],[13,"ConnectionReset",E,"The connection was reset by the remote server.",4,N],[13,"ConnectionAborted",E,"The connection was aborted (terminated) by the remote…",4,N],[13,"NotConnected",E,"The network operation failed because it was not connected…",4,N],[13,"AddrInUse",E,"A socket address could not be bound because the address is…",4,N],[13,"AddrNotAvailable",E,"A nonexistent interface was requested or the requested…",4,N],[13,"BrokenPipe",E,"The operation failed because a pipe was closed.",4,N],[13,"AlreadyExists",E,"An entity already exists, often a file.",4,N],[13,"WouldBlock",E,"The operation needs to block to complete, but the blocking…",4,N],[13,"InvalidInput",E,"A parameter was incorrect.",4,N],[13,"InvalidData",E,"Data not valid for the operation were encountered.",4,N],[13,"TimedOut",E,"The I/O operation's timeout expired, causing it to be…",4,N],[13,"WriteZero",E,R[3],4,N],[13,"Interrupted",E,"This operation was interrupted.",4,N],[13,"Other",E,"Any I/O error not part of this list.",4,N],[13,"UnexpectedEof",E,R[3],4,N],[6,"Result",E,"A specialized `Result` type for I/O operations.",N,N],[3,R[593],E,"Associates an I/O resource that implements the…",N,N],[3,R[350],E,"Associates an I/O resource with the reactor instance that…",N,N],[3,"Stderr",E,"A handle to the standard error stream of a process.",N,N],[3,"Stdin",E,"A handle to the standard input stream of a process.",N,N],[3,"Stdout",E,"A handle to the standard output stream of a process.",N,N],[3,R[442],E,"The readable half of a value returned from `split`.",N,N],[3,R[432],E,"The writable half of a value returned from `split`.",N,N],[3,"Seek",E,"Future for the `seek` method.",N,N],[3,R[594],E,"The `BufReader` struct adds buffering to any reader.",N,N],[3,R[595],E,"Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and…",N,N],[3,R[596],E,"Wraps a writer and buffers its output.",N,N],[3,"Copy",E,"A future that asynchronously copies the entire contents of…",N,N],[3,"Empty",E,"This struct is generally created by calling [`empty`].…",N,N],[3,"Lines",E,"Stream for the `lines` method.",N,N],[3,"Repeat",E,"An async reader which yields one byte over and over and…",N,N],[3,"Sink",E,"An async writer which will move data into the void.",N,N],[3,"Split",E,"Stream for the `split` method.",N,N],[3,"Take",E,"Stream for the `take` method.",N,N],[5,"stderr",E,"Constructs a new handle to the standard error of the…",N,[[],["stderr"]]],[5,"stdin",E,"Constructs a new handle to the standard input of the…",N,[[],["stdin"]]],[5,"stdout",E,"Constructs a new handle to the standard output of the…",N,[[],["stdout"]]],[5,"split",E,"Split a single value implementing `AsyncRead + AsyncWrite`…",N,[[[T]]]],[5,"copy",E,"Asynchronously copies the entire contents of a reader into…",N,[[["w"],["r"]],[["copy"],["sized"]]]],[5,"empty",E,"Creates a new empty async reader.",N,[[],["empty"]]],[5,"repeat",E,"Creates an instance of an async reader that infinitely…",N,[[["u8"]],["repeat"]]],[5,"sink",E,"Creates an instance of an async writer which will…",N,[[],["sink"]]],[11,"new",E,"Creates a new `PollEvented` associated with the default…",5,[[["e"]],[R[1]]]],[11,R[502],E,"Returns a shared reference to the underlying I/O object…",5,[[["self"]],["e"]]],[11,R[503],E,"Returns a mutable reference to the underlying I/O object…",5,[[["self"]],["e"]]],[11,R[123],E,"Consumes self, returning the inner I/O object",5,[[],[R[1]]]],[11,R[419],E,"Check the I/O resource's read readiness state.",5,[[["ready"],["self"],[R[2]]],[["poll",[R[1]]],[R[1],["ready"]]]]],[11,"clear_read_ready",E,"Clears the I/O resource's read readiness state and…",5,[[["ready"],["self"],[R[2]]],[R[1]]]],[11,R[420],E,"Check the I/O resource's write readiness state.",5,[[["self"],[R[2]]],[["poll",[R[1]]],[R[1],["ready"]]]]],[11,"clear_write_ready",E,"Resets the I/O resource's write readiness state and…",5,[[["self"],[R[2]]],[R[1]]]],[11,"new",E,"Register the I/O resource with the default reactor.",6,[[[T]],[[R[1],[R[418]]],[R[418]]]]],[11,R[342],E,"Deregister the I/O resource from the reactor it is…",6,[[["self"],[T]],[R[1]]]],[11,R[419],E,"Poll for events on the I/O resource's read readiness stream.",6,[[["self"],[R[2]]],[["poll",[R[1]]],[R[1],["ready"]]]]],[11,"take_read_ready",E,"Consume any pending read readiness event.",6,[[["self"]],[[R[18],["ready"]],[R[1],[R[18]]]]]],[11,R[420],E,"Poll for events on the I/O resource's write readiness…",6,[[["self"],[R[2]]],[["poll",[R[1]]],[R[1],["ready"]]]]],[11,"take_write_ready",E,"Consume any pending write readiness event.",6,[[["self"]],[[R[18],["ready"]],[R[1],[R[18]]]]]],[11,"unsplit",E,"Reunite with a previously split `WriteHalf`.",7,[[["writehalf"]],[T]]],[11,"new",E,"Creates a new `BufReader` with a default buffer capacity.…",8,[[["r"]],["self"]]],[11,R[421],E,"Creates a new `BufReader` with the specified buffer…",8,[[[R[4]],["r"]],["self"]]],[11,R[502],E,R[424],8,[[["self"]],["r"]]],[11,R[503],E,R[425],8,[[["self"]],["r"]]],[11,R[422],E,R[426],8,[[["self"],["pin"]],[["pin"],["r"]]]],[11,R[123],E,"Consumes this `BufWriter`, returning the underlying reader.",8,[[],["r"]]],[11,"buffer",E,R[423],8,[[["self"]]]],[11,"new",E,"Wrap a type in both [`BufWriter`] and [`BufReader`].",9,[[["rw"]],["bufstream"]]],[11,R[502],E,"Gets a reference to the underlying I/O object.",9,[[["self"]],["rw"]]],[11,R[503],E,"Gets a mutable reference to the underlying I/O object.",9,[[["self"]],["rw"]]],[11,R[422],E,"Gets a pinned mutable reference to the underlying I/O…",9,[[["self"],["pin"]],[["pin"],["rw"]]]],[11,R[123],E,"Consumes this `BufStream`, returning the underlying I/O…",9,[[],["rw"]]],[11,"new",E,"Creates a new `BufWriter` with a default buffer capacity.…",10,[[["w"]],["self"]]],[11,R[421],E,"Creates a new `BufWriter` with the specified buffer…",10,[[["w"],[R[4]]],["self"]]],[11,R[502],E,"Gets a reference to the underlying writer.",10,[[["self"]],["w"]]],[11,R[503],E,"Gets a mutable reference to the underlying writer.",10,[[["self"]],["w"]]],[11,R[422],E,"Gets a pinned mutable reference to the underlying writer.",10,[[["self"],["pin"]],[["w"],["pin"]]]],[11,R[123],E,"Consumes this `BufWriter`, returning the underlying writer.",10,[[],["w"]]],[11,"buffer",E,R[423],10,[[["self"]]]],[11,"next_line",E,"Returns the next line in the stream.",11,[[["self"]]]],[11,"next_segment",E,"Returns the next segment in the stream.",12,[[["self"]]]],[11,"limit",E,"Returns the remaining number of bytes that can be read…",13,[[["self"]],["u64"]]],[11,"set_limit",E,"Sets the number of bytes that can be read before this…",13,[[["self"],["u64"]]]],[11,R[502],E,R[424],13,[[["self"]],["r"]]],[11,R[503],E,R[425],13,[[["self"]],["r"]]],[11,R[422],E,R[426],13,[[["self"],["pin"]],[["pin"],["r"]]]],[11,R[123],E,"Consumes the `Take`, returning the wrapped reader.",13,[[],["r"]]],[8,R[29],E,R[5],N,N],[10,R[455],E,R[456],14,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[10,R[523],E,R[457],14,[[["self"],[R[4]],["pin"]]]],[8,R[26],E,R[427],N,N],[11,R[458],E,R[460],15,[[["self"]],["bool"]]],[10,R[461],E,R[463],15,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[464],E,R[428],15,[[["b"],[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[8,R[28],E,"Seek bytes asynchronously.",N,N],[10,R[524],E,"Attempt to seek to an offset, in bytes, in a stream.",16,[[[R[15]],[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[10,R[525],E,"Wait for a seek operation to complete.",16,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],["u64"]]]]],[8,R[27],E,R[465],N,N],[10,R[466],E,R[467],17,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4],"error"]]]]],[10,R[31],E,R[468],17,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[10,R[469],E,R[470],17,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[11,R[471],E,R[472],17,[[["b"],[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4],"error"]]]]],[8,R[597],E,R[430],N,N],[11,R[532],E,R[533],18,[[["self"],["vec"],["u8"]],[R[534]]]],[11,R[535],E,R[536],18,[[[R[79]],["self"]],["readline"]]],[11,"split",E,R[537],18,[[["u8"]],["split"]]],[11,"lines",E,R[538],18,[[],["lines"]]],[8,R[598],E,R[427],N,N],[11,"chain",E,R[539],19,[[["r"]],["chain"]]],[11,"read",E,R[428],19,[[["self"]],["read"]]],[11,"read_buf",E,R[428],19,[[["self"],["b"]],["readbuf"]]],[11,R[540],E,R[541],19,[[["self"]],[R[542]]]],[11,"read_u8",E,R[543],19,[[["self"]],[["readu8"],["self"]]]],[11,"read_i8",E,R[544],19,[[["self"]],[["readi8"],["self"]]]],[11,"read_u16",E,R[545],19,[[["self"]],[["self"],["readu16"]]]],[11,"read_i16",E,R[546],19,[[["self"]],[["readi16"],["self"]]]],[11,"read_u32",E,R[547],19,[[["self"]],[["readu32"],["self"]]]],[11,"read_i32",E,R[548],19,[[["self"]],[["readi32"],["self"]]]],[11,"read_u64",E,R[549],19,[[["self"]],[["self"],["readu64"]]]],[11,"read_i64",E,R[550],19,[[["self"]],[["self"],["readi64"]]]],[11,R[551],E,R[552],19,[[["self"]],[["readu128"],["self"]]]],[11,R[553],E,R[554],19,[[["self"]],[["self"],["readi128"]]]],[11,R[555],E,R[556],19,[[["self"],["vec"]],[R[557]]]],[11,R[429],E,R[558],19,[[[R[79]],["self"]],[R[559]]]],[11,"take",E,R[560],19,[[["u64"]],["take"]]],[8,R[599],E,R[430],N,N],[11,"seek",E,R[561],20,[[["self"],[R[15]]],["seek"]]],[8,R[600],E,"Write bytes to a sink.",N,N],[11,"write",E,R[562],21,[[["self"]],["write"]]],[11,R[563],E,R[564],21,[[["self"],["b"]],["writebuf"]]],[11,R[565],E,R[566],21,[[["self"]],["writeall"]]],[11,"write_u8",E,R[431],21,[[["self"],["u8"]],[["writeu8"],["self"]]]],[11,"write_i8",E,R[431],21,[[["self"],["i8"]],[["writei8"],["self"]]]],[11,R[567],E,R[568],21,[[["u16"],["self"]],[["writeu16"],["self"]]]],[11,R[569],E,R[570],21,[[["self"],["i16"]],[["writei16"],["self"]]]],[11,R[571],E,R[572],21,[[["self"],["u32"]],[["self"],["writeu32"]]]],[11,R[573],E,R[574],21,[[["self"],["i32"]],[["self"],["writei32"]]]],[11,R[575],E,R[576],21,[[["self"],["u64"]],[["writeu64"],["self"]]]],[11,R[577],E,R[578],21,[[["i64"],["self"]],[["self"],["writei64"]]]],[11,R[579],E,R[580],21,[[["self"],["u128"]],[["self"],[R[581]]]]],[11,R[582],E,R[583],21,[[["self"],["i128"]],[["self"],[R[584]]]]],[11,"flush",E,R[585],21,[[["self"]],["flush"]]],[11,R[394],E,R[586],21,[[["self"]],[R[394]]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",N,N],[3,R[353],R[433],"A TCP socket server, listening for connections.",N,N],[3,R[352],E,"A TCP stream between a local and a remote socket.",N,N],[3,R[354],E,"A UDP socket",N,N],[3,R[407],E,"An I/O object representing a Unix datagram socket.",N,N],[3,R[408],E,"A Unix socket which can accept connections from other Unix…",N,N],[3,R[409],E,"A structure representing a connected Unix socket.",N,N],[0,"tcp",E,"TCP utility types",N,N],[3,R[607],R[508],"Stream returned by the `TcpListener::incoming` function…",N,N],[3,R[442],E,"Read half of a `TcpStream`.",N,N],[3,R[432],E,"Write half of a `TcpStream`.",N,N],[11,"bind",R[433],"Creates a new TcpListener which will be bound to the…",22,[[[R[320]]]]],[11,"accept",E,"Accept a new incoming connection from this listener.",22,[[["self"]]]],[11,R[434],E,"Create a new TCP listener from the standard library's TCP…",22,[[[R[271]]],[[R[271]],[R[1],[R[271]]]]]],[11,R[336],E,"Returns the local address that this listener is bound to.",22,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,R[450],E,R[451],22,[[["self"]],[R[450]]]],[11,"ttl",E,R[296],22,[[["self"]],[[R[1],["u32"]],["u32"]]]],[11,R[379],E,R[277],22,[[["u32"],["self"]],[R[1]]]],[11,R[410],E,"Opens a TCP connection to a remote host.",23,[[[R[320]]]]],[11,R[434],E,"Create a new `TcpStream` from a `std::net::TcpStream`.",23,[[[R[272]]],[[R[1],[R[272]]],[R[272]]]]],[11,R[336],E,"Returns the local address that this stream is bound to.",23,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,R[391],E,"Returns the remote address that this stream is connected to.",23,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,"poll_peek",E,"Attempt to receive data on the socket, without removing…",23,[[["self"],[R[2]]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,"peek",E,R[389],23,[[["self"]]]],[11,R[394],E,R[402],23,[[[R[394]],["self"]],[R[1]]]],[11,"nodelay",E,R[359],23,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[357],E,R[358],23,[[["self"],["bool"]],[R[1]]]],[11,R[305],E,R[306],23,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,R[303],E,R[304],23,[[["self"],[R[4]]],[R[1]]]],[11,R[309],E,R[310],23,[[["self"]],[[R[1],[R[4]]],[R[4]]]]],[11,R[307],E,R[308],23,[[["self"],[R[4]]],[R[1]]]],[11,R[361],E,R[290],23,[[["self"]],[[R[1],[R[18]]],[R[18],[R[291]]]]]],[11,R[360],E,R[289],23,[[[R[18],[R[291]]],["self"],[R[291]]],[R[1]]]],[11,"ttl",E,R[296],23,[[["self"]],[[R[1],["u32"]],["u32"]]]],[11,R[379],E,R[277],23,[[["u32"],["self"]],[R[1]]]],[11,"linger",E,"Reads the linger duration for this socket by getting the…",23,[[["self"]],[[R[1],[R[18]]],[R[18],[R[291]]]]]],[11,R[300],E,R[301],23,[[[R[18],[R[291]]],["self"],[R[291]]],[R[1]]]],[11,"split",E,"Split a `TcpStream` into a read half and a write half,…",23,[[["self"]]]],[0,"udp",E,"UDP utility types.",N,N],[3,"RecvHalf",R[437],"The recv half after `split`.",N,N],[3,"SendHalf",E,"The send half after `split`.",N,N],[3,R[601],E,"Error indicating two halves were not from the same socket,…",N,N],[12,"0",E,E,24,N],[12,"1",E,E,24,N],[11,"bind",R[433],"This function will create a new UDP socket and attempt to…",25,[[[R[320]]]]],[11,R[434],E,"Creates a new `UdpSocket` from the previously bound socket…",25,[[[R[276]]],[[R[1],[R[276]]],[R[276]]]]],[11,"split",E,"Split the `UdpSocket` into a receive half and a send half.…",25,[[]]],[11,R[336],E,R[447],25,[[["self"]],[[R[273]],[R[1],[R[273]]]]]],[11,R[410],E,R[435],25,[[[R[320]],["self"]]]],[11,"send",E,R[436],25,[[["self"]]]],[11,"recv",E,R[440],25,[[["self"]]]],[11,"send_to",E,R[436],25,[[[R[320]],["self"]]]],[11,R[392],E,R[439],25,[[["self"]]]],[11,R[365],E,R[366],25,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[363],E,R[364],25,[[["self"],["bool"]],[R[1]]]],[11,R[369],E,R[370],25,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[367],E,R[368],25,[[["self"],["bool"]],[R[1]]]],[11,R[373],E,R[374],25,[[["self"]],[[R[1],["u32"]],["u32"]]]],[11,R[371],E,R[372],25,[[["u32"],["self"]],[R[1]]]],[11,R[377],E,R[378],25,[[["self"]],[[R[1],["bool"]],["bool"]]]],[11,R[375],E,R[376],25,[[["self"],["bool"]],[R[1]]]],[11,"ttl",E,R[296],25,[[["self"]],[[R[1],["u32"]],["u32"]]]],[11,R[379],E,R[277],25,[[["u32"],["self"]],[R[1]]]],[11,R[380],E,R[381],25,[[[R[311]],["self"]],[R[1]]]],[11,R[382],E,R[383],25,[[[R[384]],["u32"],["self"]],[R[1]]]],[11,R[385],E,R[386],25,[[[R[311]],["self"]],[R[1]]]],[11,R[387],E,R[388],25,[[[R[384]],["u32"],["self"]],[R[1]]]],[11,"reunite",R[437],R[441],26,[[["sendhalf"]],[[R[1],[R[276],R[438]]],[R[438]],[R[276]]]]],[11,R[392],E,R[439],26,[[["self"]]]],[11,"recv",E,R[440],26,[[["self"]]]],[11,"reunite",E,R[441],27,[[["recvhalf"]],[[R[1],[R[276],R[438]]],[R[438]],[R[276]]]]],[11,"send_to",E,R[436],27,[[[R[273]],["self"]]]],[11,"send",E,R[436],27,[[["self"]]]],[0,"unix",R[433],"Unix domain socket utility types",N,N],[3,R[607],R[509],"Stream of listeners",N,N],[3,R[442],E,"Read half of a `UnixStream`.",N,N],[3,R[432],E,"Write half of a `UnixStream`.",N,N],[3,"UCred",E,"Credentials of a process",N,N],[12,"uid",E,"UID (user ID) of the process",28,N],[12,"gid",E,"GID (group ID) of the process",28,N],[11,"bind",R[433],"Creates a new `UnixDatagram` bound to the specified path.",29,[[["p"]],[[R[1],[R[390]]],[R[390]]]]],[11,"pair",E,R[443],29,[[],[R[1]]]],[11,R[434],E,"Consumes a `UnixDatagram` in the standard library and…",29,[[[R[390]]],[[R[1],[R[390]]],[R[390]]]]],[11,"unbound",E,"Creates a new `UnixDatagram` which is not bound to any…",29,[[],[[R[1],[R[390]]],[R[390]]]]],[11,R[410],E,R[444],29,[[["asref",["path"]],["self"],["path"]],[R[1]]]],[11,"send",E,R[445],29,[[["self"]]]],[11,"recv",E,R[393],29,[[["self"]]]],[11,"send_to",E,R[446],29,[[["p"],["self"]]]],[11,R[392],E,R[393],29,[[["self"]]]],[11,R[336],E,R[447],29,[[["self"]],[[R[1],[R[273]]],[R[273]]]]],[11,R[391],E,R[448],29,[[["self"]],[[R[1],[R[273]]],[R[273]]]]],[11,R[283],E,R[399],29,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[11,R[394],E,R[449],29,[[[R[394]],["self"]],[R[1]]]],[11,"bind",E,"Creates a new `UnixListener` bound to the specified path.",30,[[["p"]],[[R[1],[R[395]]],[R[395]]]]],[11,R[434],E,"Consumes a `UnixListener` in the standard library and…",30,[[[R[395]]],[[R[1],[R[395]]],[R[395]]]]],[11,R[336],E,R[398],30,[[["self"]],[[R[1],[R[273]]],[R[273]]]]],[11,R[283],E,R[399],30,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[11,"accept",E,R[397],30,[[["self"]]]],[11,R[450],E,R[451],30,[[["self"]],[R[450]]]],[11,R[410],E,R[452],31,[[["p"]]]],[11,R[434],E,"Consumes a `UnixStream` in the standard library and…",31,[[[R[400]]],[[R[1],[R[400]]],[R[400]]]]],[11,"pair",E,R[443],31,[[],[R[1]]]],[11,R[336],E,R[453],31,[[["self"]],[[R[1],[R[273]]],[R[273]]]]],[11,R[391],E,R[454],31,[[["self"]],[[R[1],[R[273]]],[R[273]]]]],[11,"peer_cred",E,"Returns effective credentials of the process which called…",31,[[["self"]],[[R[1],["ucred"]],["ucred"]]]],[11,R[283],E,R[399],31,[[["self"]],[[R[1],[R[18]]],[R[18],["error"]]]]],[11,R[394],E,R[402],31,[[[R[394]],["self"]],[R[1]]]],[11,"split",E,"Split a `UnixStream` into a read half and a write half,…",31,[[["self"]]]],[8,"ToSocketAddrs",E,"Convert or resolve without blocking to one or more…",N,N],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",N,N],[8,R[29],R[462],R[5],N,N],[10,R[455],E,R[456],14,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[10,R[523],E,R[457],14,[[["self"],[R[4]],["pin"]]]],[8,R[26],E,R[427],N,N],[11,R[458],R[459],R[460],15,[[["self"]],["bool"]]],[10,R[461],R[462],R[463],15,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[464],R[459],R[428],15,[[["b"],[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[8,R[27],R[462],R[465],N,N],[10,R[466],E,R[467],17,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4],"error"]]]]],[10,R[31],E,R[468],17,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[10,R[469],E,R[470],17,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[11,R[471],R[459],R[472],17,[[["b"],[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4],"error"]]]]],[0,"process","tokio","An implementation of asynchronous process management for…",N,N],[3,"Command",R[510],"This structure mimics the API of [`std::process::Command`]…",N,N],[3,"Child",E,"Representation of a child process spawned onto an event…",N,N],[3,R[608],E,"The standard input stream for spawned children.",N,N],[3,R[609],E,"The standard output stream for spawned children.",N,N],[3,R[610],E,"The standard error stream for spawned children.",N,N],[11,"new",E,"Constructs a new `Command` for launching the program at…",32,[[["osstr"],["asref",["osstr"]]],[R[473]]]],[11,"arg",E,"Adds an argument to pass to the program.",32,[[["osstr"],["self"],["asref",["osstr"]]],[R[473]]]],[11,"args",E,"Adds multiple arguments to pass to the program.",32,[[["self"],["i"]],[R[473]]]],[11,"env",E,"Inserts or updates an environment variable mapping.",32,[[["self"],["k"],["v"]],[R[473]]]],[11,"envs",E,"Adds or updates multiple environment variable mappings.",32,[[["self"],["i"]],[R[473]]]],[11,"env_remove",E,"Removes an environment variable mapping.",32,[[["osstr"],["self"],["asref",["osstr"]]],[R[473]]]],[11,"env_clear",E,"Clears the entire environment map for the child process.",32,[[["self"]],[R[473]]]],[11,"current_dir",E,"Sets the working directory for the child process.",32,[[["self"],["path"],["asref",["path"]]],[R[473]]]],[11,"stdin",E,"Configuration for the child process's standard input…",32,[[["stdio"],["self"],["into",["stdio"]]],[R[473]]]],[11,"stdout",E,"Configuration for the child process's standard output…",32,[[["stdio"],["self"],["into",["stdio"]]],[R[473]]]],[11,"stderr",E,"Configuration for the child process's standard error…",32,[[["stdio"],["self"],["into",["stdio"]]],[R[473]]]],[11,"kill_on_drop",E,"Controls whether a `kill` operation should be invoked on a…",32,[[["self"],["bool"]],[R[473]]]],[11,"uid",E,"Sets the child process's user ID. This translates to a…",32,[[["self"],["u32"]],[R[473]]]],[11,"gid",E,"Similar to `uid`, but sets the group ID of the child…",32,[[["self"],["u32"]],[R[473]]]],[11,"pre_exec",E,"Schedules a closure to be run just before the `exec`…",32,[[["self"],["f"]],[R[473]]]],[11,"spawn",E,"Executes the command as a child process, returning a…",32,[[["self"]],[[R[1],["child"]],["child"]]]],[11,"status",E,"Executes a command as a child process, waiting for it to…",32,[[["self"]]]],[11,"output",E,"Executes the command as a child process, waiting for it to…",32,[[["self"]]]],[11,"id",E,"Returns the OS-assigned process identifier associated with…",33,[[["self"]],["u32"]]],[11,"kill",E,"Forces the child to exit.",33,[[["self"]],[R[1]]]],[11,"stdin",E,"Returns a handle for writing to the child's stdin, if it…",33,[[["self"]],[R[18]]]],[11,"stdout",E,"Returns a handle for reading from the child's stdout, if…",33,[[["self"]],[R[18]]]],[11,"stderr",E,"Returns a handle for reading from the child's stderr, if…",33,[[["self"]],[R[18]]]],[11,"wait_with_output",E,"Returns a future that will resolve to an `Output`,…",33,[[]]],[0,"runtime","tokio",R[474],N,N],[3,"Builder",R[512],"Builds Tokio Runtime with custom configuration values.",N,N],[3,"Handle",E,"Handle to the runtime",N,N],[3,"Runtime",E,R[474],N,N],[11,"new",E,"Returns a new runtime builder initialized with default…",34,[[],["builder"]]],[11,"enable_all",E,"Enable both I/O and time drivers.",34,[[["self"]],["self"]]],[11,"num_threads",E,"Set the maximum number of worker threads for the…",34,[[["self"],[R[4]]],["self"]]],[11,"core_threads",E,"Set the core number of worker threads for the `Runtime`'s…",34,[[["self"],[R[4]]],["self"]]],[11,"max_threads",E,"Specifies limit for threads, spawned by the Runtime.",34,[[["self"],[R[4]]],["self"]]],[11,"thread_name",E,"Set name of threads spawned by the `Runtime`'s thread pool.",34,[[["self"]],["self"]]],[11,"thread_stack_size",E,"Set the stack size (in bytes) for worker threads.",34,[[["self"],[R[4]]],["self"]]],[11,"on_thread_start",E,"Execute function `f` after each thread is started but…",34,[[["self"],["f"]],["self"]]],[11,"on_thread_stop",E,"Execute function `f` before each thread stops.",34,[[["self"],["f"]],["self"]]],[11,"build",E,"Create the configured `Runtime`.",34,[[["self"]],[[R[1],["runtime"]],["runtime"]]]],[11,"enable_io",E,"Enable the I/O driver.",34,[[["self"]],["self"]]],[11,"enable_time",E,"Enable the time driver.",34,[[["self"]],["self"]]],[11,"basic_scheduler",E,"Use a simpler scheduler that runs all tasks on the…",34,[[["self"]],["self"]]],[11,"threaded_scheduler",E,"Use a multi-threaded scheduler for executing tasks.",34,[[["self"]],["self"]]],[11,"enter",E,R[477],35,[[["self"],["f"]],["r"]]],[11,"spawn",E,R[476],35,[[["self"],["f"]],[R[475]]]],[11,"new",E,"Create a new runtime instance with default configuration…",36,[[],[R[1]]]],[11,"spawn",E,R[476],36,[[["self"],["f"]],[R[475]]]],[11,"block_on",E,"Run a future to completion on the Tokio runtime. This is…",36,[[["self"],[R[47]]]]],[11,"enter",E,R[477],36,[[["self"],["f"]],["r"]]],[11,"handle",E,"Return a handle to the runtime's spawner.",36,[[["self"]],["handle"]]],[0,"signal","tokio","Asynchronous signal handling for Tokio",N,N],[5,"ctrl_c","tokio::signal","Completes when a \"ctrl-c\" notification is sent to the…",N,[[]]],[0,"unix",E,"Unix-specific types for signal handling.",N,N],[3,R[602],R[513],"Represents the specific kind of signal to listen for.",N,N],[3,"Signal",E,"A stream of events for receiving a particular type of OS…",N,N],[5,"signal",E,"Creates a new stream which will receive notifications when…",N,[[[R[528]]],[[R[1],["signal"]],["signal"]]]],[11,"from_raw",E,"Allows for listening to any valid OS signal.",37,[[["c_int"]],["self"]]],[11,"alarm",E,"Represents the SIGALRM signal.",37,[[],["self"]]],[11,"child",E,"Represents the SIGCHLD signal.",37,[[],["self"]]],[11,"hangup",E,"Represents the SIGHUP signal.",37,[[],["self"]]],[11,"interrupt",E,"Represents the SIGINT signal.",37,[[],["self"]]],[11,"io",E,"Represents the SIGIO signal.",37,[[],["self"]]],[11,"pipe",E,"Represents the SIGPIPE signal.",37,[[],["self"]]],[11,"quit",E,"Represents the SIGQUIT signal.",37,[[],["self"]]],[11,"terminate",E,"Represents the SIGTERM signal.",37,[[],["self"]]],[11,"user_defined1",E,"Represents the SIGUSR1 signal.",37,[[],["self"]]],[11,"user_defined2",E,"Represents the SIGUSR2 signal.",37,[[],["self"]]],[11,"window_change",E,"Represents the SIGWINCH signal.",37,[[],["self"]]],[11,"recv",E,"Receive the next signal notification event.",38,[[["self"]]]],[11,"poll_recv",E,"Poll to receive the next signal notification event,…",38,[[["self"],[R[2]]],[["poll",[R[18]]],[R[18]]]]],[0,"stream","tokio","Stream utilities for Tokio.",N,N],[8,"Stream",R[514],"A stream of values produced asynchronously.",N,N],[16,"Item",E,"Values yielded by the stream.",39,N],[10,R[115],E,"Attempt to pull out the next value of this stream,…",39,[[[R[2]],["self"],["pin"]],[[R[18]],["poll",[R[18]]]]]],[11,R[67],E,"Returns the bounds on the remaining length of the stream.",39,[[["self"]]]],[3,"Iter",E,"Stream for the [`iter`] function.",N,N],[5,"iter",E,"Converts an `Iterator` into a `Stream` which is always…",N,[[["i"]],["iter"]]],[8,R[603],E,"An extension trait for `Stream`s that provides a variety…",N,N],[11,"next",E,"Creates a future that resolves to the next item in the…",40,[[["self"]],["next"]]],[11,"map",E,"Maps this stream's items to a different type, returning a…",40,[[["f"]],["map"]]],[0,"sync","tokio","Future-aware synchronization",N,N],[3,"Barrier",R[480],"A barrier enables multiple threads to synchronize the…",N,N],[3,R[604],E,"A `BarrierWaitResult` is returned by `wait` when all…",N,N],[3,"Mutex",E,"An asynchronous mutual exclusion primitive useful for…",N,N],[3,R[611],E,"A handle to a held `Mutex`.",N,N],[3,R[605],E,"Counting semaphore performing asynchronous permit…",N,N],[3,R[606],E,"A permit from the semaphore",N,N],[11,"new",E,"Creates a new barrier that can block a given number of…",41,[[[R[4]]],["barrier"]]],[11,"wait",E,"Does not resolve until all tasks have rendezvoused here.",41,[[["self"]]]],[11,"is_leader",E,"Returns true if this thread from wait is the \"leader…",42,[[["self"]],["bool"]]],[0,R[365],E,"A multi-producer, multi-consumer broadcast queue. Each…",N,N],[3,"Sender",R[515],"Sending-half of the [`broadcast`] channel.",N,N],[3,R[120],E,"Receiving-half of the [`broadcast`] channel.",N,N],[3,R[117],E,"Error returned by [`Sender::send`][Sender::send].",N,N],[12,"0",E,E,43,N],[4,R[485],E,"An error returned from the [`recv`] function on a…",N,N],[13,"Closed",E,R[478],44,N],[13,"Lagged",E,R[479],44,N],[4,R[122],E,"An error returned from the [`try_recv`] function on a…",N,N],[13,"Empty",E,"The channel is currently empty. There are still active…",45,N],[13,"Closed",E,R[478],45,N],[13,"Lagged",E,R[479],45,N],[5,"channel",E,"Create a bounded, multi-producer, multi-consumer channel…",N,[[[R[4]]]]],[11,"send",E,"Attempts to send a value to all active [`Receiver`]…",46,[[["self"],[T]],[[R[1],[R[4],R[96]]],[R[4]],[R[96]]]]],[11,"subscribe",E,"Create a new [`Receiver`] handle that will receive values…",46,[[["self"]],["receiver"]]],[11,"receiver_count",E,"Returns the number of active receivers",46,[[["self"]],[R[4]]]],[11,R[483],E,R[482],47,[[["self"]],[[R[1],[R[108]]],[R[108]]]]],[11,"recv",E,R[481],47,[[["self"]]]],[0,"mpsc",R[480],"A multi-producer, single-consumer queue for sending values…",N,N],[3,R[120],R[516],"Receive values from the associated `Sender`.",N,N],[3,"Sender",E,"Send values to the associated `Receiver`.",N,N],[3,R[121],E,"Receive values from the associated `UnboundedSender`.",N,N],[3,R[119],E,"Send values to the associated `UnboundedReceiver`.",N,N],[5,"channel",E,"Create a bounded mpsc channel for communicating between…",N,[[[R[4]]]]],[5,"unbounded_channel",E,"Create an unbounded mpsc channel for communicating between…",N,[[]]],[11,"recv",E,R[481],48,[[["self"]]]],[11,R[483],E,R[482],48,[[["self"]],[[R[1],[R[108]]],[R[108]]]]],[11,"close",E,R[484],48,[[["self"]]]],[11,"try_send",E,"Attempts to immediately send a message on this `Sender`",49,[[["self"],[T]],[[R[95]],[R[1],[R[95]]]]]],[11,"send",E,"Send a value, waiting until there is capacity.",49,[[[T],["self"]]]],[11,"recv",E,R[481],50,[[["self"]]]],[11,R[483],E,R[482],50,[[["self"]],[[R[1],[R[108]]],[R[108]]]]],[11,"close",E,R[484],50,[[["self"]]]],[11,"send",E,"Attempts to send a message on this `UnboundedSender`…",51,[[["self"],[T]],[[R[96]],[R[1],[R[96]]]]]],[0,"error",E,"Channel error types",N,N],[3,R[117],R[517],"Error returned by the `Sender`.",N,N],[12,"0",E,E,52,N],[3,R[485],E,"Error returned by `Receiver`.",N,N],[3,R[612],E,"Erorr returned by `Sender::poll_ready`].",N,N],[4,R[118],E,"This enumeration is the list of the possible error…",N,N],[13,"Full",E,"The data could not be sent on the channel because the…",53,N],[13,"Closed",E,"The receive half of the channel was explicitly closed or…",53,N],[4,R[122],E,"This enumeration is the list of the possible reasons that…",N,N],[13,"Empty",E,"This channel is currently empty, but the Sender(s) have…",54,N],[13,"Closed",E,"The channel's sending half has been closed, and there will…",54,N],[11,"new",R[480],"Creates a new lock in an unlocked state ready for use.",55,[[[T]],["self"]]],[11,"lock",E,"A future that resolves on acquiring the lock and returns…",55,[[["self"]]]],[11,"try_lock",E,"Try to acquire the lock",55,[[["self"]],[[R[487]],[R[486]],[R[1],[R[486],R[487]]]]]],[0,"oneshot",E,"A channel for sending a single message between…",N,N],[3,"Sender",R[488],"Sends a value to the associated `Receiver`.",N,N],[3,R[120],E,"Receive a value from the associated `Sender`.",N,N],[5,"channel",E,"Create a new one-shot channel for sending single values…",N,[[]]],[0,"error",E,"Oneshot error types",N,N],[3,R[485],R[518],"Error returned by the `Future` implementation for…",N,N],[4,R[122],E,"Error returned by the `try_recv` function on `Receiver`.",N,N],[13,"Empty",E,"The send half of the channel has not yet sent a value.",56,N],[13,"Closed",E,"The send half of the channel was dropped without sending a…",56,N],[11,"send",R[488],"Attempts to send a value on this channel, returning it…",57,[[[T]],[R[1]]]],[11,"closed",E,"Wait for the associated [`Receiver`] handle to close.",57,[[["self"]]]],[11,R[98],E,"Returns `true` if the associated [`Receiver`] handle has…",57,[[["self"]],["bool"]]],[11,"close",E,"Prevent the associated [`Sender`] handle from sending a…",58,[[["self"]]]],[11,R[483],E,"Attempts to receive a value.",58,[[["self"]],[[R[108]],[R[1],[R[108]]]]]],[11,"new",R[480],"Creates a new semaphore with the initial number of permits",59,[[[R[4]]],["self"]]],[11,"available_permits",E,"Returns the current number of available permits",59,[[["self"]],[R[4]]]],[11,"add_permits",E,"Add `n` new permits to the semaphore.",59,[[["self"],[R[4]]]]],[11,"acquire",E,"Acquire permit from the semaphore",59,[[["self"]]]],[11,"try_acquire",E,"Try to acquire a permit form the semaphore",59,[[["self"]],[[R[489]],[R[490]],[R[1],[R[489],R[490]]]]]],[11,"forget",E,"Forget the permit without releasing it back to the…",60,[[]]],[0,"watch",E,"A single-producer, multi-consumer channel that only…",N,N],[3,R[120],R[491],"Receives values from the associated `Sender`.",N,N],[3,"Sender",E,"Sends values to the associated `Receiver`.",N,N],[3,"Ref",E,"Returns a reference to the inner value",N,N],[5,"channel",E,"Create a new watch channel, returning the \"send\" and…",N,[[["clone"]]]],[0,"error",E,"Watch error types",N,N],[3,R[117],R[519],"Error produced when sending a value fails.",N,N],[11,R[8],R[491],"Returns a reference to the most recently sent value",61,[[["self"]],["ref"]]],[11,"recv",E,"Attempts to clone the latest value sent via the channel.",61,[[["self"]]]],[11,R[365],E,"Broadcast a new value via the channel, notifying all…",62,[[["self"],[T]],[[R[96]],[R[1],[R[96]]]]]],[11,"closed",E,"Completes when all receivers have dropped.",62,[[["self"]]]],[0,"task","tokio","Asynchronous green-threads.",N,N],[3,R[613],R[520],"Task failed to execute to completion.",N,N],[3,R[614],E,"An owned permission to join on a task (await its…",N,N],[3,"LocalSet",E,"A set of tasks which are executed on the same thread.",N,N],[5,"spawn_blocking",E,"Run the provided closure on a thread where blocking is…",N,[[["f"]],[R[475]]]],[5,"block_in_place",E,"Run the provided blocking function without blocking the…",N,[[["f"]],["r"]]],[5,"spawn",E,R[492],N,[[[T]],[R[475]]]],[5,"yield_now",E,"Yield execution back to the Tokio runtime.",N,[[]]],[5,R[493],E,"Spawns a `!Send` future on the local task set.",N,[[["f"]],[R[475]]]],[11,"new",E,"Returns a new local task set.",63,[[],["self"]]],[11,R[493],E,"Spawns a `!Send` task onto the local task set.",63,[[["self"],["f"]],[R[475]]]],[11,"block_on",E,"Run a future to completion on the provided runtime,…",63,[[["f"],["self"],["runtime"]]]],[0,"time","tokio","Utilities for tracking time.",N,N],[3,"Duration",R[504],"A `Duration` type to represent a span of time, typically…",N,N],[3,R[498],E,R[497],N,N],[3,"Delay",E,"Future returned by `delay_until` and `delay_for`.",N,N],[3,"Error",E,"Errors encountered by the timer implementation.",N,N],[3,"Instant",E,"A measurement of the system clock, useful for talking to…",N,N],[3,"Interval",E,"Stream returned by `interval` and `interval_at`.",N,N],[3,"Timeout",E,"Future returned by `timeout` and `timeout_at`.",N,N],[3,"Elapsed",E,"Error returned by `Timeout`.",N,N],[3,"Throttle",E,"Stream for the `throttle` function.",N,N],[5,"delay_for",E,"Wait until `duration` has elapsed.",N,[[[R[291]]],["delay"]]],[5,"delay_until",E,"Wait until `deadline` is reached.",N,[[[R[505]]],["delay"]]],[5,R[495],E,R[494],N,[[[R[291]]],[R[495]]]],[5,"interval_at",E,R[494],N,[[[R[291]],[R[505]]],[R[495]]]],[5,"timeout",E,R[496],N,[[[T],[R[291]]],["timeout"]]],[5,"timeout_at",E,R[496],N,[[[T],[R[505]]],["timeout"]]],[5,"throttle",E,"Slow down a stream by enforcing a delay between items.…",N,[[[T],[R[291]]],["throttle"]]],[0,"delay_queue",E,R[497],N,N],[3,R[498],R[521],R[497],N,N],[3,"Expired",E,"An entry in `DelayQueue` that has expired and removed.",N,N],[3,"Key",E,"Token to a value stored in a `DelayQueue`.",N,N],[11,"new",E,"Create a new, empty, `DelayQueue`",64,[[],[R[499]]]],[11,R[421],E,"Create a new, empty, `DelayQueue` with the specified…",64,[[[R[4]]],[R[499]]]],[11,"insert_at",E,"Insert `value` into the queue set to expire at a specific…",64,[[["self"],[T],[R[505]]],["key"]]],[11,"poll_expired",E,"Attempt to pull out the next value of the delay queue,…",64,[[["self"],[R[2]]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"insert",E,"Insert `value` into the queue set to expire after the…",64,[[["self"],[T],[R[291]]],["key"]]],[11,"remove",E,"Remove the item associated with `key` from the queue.",64,[[["self"],["key"]],["expired"]]],[11,"reset_at",E,R[500],64,[[["self"],["key"],[R[505]]]]],[11,"reset",E,R[500],64,[[["self"],["key"],[R[291]]]]],[11,"clear",E,"Clears the queue, removing all items.",64,[[["self"]]]],[11,"capacity",E,"Returns the number of elements the queue can hold without…",64,[[["self"]],[R[4]]]],[11,"reserve",E,"Reserve capacity for at least `additional` more items to…",64,[[["self"],[R[4]]]]],[11,R[501],E,"Returns `true` if there are no items in the queue.",64,[[["self"]],["bool"]]],[11,R[502],E,"Returns a reference to the inner value.",65,[[["self"]],[T]]],[11,R[503],E,"Returns a mutable reference to the inner value.",65,[[["self"]],[T]]],[11,R[123],E,"Consumes `self` and returns the inner value.",65,[[],[T]]],[11,"deadline",R[504],"Returns the instant at which the future will complete.",66,[[["self"]],[R[505]]]],[11,"is_elapsed",E,"Returns true if the `Delay` has elapsed",66,[[["self"]],["bool"]]],[11,"reset",E,"Reset the `Delay` instance to a new deadline.",66,[[["self"],[R[505]]]]],[11,R[394],E,"Create an error representing a shutdown timer.",67,[[],["error"]]],[11,"is_shutdown",E,R[506],67,[[["self"]],["bool"]]],[11,"at_capacity",E,"Create an error representing a timer at capacity.",67,[[],["error"]]],[11,"is_at_capacity",E,R[506],67,[[["self"]],["bool"]]],[11,"now",E,"Returns an instant corresponding to \"now\".",68,[[],[R[505]]]],[11,R[434],E,"Create a `tokio::time::Instant` from a `std::time::Instant`.",68,[[[R[505]]],[R[505]]]],[11,"into_std",E,"Convert the value into a `std::time::Instant`.",68,[[],[R[505]]]],[11,"duration_since",E,R[507],68,[[["self"],[R[505]]],[R[291]]]],[11,"checked_duration_since",E,R[507],68,[[["self"],[R[505]]],[[R[291]],[R[18],[R[291]]]]]],[11,"saturating_duration_since",E,R[507],68,[[["self"],[R[505]]],[R[291]]]],[11,"elapsed",E,"Returns the amount of time elapsed since this instant was…",68,[[["self"]],[R[291]]]],[11,R[589],E,"Returns `Some(t)` where `t` is the time `self + duration`…",68,[[["self"],[R[291]]],[[R[505]],[R[18],[R[505]]]]]],[11,R[590],E,"Returns `Some(t)` where `t` is the time `self - duration`…",68,[[["self"],[R[291]]],[[R[505]],[R[18],[R[505]]]]]],[11,"tick",E,"Completes when the next instant in the interval has been…",69,[[["self"]]]],[11,R[502],E,"Gets a reference to the underlying value in this timeout.",70,[[["self"]],[T]]],[11,R[503],E,"Gets a mutable reference to the underlying value in this…",70,[[["self"]],[T]]],[11,R[123],E,"Consumes this timeout, returning the underlying value.",70,[[],[T]]],[11,R[502],E,"Acquires a reference to the underlying stream that this…",71,[[["self"]],[T]]],[11,R[503],E,"Acquires a mutable reference to the underlying stream that…",71,[[["self"]],[T]]],[11,R[123],E,"Consumes this combinator, returning the underlying stream.",71,[[],[T]]],[11,"into",R[416],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[6],E,E,0,[[[U]],[R[1]]]],[11,R[7],E,E,0,[[],[R[1]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"],[T]]]],[11,R[6],E,E,1,[[[U]],[R[1]]]],[11,R[7],E,E,1,[[],[R[1]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[R[13]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[6],E,E,3,[[[U]],[R[1]]]],[11,R[7],E,E,3,[[],[R[1]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[R[13]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[6],E,E,2,[[[U]],[R[1]]]],[11,R[7],E,E,2,[[],[R[1]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[R[13]]]],[11,R[112],E,E,2,[[[R[2]],["s"],["pin"]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"into",R[459],E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[41],E,E,72,[[["self"]],[R[79]]]],[11,R[6],E,E,72,[[[U]],[R[1]]]],[11,R[7],E,E,72,[[],[R[1]]]],[11,R[8],E,E,72,[[["self"]],[T]]],[11,R[9],E,E,72,[[["self"]],[T]]],[11,R[10],E,E,72,[[["self"]],[R[13]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"],[T]]]],[11,R[6],E,E,4,[[[U]],[R[1]]]],[11,R[7],E,E,4,[[],[R[1]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[R[13]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[6],E,E,5,[[[U]],[R[1]]]],[11,R[7],E,E,5,[[],[R[1]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[R[13]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[6],E,E,6,[[[U]],[R[1]]]],[11,R[7],E,E,6,[[],[R[1]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[R[13]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[6],E,E,73,[[[U]],[R[1]]]],[11,R[7],E,E,73,[[],[R[1]]]],[11,R[8],E,E,73,[[["self"]],[T]]],[11,R[9],E,E,73,[[["self"]],[T]]],[11,R[10],E,E,73,[[["self"]],[R[13]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[6],E,E,74,[[[U]],[R[1]]]],[11,R[7],E,E,74,[[],[R[1]]]],[11,R[8],E,E,74,[[["self"]],[T]]],[11,R[9],E,E,74,[[["self"]],[T]]],[11,R[10],E,E,74,[[["self"]],[R[13]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[6],E,E,75,[[[U]],[R[1]]]],[11,R[7],E,E,75,[[],[R[1]]]],[11,R[8],E,E,75,[[["self"]],[T]]],[11,R[9],E,E,75,[[["self"]],[T]]],[11,R[10],E,E,75,[[["self"]],[R[13]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[6],E,E,7,[[[U]],[R[1]]]],[11,R[7],E,E,7,[[],[R[1]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[R[13]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[6],E,E,76,[[[U]],[R[1]]]],[11,R[7],E,E,76,[[],[R[1]]]],[11,R[8],E,E,76,[[["self"]],[T]]],[11,R[9],E,E,76,[[["self"]],[T]]],[11,R[10],E,E,76,[[["self"]],[R[13]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[6],E,E,77,[[[U]],[R[1]]]],[11,R[7],E,E,77,[[],[R[1]]]],[11,R[8],E,E,77,[[["self"]],[T]]],[11,R[9],E,E,77,[[["self"]],[T]]],[11,R[10],E,E,77,[[["self"]],[R[13]]]],[11,R[511],E,E,77,[[["pin"],["f"],[R[2]]],["poll"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[6],E,E,8,[[[U]],[R[1]]]],[11,R[7],E,E,8,[[],[R[1]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[R[13]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[6],E,E,9,[[[U]],[R[1]]]],[11,R[7],E,E,9,[[],[R[1]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[R[13]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[6],E,E,10,[[[U]],[R[1]]]],[11,R[7],E,E,10,[[],[R[1]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[R[13]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[6],E,E,78,[[[U]],[R[1]]]],[11,R[7],E,E,78,[[],[R[1]]]],[11,R[8],E,E,78,[[["self"]],[T]]],[11,R[9],E,E,78,[[["self"]],[T]]],[11,R[10],E,E,78,[[["self"]],[R[13]]]],[11,R[511],E,E,78,[[["pin"],["f"],[R[2]]],["poll"]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[6],E,E,79,[[[U]],[R[1]]]],[11,R[7],E,E,79,[[],[R[1]]]],[11,R[8],E,E,79,[[["self"]],[T]]],[11,R[9],E,E,79,[[["self"]],[T]]],[11,R[10],E,E,79,[[["self"]],[R[13]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[6],E,E,11,[[[U]],[R[1]]]],[11,R[7],E,E,11,[[],[R[1]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[R[13]]]],[11,R[112],E,E,11,[[[R[2]],["s"],["pin"]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[6],E,E,80,[[[U]],[R[1]]]],[11,R[7],E,E,80,[[],[R[1]]]],[11,R[8],E,E,80,[[["self"]],[T]]],[11,R[9],E,E,80,[[["self"]],[T]]],[11,R[10],E,E,80,[[["self"]],[R[13]]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[6],E,E,81,[[[U]],[R[1]]]],[11,R[7],E,E,81,[[],[R[1]]]],[11,R[8],E,E,81,[[["self"]],[T]]],[11,R[9],E,E,81,[[["self"]],[T]]],[11,R[10],E,E,81,[[["self"]],[R[13]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[6],E,E,12,[[[U]],[R[1]]]],[11,R[7],E,E,12,[[],[R[1]]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[R[13]]]],[11,R[112],E,E,12,[[[R[2]],["s"],["pin"]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[6],E,E,13,[[[U]],[R[1]]]],[11,R[7],E,E,13,[[],[R[1]]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[R[13]]]],[11,"into",R[433],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[6],E,E,22,[[[U]],[R[1]]]],[11,R[7],E,E,22,[[],[R[1]]]],[11,R[8],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[R[13]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[6],E,E,23,[[[U]],[R[1]]]],[11,R[7],E,E,23,[[],[R[1]]]],[11,R[8],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[R[13]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[6],E,E,25,[[[U]],[R[1]]]],[11,R[7],E,E,25,[[],[R[1]]]],[11,R[8],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[R[13]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[6],E,E,29,[[[U]],[R[1]]]],[11,R[7],E,E,29,[[],[R[1]]]],[11,R[8],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[R[13]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[6],E,E,30,[[[U]],[R[1]]]],[11,R[7],E,E,30,[[],[R[1]]]],[11,R[8],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[R[13]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[6],E,E,31,[[[U]],[R[1]]]],[11,R[7],E,E,31,[[],[R[1]]]],[11,R[8],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[R[13]]]],[11,"into",R[508],E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[6],E,E,82,[[[U]],[R[1]]]],[11,R[7],E,E,82,[[],[R[1]]]],[11,R[8],E,E,82,[[["self"]],[T]]],[11,R[9],E,E,82,[[["self"]],[T]]],[11,R[10],E,E,82,[[["self"]],[R[13]]]],[11,R[112],E,E,82,[[[R[2]],["s"],["pin"]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[6],E,E,83,[[[U]],[R[1]]]],[11,R[7],E,E,83,[[],[R[1]]]],[11,R[8],E,E,83,[[["self"]],[T]]],[11,R[9],E,E,83,[[["self"]],[T]]],[11,R[10],E,E,83,[[["self"]],[R[13]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[6],E,E,84,[[[U]],[R[1]]]],[11,R[7],E,E,84,[[],[R[1]]]],[11,R[8],E,E,84,[[["self"]],[T]]],[11,R[9],E,E,84,[[["self"]],[T]]],[11,R[10],E,E,84,[[["self"]],[R[13]]]],[11,"into",R[437],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[6],E,E,26,[[[U]],[R[1]]]],[11,R[7],E,E,26,[[],[R[1]]]],[11,R[8],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[T]]],[11,R[10],E,E,26,[[["self"]],[R[13]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[6],E,E,27,[[[U]],[R[1]]]],[11,R[7],E,E,27,[[],[R[1]]]],[11,R[8],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[R[13]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[41],E,E,24,[[["self"]],[R[79]]]],[11,R[6],E,E,24,[[[U]],[R[1]]]],[11,R[7],E,E,24,[[],[R[1]]]],[11,R[8],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[R[13]]]],[11,"into",R[509],E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[6],E,E,85,[[[U]],[R[1]]]],[11,R[7],E,E,85,[[],[R[1]]]],[11,R[8],E,E,85,[[["self"]],[T]]],[11,R[9],E,E,85,[[["self"]],[T]]],[11,R[10],E,E,85,[[["self"]],[R[13]]]],[11,R[112],E,E,85,[[[R[2]],["s"],["pin"]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[6],E,E,86,[[[U]],[R[1]]]],[11,R[7],E,E,86,[[],[R[1]]]],[11,R[8],E,E,86,[[["self"]],[T]]],[11,R[9],E,E,86,[[["self"]],[T]]],[11,R[10],E,E,86,[[["self"]],[R[13]]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[6],E,E,87,[[[U]],[R[1]]]],[11,R[7],E,E,87,[[],[R[1]]]],[11,R[8],E,E,87,[[["self"]],[T]]],[11,R[9],E,E,87,[[["self"]],[T]]],[11,R[10],E,E,87,[[["self"]],[R[13]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[11],E,E,28,[[["self"]],[T]]],[11,R[12],E,E,28,[[["self"],[T]]]],[11,R[6],E,E,28,[[[U]],[R[1]]]],[11,R[7],E,E,28,[[],[R[1]]]],[11,R[8],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[R[13]]]],[11,"into",R[510],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[6],E,E,32,[[[U]],[R[1]]]],[11,R[7],E,E,32,[[],[R[1]]]],[11,R[8],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[R[13]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[6],E,E,33,[[[U]],[R[1]]]],[11,R[7],E,E,33,[[],[R[1]]]],[11,R[8],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[R[13]]]],[11,R[511],E,E,33,[[["pin"],["f"],[R[2]]],["poll"]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[6],E,E,88,[[[U]],[R[1]]]],[11,R[7],E,E,88,[[],[R[1]]]],[11,R[8],E,E,88,[[["self"]],[T]]],[11,R[9],E,E,88,[[["self"]],[T]]],[11,R[10],E,E,88,[[["self"]],[R[13]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[6],E,E,89,[[[U]],[R[1]]]],[11,R[7],E,E,89,[[],[R[1]]]],[11,R[8],E,E,89,[[["self"]],[T]]],[11,R[9],E,E,89,[[["self"]],[T]]],[11,R[10],E,E,89,[[["self"]],[R[13]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[6],E,E,90,[[[U]],[R[1]]]],[11,R[7],E,E,90,[[],[R[1]]]],[11,R[8],E,E,90,[[["self"]],[T]]],[11,R[9],E,E,90,[[["self"]],[T]]],[11,R[10],E,E,90,[[["self"]],[R[13]]]],[11,"into",R[512],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[6],E,E,34,[[[U]],[R[1]]]],[11,R[7],E,E,34,[[],[R[1]]]],[11,R[8],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[R[13]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[11],E,E,35,[[["self"]],[T]]],[11,R[12],E,E,35,[[["self"],[T]]]],[11,R[6],E,E,35,[[[U]],[R[1]]]],[11,R[7],E,E,35,[[],[R[1]]]],[11,R[8],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[R[13]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[6],E,E,36,[[[U]],[R[1]]]],[11,R[7],E,E,36,[[],[R[1]]]],[11,R[8],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[R[13]]]],[11,"into",R[513],E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[11],E,E,37,[[["self"]],[T]]],[11,R[12],E,E,37,[[["self"],[T]]]],[11,R[6],E,E,37,[[[U]],[R[1]]]],[11,R[7],E,E,37,[[],[R[1]]]],[11,R[8],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[T]]],[11,R[10],E,E,37,[[["self"]],[R[13]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[6],E,E,38,[[[U]],[R[1]]]],[11,R[7],E,E,38,[[],[R[1]]]],[11,R[8],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[T]]],[11,R[10],E,E,38,[[["self"]],[R[13]]]],[11,"into",R[514],E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[6],E,E,91,[[[U]],[R[1]]]],[11,R[7],E,E,91,[[],[R[1]]]],[11,R[8],E,E,91,[[["self"]],[T]]],[11,R[9],E,E,91,[[["self"]],[T]]],[11,R[10],E,E,91,[[["self"]],[R[13]]]],[11,R[112],E,E,91,[[[R[2]],["s"],["pin"]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"into",R[480],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[6],E,E,41,[[[U]],[R[1]]]],[11,R[7],E,E,41,[[],[R[1]]]],[11,R[8],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[T]]],[11,R[10],E,E,41,[[["self"]],[R[13]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[11],E,E,42,[[["self"]],[T]]],[11,R[12],E,E,42,[[["self"],[T]]]],[11,R[6],E,E,42,[[[U]],[R[1]]]],[11,R[7],E,E,42,[[],[R[1]]]],[11,R[8],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[T]]],[11,R[10],E,E,42,[[["self"]],[R[13]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[],[T]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[6],E,E,55,[[[U]],[R[1]]]],[11,R[7],E,E,55,[[],[R[1]]]],[11,R[8],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[["self"]],[T]]],[11,R[10],E,E,55,[[["self"]],[R[13]]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[41],E,E,92,[[["self"]],[R[79]]]],[11,R[6],E,E,92,[[[U]],[R[1]]]],[11,R[7],E,E,92,[[],[R[1]]]],[11,R[8],E,E,92,[[["self"]],[T]]],[11,R[9],E,E,92,[[["self"]],[T]]],[11,R[10],E,E,92,[[["self"]],[R[13]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[6],E,E,59,[[[U]],[R[1]]]],[11,R[7],E,E,59,[[],[R[1]]]],[11,R[8],E,E,59,[[["self"]],[T]]],[11,R[9],E,E,59,[[["self"]],[T]]],[11,R[10],E,E,59,[[["self"]],[R[13]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[6],E,E,60,[[[U]],[R[1]]]],[11,R[7],E,E,60,[[],[R[1]]]],[11,R[8],E,E,60,[[["self"]],[T]]],[11,R[9],E,E,60,[[["self"]],[T]]],[11,R[10],E,E,60,[[["self"]],[R[13]]]],[11,"into",R[515],E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[11],E,E,46,[[["self"]],[T]]],[11,R[12],E,E,46,[[["self"],[T]]]],[11,R[6],E,E,46,[[[U]],[R[1]]]],[11,R[7],E,E,46,[[],[R[1]]]],[11,R[8],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[T]]],[11,R[10],E,E,46,[[["self"]],[R[13]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[6],E,E,47,[[[U]],[R[1]]]],[11,R[7],E,E,47,[[],[R[1]]]],[11,R[8],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[["self"]],[T]]],[11,R[10],E,E,47,[[["self"]],[R[13]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[6],E,E,43,[[[U]],[R[1]]]],[11,R[7],E,E,43,[[],[R[1]]]],[11,R[8],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[T]]],[11,R[10],E,E,43,[[["self"]],[R[13]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[6],E,E,44,[[[U]],[R[1]]]],[11,R[7],E,E,44,[[],[R[1]]]],[11,R[8],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[T]]],[11,R[10],E,E,44,[[["self"]],[R[13]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[6],E,E,45,[[[U]],[R[1]]]],[11,R[7],E,E,45,[[],[R[1]]]],[11,R[8],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[T]]],[11,R[10],E,E,45,[[["self"]],[R[13]]]],[11,"into",R[516],E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[6],E,E,48,[[[U]],[R[1]]]],[11,R[7],E,E,48,[[],[R[1]]]],[11,R[8],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[["self"]],[T]]],[11,R[10],E,E,48,[[["self"]],[R[13]]]],[11,R[112],E,E,48,[[[R[2]],["s"],["pin"]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[11],E,E,49,[[["self"]],[T]]],[11,R[12],E,E,49,[[["self"],[T]]]],[11,R[6],E,E,49,[[[U]],[R[1]]]],[11,R[7],E,E,49,[[],[R[1]]]],[11,R[8],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[["self"]],[T]]],[11,R[10],E,E,49,[[["self"]],[R[13]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[6],E,E,50,[[[U]],[R[1]]]],[11,R[7],E,E,50,[[],[R[1]]]],[11,R[8],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[["self"]],[T]]],[11,R[10],E,E,50,[[["self"]],[R[13]]]],[11,R[112],E,E,50,[[[R[2]],["s"],["pin"]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[11],E,E,51,[[["self"]],[T]]],[11,R[12],E,E,51,[[["self"],[T]]]],[11,R[6],E,E,51,[[[U]],[R[1]]]],[11,R[7],E,E,51,[[],[R[1]]]],[11,R[8],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[R[13]]]],[11,"into",R[517],E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[41],E,E,52,[[["self"]],[R[79]]]],[11,R[6],E,E,52,[[[U]],[R[1]]]],[11,R[7],E,E,52,[[],[R[1]]]],[11,R[8],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[["self"]],[T]]],[11,R[10],E,E,52,[[["self"]],[R[13]]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[41],E,E,93,[[["self"]],[R[79]]]],[11,R[6],E,E,93,[[[U]],[R[1]]]],[11,R[7],E,E,93,[[],[R[1]]]],[11,R[8],E,E,93,[[["self"]],[T]]],[11,R[9],E,E,93,[[["self"]],[T]]],[11,R[10],E,E,93,[[["self"]],[R[13]]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[41],E,E,94,[[["self"]],[R[79]]]],[11,R[6],E,E,94,[[[U]],[R[1]]]],[11,R[7],E,E,94,[[],[R[1]]]],[11,R[8],E,E,94,[[["self"]],[T]]],[11,R[9],E,E,94,[[["self"]],[T]]],[11,R[10],E,E,94,[[["self"]],[R[13]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[41],E,E,53,[[["self"]],[R[79]]]],[11,R[6],E,E,53,[[[U]],[R[1]]]],[11,R[7],E,E,53,[[],[R[1]]]],[11,R[8],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[["self"]],[T]]],[11,R[10],E,E,53,[[["self"]],[R[13]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[41],E,E,54,[[["self"]],[R[79]]]],[11,R[6],E,E,54,[[[U]],[R[1]]]],[11,R[7],E,E,54,[[],[R[1]]]],[11,R[8],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[["self"]],[T]]],[11,R[10],E,E,54,[[["self"]],[R[13]]]],[11,"into",R[488],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[6],E,E,57,[[[U]],[R[1]]]],[11,R[7],E,E,57,[[],[R[1]]]],[11,R[8],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[["self"]],[T]]],[11,R[10],E,E,57,[[["self"]],[R[13]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[6],E,E,58,[[[U]],[R[1]]]],[11,R[7],E,E,58,[[],[R[1]]]],[11,R[8],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[["self"]],[T]]],[11,R[10],E,E,58,[[["self"]],[R[13]]]],[11,R[511],E,E,58,[[["pin"],["f"],[R[2]]],["poll"]]],[11,"into",R[518],E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[41],E,E,95,[[["self"]],[R[79]]]],[11,R[6],E,E,95,[[[U]],[R[1]]]],[11,R[7],E,E,95,[[],[R[1]]]],[11,R[8],E,E,95,[[["self"]],[T]]],[11,R[9],E,E,95,[[["self"]],[T]]],[11,R[10],E,E,95,[[["self"]],[R[13]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[41],E,E,56,[[["self"]],[R[79]]]],[11,R[6],E,E,56,[[[U]],[R[1]]]],[11,R[7],E,E,56,[[],[R[1]]]],[11,R[8],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[["self"]],[T]]],[11,R[10],E,E,56,[[["self"]],[R[13]]]],[11,"into",R[491],E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[11],E,E,61,[[["self"]],[T]]],[11,R[12],E,E,61,[[["self"],[T]]]],[11,R[6],E,E,61,[[[U]],[R[1]]]],[11,R[7],E,E,61,[[],[R[1]]]],[11,R[8],E,E,61,[[["self"]],[T]]],[11,R[9],E,E,61,[[["self"]],[T]]],[11,R[10],E,E,61,[[["self"]],[R[13]]]],[11,R[112],E,E,61,[[[R[2]],["s"],["pin"]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[6],E,E,62,[[[U]],[R[1]]]],[11,R[7],E,E,62,[[],[R[1]]]],[11,R[8],E,E,62,[[["self"]],[T]]],[11,R[9],E,E,62,[[["self"]],[T]]],[11,R[10],E,E,62,[[["self"]],[R[13]]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[6],E,E,96,[[[U]],[R[1]]]],[11,R[7],E,E,96,[[],[R[1]]]],[11,R[8],E,E,96,[[["self"]],[T]]],[11,R[9],E,E,96,[[["self"]],[T]]],[11,R[10],E,E,96,[[["self"]],[R[13]]]],[11,"into",R[519],E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[41],E,E,97,[[["self"]],[R[79]]]],[11,R[6],E,E,97,[[[U]],[R[1]]]],[11,R[7],E,E,97,[[],[R[1]]]],[11,R[8],E,E,97,[[["self"]],[T]]],[11,R[9],E,E,97,[[["self"]],[T]]],[11,R[10],E,E,97,[[["self"]],[R[13]]]],[11,"into",R[520],E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[41],E,E,98,[[["self"]],[R[79]]]],[11,R[6],E,E,98,[[[U]],[R[1]]]],[11,R[7],E,E,98,[[],[R[1]]]],[11,R[8],E,E,98,[[["self"]],[T]]],[11,R[9],E,E,98,[[["self"]],[T]]],[11,R[10],E,E,98,[[["self"]],[R[13]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[6],E,E,99,[[[U]],[R[1]]]],[11,R[7],E,E,99,[[],[R[1]]]],[11,R[8],E,E,99,[[["self"]],[T]]],[11,R[9],E,E,99,[[["self"]],[T]]],[11,R[10],E,E,99,[[["self"]],[R[13]]]],[11,R[511],E,E,99,[[["pin"],["f"],[R[2]]],["poll"]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[6],E,E,63,[[[U]],[R[1]]]],[11,R[7],E,E,63,[[],[R[1]]]],[11,R[8],E,E,63,[[["self"]],[T]]],[11,R[9],E,E,63,[[["self"]],[T]]],[11,R[10],E,E,63,[[["self"]],[R[13]]]],[11,"into",R[504],E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[11],E,E,100,[[["self"]],[T]]],[11,R[12],E,E,100,[[["self"],[T]]]],[11,R[6],E,E,100,[[[U]],[R[1]]]],[11,R[7],E,E,100,[[],[R[1]]]],[11,R[8],E,E,100,[[["self"]],[T]]],[11,R[9],E,E,100,[[["self"]],[T]]],[11,R[10],E,E,100,[[["self"]],[R[13]]]],[11,"into",R[521],E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[6],E,E,64,[[[U]],[R[1]]]],[11,R[7],E,E,64,[[],[R[1]]]],[11,R[8],E,E,64,[[["self"]],[T]]],[11,R[9],E,E,64,[[["self"]],[T]]],[11,R[10],E,E,64,[[["self"]],[R[13]]]],[11,R[112],E,E,64,[[[R[2]],["s"],["pin"]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"into",R[504],E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[6],E,E,66,[[[U]],[R[1]]]],[11,R[7],E,E,66,[[],[R[1]]]],[11,R[8],E,E,66,[[["self"]],[T]]],[11,R[9],E,E,66,[[["self"]],[T]]],[11,R[10],E,E,66,[[["self"]],[R[13]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[41],E,E,67,[[["self"]],[R[79]]]],[11,R[6],E,E,67,[[[U]],[R[1]]]],[11,R[7],E,E,67,[[],[R[1]]]],[11,R[8],E,E,67,[[["self"]],[T]]],[11,R[9],E,E,67,[[["self"]],[T]]],[11,R[10],E,E,67,[[["self"]],[R[13]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[11],E,E,68,[[["self"]],[T]]],[11,R[12],E,E,68,[[["self"],[T]]]],[11,R[6],E,E,68,[[[U]],[R[1]]]],[11,R[7],E,E,68,[[],[R[1]]]],[11,R[8],E,E,68,[[["self"]],[T]]],[11,R[9],E,E,68,[[["self"]],[T]]],[11,R[10],E,E,68,[[["self"]],[R[13]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[6],E,E,69,[[[U]],[R[1]]]],[11,R[7],E,E,69,[[],[R[1]]]],[11,R[8],E,E,69,[[["self"]],[T]]],[11,R[9],E,E,69,[[["self"]],[T]]],[11,R[10],E,E,69,[[["self"]],[R[13]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[6],E,E,70,[[[U]],[R[1]]]],[11,R[7],E,E,70,[[],[R[1]]]],[11,R[8],E,E,70,[[["self"]],[T]]],[11,R[9],E,E,70,[[["self"]],[T]]],[11,R[10],E,E,70,[[["self"]],[R[13]]]],[11,R[511],E,E,70,[[["pin"],["f"],[R[2]]],["poll"]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[41],E,E,101,[[["self"]],[R[79]]]],[11,R[6],E,E,101,[[[U]],[R[1]]]],[11,R[7],E,E,101,[[],[R[1]]]],[11,R[8],E,E,101,[[["self"]],[T]]],[11,R[9],E,E,101,[[["self"]],[T]]],[11,R[10],E,E,101,[[["self"]],[R[13]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[6],E,E,71,[[[U]],[R[1]]]],[11,R[7],E,E,71,[[],[R[1]]]],[11,R[8],E,E,71,[[["self"]],[T]]],[11,R[9],E,E,71,[[["self"]],[T]]],[11,R[10],E,E,71,[[["self"]],[R[13]]]],[11,R[112],E,E,71,[[[R[2]],["s"],["pin"]],[["poll",[R[18]]],[R[18],[R[1]]]]]],[11,"into",R[521],E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[6],E,E,65,[[[U]],[R[1]]]],[11,R[7],E,E,65,[[],[R[1]]]],[11,R[8],E,E,65,[[["self"]],[T]]],[11,R[9],E,E,65,[[["self"]],[T]]],[11,R[10],E,E,65,[[["self"]],[R[13]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[11],E,E,102,[[["self"]],[T]]],[11,R[12],E,E,102,[[["self"],[T]]]],[11,R[6],E,E,102,[[[U]],[R[1]]]],[11,R[7],E,E,102,[[],[R[1]]]],[11,R[8],E,E,102,[[["self"]],[T]]],[11,R[9],E,E,102,[[["self"]],[T]]],[11,R[10],E,E,102,[[["self"]],[R[13]]]],[11,"cmp",R[459],E,4,[[["self"],[R[14]]],[R[16]]]],[11,"from",E,"Converts a [`NulError`] into a [`io::Error`].",72,[[["nulerror"]],["error"]]],[11,"from",E,E,72,[[["intoinnererror"]],["error"]]],[11,"from",E,"Converts an [`ErrorKind`] into an [`Error`].",72,[[[R[14]]],["error"]]],[11,"eq",E,E,4,[[["self"],[R[14]]],["bool"]]],[11,R[46],E,E,4,[[["self"],[R[14]]],[[R[18],[R[16]]],[R[16]]]]],[11,"fmt",E,E,72,[[[R[17]],["self"]],[["error"],[R[1],["error"]]]]],[11,"fmt",E,E,4,[[[R[17]],["self"]],[["error"],[R[1],["error"]]]]],[11,"description",E,E,72,[[["self"]],["str"]]],[11,"cause",E,E,72,[[["self"]],[[R[18],["error"]],["error"]]]],[11,"source",E,E,72,[[["self"]],[["error"],[R[18],["error"]]]]],[11,"clone",E,E,4,[[["self"]],[R[14]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"fmt",E,E,72,[[[R[17]],["self"]],[["error"],[R[1],["error"]]]]],[11,"div_assign",R[504],E,100,[[["self"],["u32"]]]],[11,R[530],E,E,100,[[["self"],[R[291]]]]],[11,"eq",E,E,100,[[["self"],[R[291]]],["bool"]]],[11,"ne",E,E,100,[[["self"],[R[291]]],["bool"]]],[11,R[156],E,E,100,[[],[R[291]]]],[11,"hash",E,E,100,[[["self"],["__h"]]]],[11,R[522],E,E,100,[[["self"],[R[291]]]]],[11,"cmp",E,E,100,[[["self"],[R[291]]],[R[16]]]],[11,"div",E,E,100,[[["u32"]],[R[291]]]],[11,"mul",E,E,100,[[["u32"]],[R[291]]]],[11,"mul_assign",E,E,100,[[["self"],["u32"]]]],[11,"fmt",E,E,100,[[[R[17]],["self"]],[["error"],[R[1],["error"]]]]],[11,"sum",E,E,100,[[["i"]],[R[291]]]],[11,"sum",E,E,100,[[["i"]],[R[291]]]],[11,"clone",E,E,100,[[["self"]],[R[291]]]],[11,"sub",E,E,100,[[[R[291]]],[R[291]]]],[11,R[46],E,E,100,[[["self"],[R[291]]],[[R[18],[R[16]]],[R[16]]]]],[11,"lt",E,E,100,[[["self"],[R[291]]],["bool"]]],[11,"le",E,E,100,[[["self"],[R[291]]],["bool"]]],[11,"gt",E,E,100,[[["self"],[R[291]]],["bool"]]],[11,"ge",E,E,100,[[["self"],[R[291]]],["bool"]]],[11,"add",E,E,100,[[[R[291]]],[R[291]]]],[11,R[455],R[459],E,8,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[523],E,E,8,[[["self"],[R[4]],["pin"]]]],[11,R[455],E,E,9,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[523],E,E,9,[[["self"],[R[4]],["pin"]]]],[11,R[455],E,E,10,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[523],E,E,10,[[["self"],[R[4]],["pin"]]]],[11,R[455],E,E,79,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[523],E,E,79,[[["self"],[R[4]],["pin"]]]],[11,R[455],E,E,13,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[523],E,E,13,[[["self"],[R[4]],["pin"]]]],[11,R[461],R[416],E,0,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[461],R[459],E,5,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[461],E,E,74,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[461],E,E,7,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[464],E,E,7,[[["b"],[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[461],E,E,8,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[458],E,E,8,[[["self"]],["bool"]]],[11,R[461],E,E,9,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[458],E,E,9,[[["self"]],["bool"]]],[11,R[461],E,E,10,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[458],E,E,10,[[["self"]],["bool"]]],[11,R[461],E,E,79,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[461],E,E,80,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[458],E,E,13,[[["self"]],["bool"]]],[11,R[461],E,E,13,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4],"error"]]]]],[11,R[458],R[508],E,83,[[["self"]],["bool"]]],[11,R[461],E,E,83,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[458],R[433],E,23,[[["self"]],["bool"]]],[11,R[461],E,E,23,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[458],R[509],E,86,[[["self"]],["bool"]]],[11,R[461],E,E,86,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[458],R[433],E,31,[[["self"]],["bool"]]],[11,R[461],E,E,31,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[461],R[510],E,89,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[461],E,E,90,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[524],R[416],E,0,[[[R[15]],[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[525],E,E,0,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],["u64"]]]]],[11,R[466],E,E,0,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[31],E,E,0,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[11,R[469],E,E,0,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[11,R[466],R[459],E,5,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[31],E,E,5,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[469],E,E,5,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[466],E,E,73,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[31],E,E,73,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[11,R[469],E,E,73,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[11,R[466],E,E,75,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[31],E,E,75,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[11,R[469],E,E,75,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[11,R[466],E,E,76,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4],"error"]]]]],[11,R[31],E,E,76,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[11,R[469],E,E,76,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[11,R[471],E,E,76,[[["b"],[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4],"error"]]]]],[11,R[466],E,E,8,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[31],E,E,8,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[469],E,E,8,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[466],E,E,9,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[31],E,E,9,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[469],E,E,9,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[466],E,E,10,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[31],E,E,10,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[469],E,E,10,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[466],E,E,81,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4],"error"]]]]],[11,R[31],E,E,81,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[11,R[469],E,E,81,[[[R[2]],["self"],["pin"]],[[R[1],["error"]],["poll",[R[1]]]]]],[11,R[466],R[508],E,84,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[471],E,E,84,[[["b"],[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[31],E,E,84,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[469],E,E,84,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[466],R[433],E,23,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[471],E,E,23,[[["b"],[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[31],E,E,23,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[469],E,E,23,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[466],R[509],E,87,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[31],E,E,87,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[469],E,E,87,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[466],R[433],E,31,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[31],E,E,31,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[469],E,E,31,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[466],R[510],E,88,[[[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[31],E,E,88,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,R[469],E,E,88,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1]]]]],[11,"drop",R[459],E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"drop",R[515],E,46,[[["self"]]]],[11,"drop",E,E,47,[[["self"]]]],[11,"drop",R[480],E,92,[[["self"]]]],[11,"drop",R[488],E,57,[[["self"]]]],[11,"drop",E,E,58,[[["self"]]]],[11,"drop",R[480],E,60,[[["self"]]]],[11,"drop",R[491],E,61,[[["self"]]]],[11,"drop",E,E,62,[[["self"]]]],[11,"drop",R[520],E,99,[[["self"]]]],[11,"as_ref",R[508],E,83,[[["self"]],[R[272]]]],[11,"as_ref",E,E,84,[[["self"]],[R[272]]]],[11,"as_ref",R[437],E,27,[[["self"]],[R[276]]]],[11,"as_ref",E,E,26,[[["self"]],[R[276]]]],[11,"as_ref",R[509],E,86,[[["self"]],[R[400]]]],[11,"as_ref",E,E,87,[[["self"]],[R[400]]]],[11,"from",R[416],E,0,[[["file"]],["self"]]],[11,"from",E,E,1,[[[R[415]]],[R[415]]]],[11,"from",R[459],E,9,[[[R[526]],[R[527],[R[526]]]],["self"]]],[11,"from",E,E,9,[[[R[526],[R[527]]],[R[527]]],["self"]]],[11,"from",R[510],E,32,[[["stdcommand"]],[R[473]]]],[11,"from",R[517],E,52,[[],[R[96]]]],[11,"from",E,E,53,[[],[R[95]]]],[11,"from",E,E,53,[[[R[96]]],[R[95]]]],[11,"from",R[480],E,55,[[[T]],["self"]]],[11,"from",R[459],E,72,[[["joinerror"]],["error"]]],[11,"from",R[504],E,68,[[[R[505]]],[R[505]]]],[11,"from",R[459],E,72,[[["elapsed"]],["error"]]],[11,"clone",R[416],E,1,[[["self"]],[R[415]]]],[11,"clone",R[509],E,28,[[["self"]],["ucred"]]],[11,"clone",R[512],E,35,[[["self"]],["handle"]]],[11,"clone",R[513],E,37,[[["self"]],[R[528]]]],[11,"clone",R[480],E,42,[[["self"]],["barrierwaitresult"]]],[11,"clone",R[515],E,46,[[["self"]],["sender"]]],[11,"clone",R[516],E,49,[[["self"]],["self"]]],[11,"clone",E,E,51,[[["self"]],["self"]]],[11,"clone",R[491],E,61,[[["self"]],["self"]]],[11,"clone",R[521],E,102,[[["self"]],["key"]]],[11,"clone",R[504],E,68,[[["self"]],[R[505]]]],[11,R[156],R[416],E,1,[[],["self"]]],[11,R[156],R[512],E,34,[[],["self"]]],[11,R[156],R[480],E,55,[[],["self"]]],[11,R[156],R[520],E,63,[[],["self"]]],[11,R[156],R[521],E,64,[[],[R[499]]]],[11,"eq",R[509],E,28,[[["self"],["ucred"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["ucred"]],["bool"]]],[11,"eq",R[504],E,68,[[["self"],[R[505]]],["bool"]]],[11,"ne",E,E,68,[[["self"],[R[505]]],["bool"]]],[11,R[46],E,E,68,[[["self"],[R[505]]],[[R[18],[R[16]]],[R[16]]]]],[11,"lt",E,E,68,[[["self"],[R[505]]],["bool"]]],[11,"le",E,E,68,[[["self"],[R[505]]],["bool"]]],[11,"gt",E,E,68,[[["self"],[R[505]]],["bool"]]],[11,"ge",E,E,68,[[["self"],[R[505]]],["bool"]]],[11,"fmt",R[437],E,24,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[517],E,52,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,53,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,93,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,54,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,94,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[480],E,92,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[518],E,95,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,56,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[519],E,97,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[520],E,98,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[504],E,67,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,101,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[416],E,0,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[459],E,5,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,73,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,74,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,75,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,7,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,76,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,77,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,8,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,78,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,79,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,80,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,81,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,12,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,13,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[433],E,22,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[508],E,82,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,83,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,84,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[433],E,23,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,25,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[437],E,27,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,26,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,24,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[433],E,29,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[509],E,85,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[433],E,30,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[509],E,86,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,87,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[433],E,31,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[509],E,28,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[510],E,32,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,33,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,88,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,89,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,90,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[512],E,34,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,35,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,36,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[513],E,37,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,38,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[514],E,91,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[480],E,41,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,42,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[515],E,43,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,44,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,45,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,46,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,47,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[516],E,49,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,48,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,51,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,50,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[517],E,52,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,53,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,93,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,54,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,94,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[480],E,55,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,92,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[488],E,57,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,58,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[518],E,95,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,56,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[480],E,59,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,60,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[491],E,61,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,62,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,96,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[519],E,97,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[520],E,98,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,99,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,63,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[521],E,64,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,65,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,102,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",R[504],E,66,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,67,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,68,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,69,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,70,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,101,[[["self"],[R[17]]],[R[1]]]],[11,"fmt",E,E,71,[[["self"],[R[17]]],[R[1]]]],[11,"sub",E,E,68,[[[R[505]]],[R[291]]]],[11,"sub",E,E,68,[[[R[291]]],[R[505]]]],[11,R[6],R[433],R[529],22,[[[R[271]]],[R[1]]]],[11,R[6],E,R[529],23,[[[R[272]]],[R[1]]]],[11,R[6],E,R[529],25,[[[R[276]]],[R[1]]]],[11,R[6],E,R[529],29,[[[R[390]]],[R[1]]]],[11,R[6],E,R[529],30,[[[R[395]]],[R[1]]]],[11,R[6],E,R[529],31,[[[R[400]]],[R[1]]]],[11,"add",R[504],E,68,[[[R[291]]],[R[505]]]],[11,R[530],E,E,68,[[["self"],[R[291]]]]],[11,R[522],E,E,68,[[["self"],[R[291]]]]],[11,"deref",R[480],E,92,[[["self"]]]],[11,"deref",R[491],E,96,[[["self"]],[T]]],[11,R[531],R[480],E,92,[[["self"]]]],[11,"hash",R[509],E,28,[[["self"],["__h"]]]],[11,R[321],R[416],E,0,[[["self"]],["rawfd"]]],[11,R[321],R[433],E,22,[[["self"]],["rawfd"]]],[11,R[321],E,E,23,[[["self"]],["rawfd"]]],[11,R[321],E,E,25,[[["self"]],["rawfd"]]],[11,R[321],E,E,29,[[["self"]],["rawfd"]]],[11,R[321],E,E,30,[[["self"]],["rawfd"]]],[11,R[321],E,E,31,[[["self"]],["rawfd"]]],[11,R[321],R[510],E,88,[[["self"]],["rawfd"]]],[11,R[321],E,E,89,[[["self"]],["rawfd"]]],[11,R[321],E,E,90,[[["self"]],["rawfd"]]],[11,"ino",R[416],E,3,[[["self"]],["u64"]]],[11,"poll",R[459],E,77,[[[R[2]],["self"],["pin"]],["poll"]]],[11,"poll",E,E,78,[[[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],["u64"]]]]],[11,"poll",R[510],E,33,[[[R[2]],["self"],["pin"]],["poll"]]],[11,"poll",R[488],E,58,[[[R[2]],["self"],["pin"]],["poll"]]],[11,"poll",R[520],E,99,[[[R[2]],["self"],["pin"]],["poll"]]],[11,"poll",R[504],E,66,[[[R[2]],["self"],["pin"]],["poll"]]],[11,"poll",E,E,70,[[[R[2]],["self"],["pin"]],["poll"]]],[11,R[115],R[416],E,2,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18]]]]],[11,R[115],R[459],E,11,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18]]]]],[11,R[115],E,E,12,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18]]]]],[11,R[115],R[508],E,82,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18]]]]],[11,R[115],R[509],E,85,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18]]]]],[11,R[115],R[513],E,38,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18]]]]],[11,R[115],R[514],E,91,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18]]]]],[11,R[67],E,E,91,[[["self"]]]],[11,R[115],R[516],E,48,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18]]]]],[11,R[115],E,E,50,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18]]]]],[11,R[115],R[491],E,61,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18]]]]],[11,R[115],R[521],E,64,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18]]]]],[11,R[115],R[504],E,69,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18],[R[505]]]]]],[11,R[115],E,E,71,[[[R[2]],["self"],["pin"]],[["poll",[R[18]]],[R[18]]]]],[11,"new",R[459],"Creates a new I/O error from a known kind of error as well…",72,[[["e"],[R[14]]],["error"]]],[11,"last_os_error",E,"Returns an error representing the last OS error which…",72,[[],["error"]]],[11,"from_raw_os_error",E,"Creates a new instance of an `Error` from a particular OS…",72,[[["i32"]],["error"]]],[11,"raw_os_error",E,"Returns the OS error that this error represents (if any).",72,[[["self"]],[[R[18],["i32"]],["i32"]]]],[11,R[502],E,"Returns a reference to the inner error wrapped by this…",72,[[["self"]],[["error"],[R[18],["error"]]]]],[11,R[503],E,"Returns a mutable reference to the inner error wrapped by…",72,[[["self"]],[["error"],[R[18],["error"]]]]],[11,R[123],E,"Consumes the `Error`, returning its inner error (if any).",72,[[],[["box",["error"]],[R[18],["box"]]]]],[11,"kind",E,"Returns the corresponding `ErrorKind` for this error.",72,[[["self"]],[R[14]]]],[11,R[458],E,R[460],15,[[["self"]],["bool"]]],[11,R[464],E,R[428],15,[[["b"],[R[2]],["self"],["pin"]],[[R[1],[R[4]]],["poll",[R[1]]]]]],[11,R[471],E,R[472],17,[[["b"],[R[2]],["self"],["pin"]],[["poll",[R[1]]],[R[1],[R[4],"error"]]]]],[11,R[532],E,R[533],18,[[["self"],["vec"],["u8"]],[R[534]]]],[11,R[535],E,R[536],18,[[[R[79]],["self"]],["readline"]]],[11,"split",E,R[537],18,[[["u8"]],["split"]]],[11,"lines",E,R[538],18,[[],["lines"]]],[11,"chain",E,R[539],19,[[["r"]],["chain"]]],[11,"read",E,R[428],19,[[["self"]],["read"]]],[11,"read_buf",E,R[428],19,[[["self"],["b"]],["readbuf"]]],[11,R[540],E,R[541],19,[[["self"]],[R[542]]]],[11,"read_u8",E,R[543],19,[[["self"]],[["readu8"],["self"]]]],[11,"read_i8",E,R[544],19,[[["self"]],[["readi8"],["self"]]]],[11,"read_u16",E,R[545],19,[[["self"]],[["self"],["readu16"]]]],[11,"read_i16",E,R[546],19,[[["self"]],[["readi16"],["self"]]]],[11,"read_u32",E,R[547],19,[[["self"]],[["readu32"],["self"]]]],[11,"read_i32",E,R[548],19,[[["self"]],[["readi32"],["self"]]]],[11,"read_u64",E,R[549],19,[[["self"]],[["self"],["readu64"]]]],[11,"read_i64",E,R[550],19,[[["self"]],[["self"],["readi64"]]]],[11,R[551],E,R[552],19,[[["self"]],[["readu128"],["self"]]]],[11,R[553],E,R[554],19,[[["self"]],[["self"],["readi128"]]]],[11,R[555],E,R[556],19,[[["self"],["vec"]],[R[557]]]],[11,R[429],E,R[558],19,[[[R[79]],["self"]],[R[559]]]],[11,"take",E,R[560],19,[[["u64"]],["take"]]],[11,"seek",E,R[561],20,[[["self"],[R[15]]],["seek"]]],[11,"write",E,R[562],21,[[["self"]],["write"]]],[11,R[563],E,R[564],21,[[["self"],["b"]],["writebuf"]]],[11,R[565],E,R[566],21,[[["self"]],["writeall"]]],[11,"write_u8",E,R[431],21,[[["self"],["u8"]],[["writeu8"],["self"]]]],[11,"write_i8",E,R[431],21,[[["self"],["i8"]],[["writei8"],["self"]]]],[11,R[567],E,R[568],21,[[["u16"],["self"]],[["writeu16"],["self"]]]],[11,R[569],E,R[570],21,[[["self"],["i16"]],[["writei16"],["self"]]]],[11,R[571],E,R[572],21,[[["self"],["u32"]],[["self"],["writeu32"]]]],[11,R[573],E,R[574],21,[[["self"],["i32"]],[["self"],["writei32"]]]],[11,R[575],E,R[576],21,[[["self"],["u64"]],[["writeu64"],["self"]]]],[11,R[577],E,R[578],21,[[["i64"],["self"]],[["self"],["writei64"]]]],[11,R[579],E,R[580],21,[[["self"],["u128"]],[["self"],[R[581]]]]],[11,R[582],E,R[583],21,[[["self"],["i128"]],[["self"],[R[584]]]]],[11,"flush",E,R[585],21,[[["self"]],["flush"]]],[11,R[394],E,R[586],21,[[["self"]],[R[394]]]],[18,"SECOND",R[504],"The duration of one second.",100,N],[18,"MILLISECOND",E,"The duration of one millisecond.",100,N],[18,"MICROSECOND",E,"The duration of one microsecond.",100,N],[18,"NANOSECOND",E,"The duration of one nanosecond.",100,N],[11,"new",E,R[587],100,[[["u32"],["u64"]],[R[291]]]],[11,"from_secs",E,R[587],100,[[["u64"]],[R[291]]]],[11,"from_millis",E,R[587],100,[[["u64"]],[R[291]]]],[11,"from_micros",E,R[587],100,[[["u64"]],[R[291]]]],[11,"from_nanos",E,R[587],100,[[["u64"]],[R[291]]]],[11,"as_secs",E,"Returns the number of whole seconds contained by this…",100,[[["self"]],["u64"]]],[11,"subsec_millis",E,R[588],100,[[["self"]],["u32"]]],[11,"subsec_micros",E,R[588],100,[[["self"]],["u32"]]],[11,"subsec_nanos",E,"Returns the fractional part of this `Duration`, in…",100,[[["self"]],["u32"]]],[11,"as_millis",E,"Returns the total number of whole milliseconds contained…",100,[[["self"]],["u128"]]],[11,"as_micros",E,"Returns the total number of whole microseconds contained…",100,[[["self"]],["u128"]]],[11,"as_nanos",E,"Returns the total number of nanoseconds contained by this…",100,[[["self"]],["u128"]]],[11,R[589],E,"Checked `Duration` addition. Computes `self + other`,…",100,[[[R[291]]],[[R[18],[R[291]]],[R[291]]]]],[11,R[590],E,"Checked `Duration` subtraction. Computes `self - other`,…",100,[[[R[291]]],[[R[18],[R[291]]],[R[291]]]]],[11,"checked_mul",E,"Checked `Duration` multiplication. Computes `self *…",100,[[["u32"]],[[R[18],[R[291]]],[R[291]]]]],[11,"checked_div",E,"Checked `Duration` division. Computes `self / other`,…",100,[[["u32"]],[[R[18],[R[291]]],[R[291]]]]],[11,"as_secs_f64",E,R[591],100,[[["self"]],["f64"]]],[11,"as_secs_f32",E,R[591],100,[[["self"]],["f32"]]],[11,"from_secs_f64",E,R[587],100,[[["f64"]],[R[291]]]],[11,"from_secs_f32",E,R[587],100,[[["f32"]],[R[291]]]],[11,"mul_f64",E,"Multiplies `Duration` by `f64`.",100,[[["f64"]],[R[291]]]],[11,"mul_f32",E,"Multiplies `Duration` by `f32`.",100,[[["f32"]],[R[291]]]],[11,"div_f64",E,"Divide `Duration` by `f64`.",100,[[["f64"]],[R[291]]]],[11,"div_f32",E,"Divide `Duration` by `f32`.",100,[[["f32"]],[R[291]]]],[11,"div_duration_f64",E,"Divide `Duration` by `Duration` and return `f64`.",100,[[[R[291]]],["f64"]]],[11,"div_duration_f32",E,"Divide `Duration` by `Duration` and return `f32`.",100,[[[R[291]]],["f32"]]]],"p":[[3,"File"],[3,R[592]],[3,"ReadDir"],[3,"DirEntry"],[4,R[24]],[3,R[593]],[3,R[350]],[3,R[442]],[3,R[594]],[3,R[595]],[3,R[596]],[3,"Lines"],[3,"Split"],[3,"Take"],[8,R[29]],[8,R[26]],[8,R[28]],[8,R[27]],[8,R[597]],[8,R[598]],[8,R[599]],[8,R[600]],[3,R[353]],[3,R[352]],[3,R[601]],[3,R[354]],[3,"RecvHalf"],[3,"SendHalf"],[3,"UCred"],[3,R[407]],[3,R[408]],[3,R[409]],[3,"Command"],[3,"Child"],[3,"Builder"],[3,"Handle"],[3,"Runtime"],[3,R[602]],[3,"Signal"],[8,"Stream"],[8,R[603]],[3,"Barrier"],[3,R[604]],[3,R[117]],[4,R[485]],[4,R[122]],[3,"Sender"],[3,R[120]],[3,R[120]],[3,"Sender"],[3,R[121]],[3,R[119]],[3,R[117]],[4,R[118]],[4,R[122]],[3,"Mutex"],[4,R[122]],[3,"Sender"],[3,R[120]],[3,R[605]],[3,R[606]],[3,R[120]],[3,"Sender"],[3,"LocalSet"],[3,R[498]],[3,"Expired"],[3,"Delay"],[3,"Error"],[3,"Instant"],[3,"Interval"],[3,"Timeout"],[3,"Throttle"],[3,"Error"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,R[432]],[3,"Seek"],[3,"Copy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,R[607]],[3,R[442]],[3,R[432]],[3,R[607]],[3,R[442]],[3,R[432]],[3,R[608]],[3,R[609]],[3,R[610]],[3,"Iter"],[3,R[611]],[3,R[485]],[3,R[612]],[3,R[485]],[3,"Ref"],[3,R[117]],[3,R[613]],[3,R[614]],[3,"Duration"],[3,"Elapsed"],[3,"Key"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);